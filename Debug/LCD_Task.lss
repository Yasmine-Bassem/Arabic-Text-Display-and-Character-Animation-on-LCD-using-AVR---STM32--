
LCD_Task.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000034b0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000009e  00800060  000034b0  00003524  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001eb4  00000000  00000000  000035c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000bb4  00000000  00000000  00005478  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  0000602c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000018f  00000000  00000000  0000618c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002045  00000000  00000000  0000631b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001101  00000000  00000000  00008360  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f82  00000000  00000000  00009461  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  0000a3e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c2  00000000  00000000  0000a564  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000088e  00000000  00000000  0000a826  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b0b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 eb       	ldi	r30, 0xB0	; 176
      68:	f4 e3       	ldi	r31, 0x34	; 52
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 3f       	cpi	r26, 0xFE	; 254
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <main>
      7a:	0c 94 56 1a 	jmp	0x34ac	; 0x34ac <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 1f 1a 	jmp	0x343e	; 0x343e <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	ae e8       	ldi	r26, 0x8E	; 142
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 3b 1a 	jmp	0x3476	; 0x3476 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 2b 1a 	jmp	0x3456	; 0x3456 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 47 1a 	jmp	0x348e	; 0x348e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 2b 1a 	jmp	0x3456	; 0x3456 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 47 1a 	jmp	0x348e	; 0x348e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 1f 1a 	jmp	0x343e	; 0x343e <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	8e e8       	ldi	r24, 0x8E	; 142
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 3b 1a 	jmp	0x3476	; 0x3476 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 27 1a 	jmp	0x344e	; 0x344e <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	6e e8       	ldi	r22, 0x8E	; 142
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 43 1a 	jmp	0x3486	; 0x3486 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 2b 1a 	jmp	0x3456	; 0x3456 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 47 1a 	jmp	0x348e	; 0x348e <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 2b 1a 	jmp	0x3456	; 0x3456 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 47 1a 	jmp	0x348e	; 0x348e <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 2b 1a 	jmp	0x3456	; 0x3456 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 47 1a 	jmp	0x348e	; 0x348e <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 2f 1a 	jmp	0x345e	; 0x345e <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 4b 1a 	jmp	0x3496	; 0x3496 <__epilogue_restores__+0x20>

00000942 <__pack_f>:
     942:	df 92       	push	r13
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	fc 01       	movw	r30, r24
     94e:	e4 80       	ldd	r14, Z+4	; 0x04
     950:	f5 80       	ldd	r15, Z+5	; 0x05
     952:	06 81       	ldd	r16, Z+6	; 0x06
     954:	17 81       	ldd	r17, Z+7	; 0x07
     956:	d1 80       	ldd	r13, Z+1	; 0x01
     958:	80 81       	ld	r24, Z
     95a:	82 30       	cpi	r24, 0x02	; 2
     95c:	48 f4       	brcc	.+18     	; 0x970 <__pack_f+0x2e>
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	a0 e1       	ldi	r26, 0x10	; 16
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	e8 2a       	or	r14, r24
     968:	f9 2a       	or	r15, r25
     96a:	0a 2b       	or	r16, r26
     96c:	1b 2b       	or	r17, r27
     96e:	a5 c0       	rjmp	.+330    	; 0xaba <__pack_f+0x178>
     970:	84 30       	cpi	r24, 0x04	; 4
     972:	09 f4       	brne	.+2      	; 0x976 <__pack_f+0x34>
     974:	9f c0       	rjmp	.+318    	; 0xab4 <__pack_f+0x172>
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	21 f4       	brne	.+8      	; 0x982 <__pack_f+0x40>
     97a:	ee 24       	eor	r14, r14
     97c:	ff 24       	eor	r15, r15
     97e:	87 01       	movw	r16, r14
     980:	05 c0       	rjmp	.+10     	; 0x98c <__pack_f+0x4a>
     982:	e1 14       	cp	r14, r1
     984:	f1 04       	cpc	r15, r1
     986:	01 05       	cpc	r16, r1
     988:	11 05       	cpc	r17, r1
     98a:	19 f4       	brne	.+6      	; 0x992 <__pack_f+0x50>
     98c:	e0 e0       	ldi	r30, 0x00	; 0
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	96 c0       	rjmp	.+300    	; 0xabe <__pack_f+0x17c>
     992:	62 81       	ldd	r22, Z+2	; 0x02
     994:	73 81       	ldd	r23, Z+3	; 0x03
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	62 38       	cpi	r22, 0x82	; 130
     99a:	79 07       	cpc	r23, r25
     99c:	0c f0       	brlt	.+2      	; 0x9a0 <__pack_f+0x5e>
     99e:	5b c0       	rjmp	.+182    	; 0xa56 <__pack_f+0x114>
     9a0:	22 e8       	ldi	r18, 0x82	; 130
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	26 1b       	sub	r18, r22
     9a6:	37 0b       	sbc	r19, r23
     9a8:	2a 31       	cpi	r18, 0x1A	; 26
     9aa:	31 05       	cpc	r19, r1
     9ac:	2c f0       	brlt	.+10     	; 0x9b8 <__pack_f+0x76>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	2a c0       	rjmp	.+84     	; 0xa0c <__pack_f+0xca>
     9b8:	b8 01       	movw	r22, r16
     9ba:	a7 01       	movw	r20, r14
     9bc:	02 2e       	mov	r0, r18
     9be:	04 c0       	rjmp	.+8      	; 0x9c8 <__pack_f+0x86>
     9c0:	76 95       	lsr	r23
     9c2:	67 95       	ror	r22
     9c4:	57 95       	ror	r21
     9c6:	47 95       	ror	r20
     9c8:	0a 94       	dec	r0
     9ca:	d2 f7       	brpl	.-12     	; 0x9c0 <__pack_f+0x7e>
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__pack_f+0x9c>
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	aa 1f       	adc	r26, r26
     9dc:	bb 1f       	adc	r27, r27
     9de:	2a 95       	dec	r18
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__pack_f+0x94>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	a1 09       	sbc	r26, r1
     9e6:	b1 09       	sbc	r27, r1
     9e8:	8e 21       	and	r24, r14
     9ea:	9f 21       	and	r25, r15
     9ec:	a0 23       	and	r26, r16
     9ee:	b1 23       	and	r27, r17
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__pack_f+0xbe>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	9a 01       	movw	r18, r20
     a02:	ab 01       	movw	r20, r22
     a04:	28 2b       	or	r18, r24
     a06:	39 2b       	or	r19, r25
     a08:	4a 2b       	or	r20, r26
     a0a:	5b 2b       	or	r21, r27
     a0c:	da 01       	movw	r26, r20
     a0e:	c9 01       	movw	r24, r18
     a10:	8f 77       	andi	r24, 0x7F	; 127
     a12:	90 70       	andi	r25, 0x00	; 0
     a14:	a0 70       	andi	r26, 0x00	; 0
     a16:	b0 70       	andi	r27, 0x00	; 0
     a18:	80 34       	cpi	r24, 0x40	; 64
     a1a:	91 05       	cpc	r25, r1
     a1c:	a1 05       	cpc	r26, r1
     a1e:	b1 05       	cpc	r27, r1
     a20:	39 f4       	brne	.+14     	; 0xa30 <__pack_f+0xee>
     a22:	27 ff       	sbrs	r18, 7
     a24:	09 c0       	rjmp	.+18     	; 0xa38 <__pack_f+0xf6>
     a26:	20 5c       	subi	r18, 0xC0	; 192
     a28:	3f 4f       	sbci	r19, 0xFF	; 255
     a2a:	4f 4f       	sbci	r20, 0xFF	; 255
     a2c:	5f 4f       	sbci	r21, 0xFF	; 255
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <__pack_f+0xf6>
     a30:	21 5c       	subi	r18, 0xC1	; 193
     a32:	3f 4f       	sbci	r19, 0xFF	; 255
     a34:	4f 4f       	sbci	r20, 0xFF	; 255
     a36:	5f 4f       	sbci	r21, 0xFF	; 255
     a38:	e0 e0       	ldi	r30, 0x00	; 0
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	20 30       	cpi	r18, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	3a 07       	cpc	r19, r26
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	4a 07       	cpc	r20, r26
     a46:	a0 e4       	ldi	r26, 0x40	; 64
     a48:	5a 07       	cpc	r21, r26
     a4a:	10 f0       	brcs	.+4      	; 0xa50 <__pack_f+0x10e>
     a4c:	e1 e0       	ldi	r30, 0x01	; 1
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	79 01       	movw	r14, r18
     a52:	8a 01       	movw	r16, r20
     a54:	27 c0       	rjmp	.+78     	; 0xaa4 <__pack_f+0x162>
     a56:	60 38       	cpi	r22, 0x80	; 128
     a58:	71 05       	cpc	r23, r1
     a5a:	64 f5       	brge	.+88     	; 0xab4 <__pack_f+0x172>
     a5c:	fb 01       	movw	r30, r22
     a5e:	e1 58       	subi	r30, 0x81	; 129
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	d8 01       	movw	r26, r16
     a64:	c7 01       	movw	r24, r14
     a66:	8f 77       	andi	r24, 0x7F	; 127
     a68:	90 70       	andi	r25, 0x00	; 0
     a6a:	a0 70       	andi	r26, 0x00	; 0
     a6c:	b0 70       	andi	r27, 0x00	; 0
     a6e:	80 34       	cpi	r24, 0x40	; 64
     a70:	91 05       	cpc	r25, r1
     a72:	a1 05       	cpc	r26, r1
     a74:	b1 05       	cpc	r27, r1
     a76:	39 f4       	brne	.+14     	; 0xa86 <__pack_f+0x144>
     a78:	e7 fe       	sbrs	r14, 7
     a7a:	0d c0       	rjmp	.+26     	; 0xa96 <__pack_f+0x154>
     a7c:	80 e4       	ldi	r24, 0x40	; 64
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	a0 e0       	ldi	r26, 0x00	; 0
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__pack_f+0x14c>
     a86:	8f e3       	ldi	r24, 0x3F	; 63
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	e8 0e       	add	r14, r24
     a90:	f9 1e       	adc	r15, r25
     a92:	0a 1f       	adc	r16, r26
     a94:	1b 1f       	adc	r17, r27
     a96:	17 ff       	sbrs	r17, 7
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__pack_f+0x162>
     a9a:	16 95       	lsr	r17
     a9c:	07 95       	ror	r16
     a9e:	f7 94       	ror	r15
     aa0:	e7 94       	ror	r14
     aa2:	31 96       	adiw	r30, 0x01	; 1
     aa4:	87 e0       	ldi	r24, 0x07	; 7
     aa6:	16 95       	lsr	r17
     aa8:	07 95       	ror	r16
     aaa:	f7 94       	ror	r15
     aac:	e7 94       	ror	r14
     aae:	8a 95       	dec	r24
     ab0:	d1 f7       	brne	.-12     	; 0xaa6 <__pack_f+0x164>
     ab2:	05 c0       	rjmp	.+10     	; 0xabe <__pack_f+0x17c>
     ab4:	ee 24       	eor	r14, r14
     ab6:	ff 24       	eor	r15, r15
     ab8:	87 01       	movw	r16, r14
     aba:	ef ef       	ldi	r30, 0xFF	; 255
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	6e 2f       	mov	r22, r30
     ac0:	67 95       	ror	r22
     ac2:	66 27       	eor	r22, r22
     ac4:	67 95       	ror	r22
     ac6:	90 2f       	mov	r25, r16
     ac8:	9f 77       	andi	r25, 0x7F	; 127
     aca:	d7 94       	ror	r13
     acc:	dd 24       	eor	r13, r13
     ace:	d7 94       	ror	r13
     ad0:	8e 2f       	mov	r24, r30
     ad2:	86 95       	lsr	r24
     ad4:	49 2f       	mov	r20, r25
     ad6:	46 2b       	or	r20, r22
     ad8:	58 2f       	mov	r21, r24
     ada:	5d 29       	or	r21, r13
     adc:	b7 01       	movw	r22, r14
     ade:	ca 01       	movw	r24, r20
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	08 95       	ret

00000aec <__unpack_f>:
     aec:	fc 01       	movw	r30, r24
     aee:	db 01       	movw	r26, r22
     af0:	40 81       	ld	r20, Z
     af2:	51 81       	ldd	r21, Z+1	; 0x01
     af4:	22 81       	ldd	r18, Z+2	; 0x02
     af6:	62 2f       	mov	r22, r18
     af8:	6f 77       	andi	r22, 0x7F	; 127
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	22 1f       	adc	r18, r18
     afe:	22 27       	eor	r18, r18
     b00:	22 1f       	adc	r18, r18
     b02:	93 81       	ldd	r25, Z+3	; 0x03
     b04:	89 2f       	mov	r24, r25
     b06:	88 0f       	add	r24, r24
     b08:	82 2b       	or	r24, r18
     b0a:	28 2f       	mov	r18, r24
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	99 1f       	adc	r25, r25
     b10:	99 27       	eor	r25, r25
     b12:	99 1f       	adc	r25, r25
     b14:	11 96       	adiw	r26, 0x01	; 1
     b16:	9c 93       	st	X, r25
     b18:	11 97       	sbiw	r26, 0x01	; 1
     b1a:	21 15       	cp	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	a9 f5       	brne	.+106    	; 0xb8a <__unpack_f+0x9e>
     b20:	41 15       	cp	r20, r1
     b22:	51 05       	cpc	r21, r1
     b24:	61 05       	cpc	r22, r1
     b26:	71 05       	cpc	r23, r1
     b28:	11 f4       	brne	.+4      	; 0xb2e <__unpack_f+0x42>
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	37 c0       	rjmp	.+110    	; 0xb9c <__unpack_f+0xb0>
     b2e:	82 e8       	ldi	r24, 0x82	; 130
     b30:	9f ef       	ldi	r25, 0xFF	; 255
     b32:	13 96       	adiw	r26, 0x03	; 3
     b34:	9c 93       	st	X, r25
     b36:	8e 93       	st	-X, r24
     b38:	12 97       	sbiw	r26, 0x02	; 2
     b3a:	9a 01       	movw	r18, r20
     b3c:	ab 01       	movw	r20, r22
     b3e:	67 e0       	ldi	r22, 0x07	; 7
     b40:	22 0f       	add	r18, r18
     b42:	33 1f       	adc	r19, r19
     b44:	44 1f       	adc	r20, r20
     b46:	55 1f       	adc	r21, r21
     b48:	6a 95       	dec	r22
     b4a:	d1 f7       	brne	.-12     	; 0xb40 <__unpack_f+0x54>
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	8c 93       	st	X, r24
     b50:	0d c0       	rjmp	.+26     	; 0xb6c <__unpack_f+0x80>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	44 1f       	adc	r20, r20
     b58:	55 1f       	adc	r21, r21
     b5a:	12 96       	adiw	r26, 0x02	; 2
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	13 97       	sbiw	r26, 0x03	; 3
     b62:	01 97       	sbiw	r24, 0x01	; 1
     b64:	13 96       	adiw	r26, 0x03	; 3
     b66:	9c 93       	st	X, r25
     b68:	8e 93       	st	-X, r24
     b6a:	12 97       	sbiw	r26, 0x02	; 2
     b6c:	20 30       	cpi	r18, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	38 07       	cpc	r19, r24
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	48 07       	cpc	r20, r24
     b76:	80 e4       	ldi	r24, 0x40	; 64
     b78:	58 07       	cpc	r21, r24
     b7a:	58 f3       	brcs	.-42     	; 0xb52 <__unpack_f+0x66>
     b7c:	14 96       	adiw	r26, 0x04	; 4
     b7e:	2d 93       	st	X+, r18
     b80:	3d 93       	st	X+, r19
     b82:	4d 93       	st	X+, r20
     b84:	5c 93       	st	X, r21
     b86:	17 97       	sbiw	r26, 0x07	; 7
     b88:	08 95       	ret
     b8a:	2f 3f       	cpi	r18, 0xFF	; 255
     b8c:	31 05       	cpc	r19, r1
     b8e:	79 f4       	brne	.+30     	; 0xbae <__unpack_f+0xc2>
     b90:	41 15       	cp	r20, r1
     b92:	51 05       	cpc	r21, r1
     b94:	61 05       	cpc	r22, r1
     b96:	71 05       	cpc	r23, r1
     b98:	19 f4       	brne	.+6      	; 0xba0 <__unpack_f+0xb4>
     b9a:	84 e0       	ldi	r24, 0x04	; 4
     b9c:	8c 93       	st	X, r24
     b9e:	08 95       	ret
     ba0:	64 ff       	sbrs	r22, 4
     ba2:	03 c0       	rjmp	.+6      	; 0xbaa <__unpack_f+0xbe>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	8c 93       	st	X, r24
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <__unpack_f+0xe2>
     baa:	1c 92       	st	X, r1
     bac:	10 c0       	rjmp	.+32     	; 0xbce <__unpack_f+0xe2>
     bae:	2f 57       	subi	r18, 0x7F	; 127
     bb0:	30 40       	sbci	r19, 0x00	; 0
     bb2:	13 96       	adiw	r26, 0x03	; 3
     bb4:	3c 93       	st	X, r19
     bb6:	2e 93       	st	-X, r18
     bb8:	12 97       	sbiw	r26, 0x02	; 2
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	8c 93       	st	X, r24
     bbe:	87 e0       	ldi	r24, 0x07	; 7
     bc0:	44 0f       	add	r20, r20
     bc2:	55 1f       	adc	r21, r21
     bc4:	66 1f       	adc	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	8a 95       	dec	r24
     bca:	d1 f7       	brne	.-12     	; 0xbc0 <__unpack_f+0xd4>
     bcc:	70 64       	ori	r23, 0x40	; 64
     bce:	14 96       	adiw	r26, 0x04	; 4
     bd0:	4d 93       	st	X+, r20
     bd2:	5d 93       	st	X+, r21
     bd4:	6d 93       	st	X+, r22
     bd6:	7c 93       	st	X, r23
     bd8:	17 97       	sbiw	r26, 0x07	; 7
     bda:	08 95       	ret

00000bdc <__fpcmp_parts_f>:
     bdc:	1f 93       	push	r17
     bde:	dc 01       	movw	r26, r24
     be0:	fb 01       	movw	r30, r22
     be2:	9c 91       	ld	r25, X
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	08 f4       	brcc	.+2      	; 0xbea <__fpcmp_parts_f+0xe>
     be8:	47 c0       	rjmp	.+142    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bea:	80 81       	ld	r24, Z
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	08 f4       	brcc	.+2      	; 0xbf2 <__fpcmp_parts_f+0x16>
     bf0:	43 c0       	rjmp	.+134    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bf2:	94 30       	cpi	r25, 0x04	; 4
     bf4:	51 f4       	brne	.+20     	; 0xc0a <__fpcmp_parts_f+0x2e>
     bf6:	11 96       	adiw	r26, 0x01	; 1
     bf8:	1c 91       	ld	r17, X
     bfa:	84 30       	cpi	r24, 0x04	; 4
     bfc:	99 f5       	brne	.+102    	; 0xc64 <__fpcmp_parts_f+0x88>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	68 2f       	mov	r22, r24
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	61 1b       	sub	r22, r17
     c06:	71 09       	sbc	r23, r1
     c08:	3f c0       	rjmp	.+126    	; 0xc88 <__fpcmp_parts_f+0xac>
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	21 f0       	breq	.+8      	; 0xc16 <__fpcmp_parts_f+0x3a>
     c0e:	92 30       	cpi	r25, 0x02	; 2
     c10:	31 f4       	brne	.+12     	; 0xc1e <__fpcmp_parts_f+0x42>
     c12:	82 30       	cpi	r24, 0x02	; 2
     c14:	b9 f1       	breq	.+110    	; 0xc84 <__fpcmp_parts_f+0xa8>
     c16:	81 81       	ldd	r24, Z+1	; 0x01
     c18:	88 23       	and	r24, r24
     c1a:	89 f1       	breq	.+98     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c1c:	2d c0       	rjmp	.+90     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c1e:	11 96       	adiw	r26, 0x01	; 1
     c20:	1c 91       	ld	r17, X
     c22:	11 97       	sbiw	r26, 0x01	; 1
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	f1 f0       	breq	.+60     	; 0xc64 <__fpcmp_parts_f+0x88>
     c28:	81 81       	ldd	r24, Z+1	; 0x01
     c2a:	18 17       	cp	r17, r24
     c2c:	d9 f4       	brne	.+54     	; 0xc64 <__fpcmp_parts_f+0x88>
     c2e:	12 96       	adiw	r26, 0x02	; 2
     c30:	2d 91       	ld	r18, X+
     c32:	3c 91       	ld	r19, X
     c34:	13 97       	sbiw	r26, 0x03	; 3
     c36:	82 81       	ldd	r24, Z+2	; 0x02
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	82 17       	cp	r24, r18
     c3c:	93 07       	cpc	r25, r19
     c3e:	94 f0       	brlt	.+36     	; 0xc64 <__fpcmp_parts_f+0x88>
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	bc f0       	brlt	.+46     	; 0xc74 <__fpcmp_parts_f+0x98>
     c46:	14 96       	adiw	r26, 0x04	; 4
     c48:	8d 91       	ld	r24, X+
     c4a:	9d 91       	ld	r25, X+
     c4c:	0d 90       	ld	r0, X+
     c4e:	bc 91       	ld	r27, X
     c50:	a0 2d       	mov	r26, r0
     c52:	24 81       	ldd	r18, Z+4	; 0x04
     c54:	35 81       	ldd	r19, Z+5	; 0x05
     c56:	46 81       	ldd	r20, Z+6	; 0x06
     c58:	57 81       	ldd	r21, Z+7	; 0x07
     c5a:	28 17       	cp	r18, r24
     c5c:	39 07       	cpc	r19, r25
     c5e:	4a 07       	cpc	r20, r26
     c60:	5b 07       	cpc	r21, r27
     c62:	18 f4       	brcc	.+6      	; 0xc6a <__fpcmp_parts_f+0x8e>
     c64:	11 23       	and	r17, r17
     c66:	41 f0       	breq	.+16     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c68:	0a c0       	rjmp	.+20     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c6a:	82 17       	cp	r24, r18
     c6c:	93 07       	cpc	r25, r19
     c6e:	a4 07       	cpc	r26, r20
     c70:	b5 07       	cpc	r27, r21
     c72:	40 f4       	brcc	.+16     	; 0xc84 <__fpcmp_parts_f+0xa8>
     c74:	11 23       	and	r17, r17
     c76:	19 f0       	breq	.+6      	; 0xc7e <__fpcmp_parts_f+0xa2>
     c78:	61 e0       	ldi	r22, 0x01	; 1
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	05 c0       	rjmp	.+10     	; 0xc88 <__fpcmp_parts_f+0xac>
     c7e:	6f ef       	ldi	r22, 0xFF	; 255
     c80:	7f ef       	ldi	r23, 0xFF	; 255
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <__fpcmp_parts_f+0xac>
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	cb 01       	movw	r24, r22
     c8a:	1f 91       	pop	r17
     c8c:	08 95       	ret

00000c8e <DIO_SelectDirectionForGroup>:
#include "../HEADER/DIO_REGISTER.h"
#include "../HEADER/DIO_PRIVATE.h"
#include "../HEADER/DIO_INTERFACE.h"


void DIO_SelectDirectionForGroup(u8 groupName , u8 directionState){
     c8e:	df 93       	push	r29
     c90:	cf 93       	push	r28
     c92:	00 d0       	rcall	.+0      	; 0xc94 <DIO_SelectDirectionForGroup+0x6>
     c94:	00 d0       	rcall	.+0      	; 0xc96 <DIO_SelectDirectionForGroup+0x8>
     c96:	cd b7       	in	r28, 0x3d	; 61
     c98:	de b7       	in	r29, 0x3e	; 62
     c9a:	89 83       	std	Y+1, r24	; 0x01
     c9c:	6a 83       	std	Y+2, r22	; 0x02

		switch(groupName){
     c9e:	89 81       	ldd	r24, Y+1	; 0x01
     ca0:	28 2f       	mov	r18, r24
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	3c 83       	std	Y+4, r19	; 0x04
     ca6:	2b 83       	std	Y+3, r18	; 0x03
     ca8:	8b 81       	ldd	r24, Y+3	; 0x03
     caa:	9c 81       	ldd	r25, Y+4	; 0x04
     cac:	82 30       	cpi	r24, 0x02	; 2
     cae:	91 05       	cpc	r25, r1
     cb0:	d9 f0       	breq	.+54     	; 0xce8 <DIO_SelectDirectionForGroup+0x5a>
     cb2:	2b 81       	ldd	r18, Y+3	; 0x03
     cb4:	3c 81       	ldd	r19, Y+4	; 0x04
     cb6:	23 30       	cpi	r18, 0x03	; 3
     cb8:	31 05       	cpc	r19, r1
     cba:	34 f4       	brge	.+12     	; 0xcc8 <DIO_SelectDirectionForGroup+0x3a>
     cbc:	8b 81       	ldd	r24, Y+3	; 0x03
     cbe:	9c 81       	ldd	r25, Y+4	; 0x04
     cc0:	81 30       	cpi	r24, 0x01	; 1
     cc2:	91 05       	cpc	r25, r1
     cc4:	61 f0       	breq	.+24     	; 0xcde <DIO_SelectDirectionForGroup+0x50>
     cc6:	1e c0       	rjmp	.+60     	; 0xd04 <DIO_SelectDirectionForGroup+0x76>
     cc8:	2b 81       	ldd	r18, Y+3	; 0x03
     cca:	3c 81       	ldd	r19, Y+4	; 0x04
     ccc:	23 30       	cpi	r18, 0x03	; 3
     cce:	31 05       	cpc	r19, r1
     cd0:	81 f0       	breq	.+32     	; 0xcf2 <DIO_SelectDirectionForGroup+0x64>
     cd2:	8b 81       	ldd	r24, Y+3	; 0x03
     cd4:	9c 81       	ldd	r25, Y+4	; 0x04
     cd6:	84 30       	cpi	r24, 0x04	; 4
     cd8:	91 05       	cpc	r25, r1
     cda:	81 f0       	breq	.+32     	; 0xcfc <DIO_SelectDirectionForGroup+0x6e>
     cdc:	13 c0       	rjmp	.+38     	; 0xd04 <DIO_SelectDirectionForGroup+0x76>
				case DIO_GROUPA:
					DIO_DDRA = directionState;
     cde:	ea e3       	ldi	r30, 0x3A	; 58
     ce0:	f0 e0       	ldi	r31, 0x00	; 0
     ce2:	8a 81       	ldd	r24, Y+2	; 0x02
     ce4:	80 83       	st	Z, r24
     ce6:	0e c0       	rjmp	.+28     	; 0xd04 <DIO_SelectDirectionForGroup+0x76>
				break;
				case DIO_GROUPB:
					DIO_DDRB = directionState;
     ce8:	e7 e3       	ldi	r30, 0x37	; 55
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	8a 81       	ldd	r24, Y+2	; 0x02
     cee:	80 83       	st	Z, r24
     cf0:	09 c0       	rjmp	.+18     	; 0xd04 <DIO_SelectDirectionForGroup+0x76>
				break;
				case DIO_GROUPC:
					DIO_DDRC = directionState;
     cf2:	e4 e3       	ldi	r30, 0x34	; 52
     cf4:	f0 e0       	ldi	r31, 0x00	; 0
     cf6:	8a 81       	ldd	r24, Y+2	; 0x02
     cf8:	80 83       	st	Z, r24
     cfa:	04 c0       	rjmp	.+8      	; 0xd04 <DIO_SelectDirectionForGroup+0x76>
				break;
				case DIO_GROUPD:
					DIO_DDRD = directionState;
     cfc:	e1 e3       	ldi	r30, 0x31	; 49
     cfe:	f0 e0       	ldi	r31, 0x00	; 0
     d00:	8a 81       	ldd	r24, Y+2	; 0x02
     d02:	80 83       	st	Z, r24
				break;
		}


}
     d04:	0f 90       	pop	r0
     d06:	0f 90       	pop	r0
     d08:	0f 90       	pop	r0
     d0a:	0f 90       	pop	r0
     d0c:	cf 91       	pop	r28
     d0e:	df 91       	pop	r29
     d10:	08 95       	ret

00000d12 <DIO_SelectDirectionForPin>:

void DIO_SelectDirectionForPin(u8 groupName , u8 pinName , u8 directionState){
     d12:	df 93       	push	r29
     d14:	cf 93       	push	r28
     d16:	cd b7       	in	r28, 0x3d	; 61
     d18:	de b7       	in	r29, 0x3e	; 62
     d1a:	27 97       	sbiw	r28, 0x07	; 7
     d1c:	0f b6       	in	r0, 0x3f	; 63
     d1e:	f8 94       	cli
     d20:	de bf       	out	0x3e, r29	; 62
     d22:	0f be       	out	0x3f, r0	; 63
     d24:	cd bf       	out	0x3d, r28	; 61
     d26:	89 83       	std	Y+1, r24	; 0x01
     d28:	6a 83       	std	Y+2, r22	; 0x02
     d2a:	4b 83       	std	Y+3, r20	; 0x03
	if(directionState == OUTPUT ){
     d2c:	8b 81       	ldd	r24, Y+3	; 0x03
     d2e:	81 30       	cpi	r24, 0x01	; 1
     d30:	09 f0       	breq	.+2      	; 0xd34 <DIO_SelectDirectionForPin+0x22>
     d32:	70 c0       	rjmp	.+224    	; 0xe14 <DIO_SelectDirectionForPin+0x102>
			switch(groupName){
     d34:	89 81       	ldd	r24, Y+1	; 0x01
     d36:	28 2f       	mov	r18, r24
     d38:	30 e0       	ldi	r19, 0x00	; 0
     d3a:	3f 83       	std	Y+7, r19	; 0x07
     d3c:	2e 83       	std	Y+6, r18	; 0x06
     d3e:	8e 81       	ldd	r24, Y+6	; 0x06
     d40:	9f 81       	ldd	r25, Y+7	; 0x07
     d42:	82 30       	cpi	r24, 0x02	; 2
     d44:	91 05       	cpc	r25, r1
     d46:	51 f1       	breq	.+84     	; 0xd9c <DIO_SelectDirectionForPin+0x8a>
     d48:	2e 81       	ldd	r18, Y+6	; 0x06
     d4a:	3f 81       	ldd	r19, Y+7	; 0x07
     d4c:	23 30       	cpi	r18, 0x03	; 3
     d4e:	31 05       	cpc	r19, r1
     d50:	34 f4       	brge	.+12     	; 0xd5e <DIO_SelectDirectionForPin+0x4c>
     d52:	8e 81       	ldd	r24, Y+6	; 0x06
     d54:	9f 81       	ldd	r25, Y+7	; 0x07
     d56:	81 30       	cpi	r24, 0x01	; 1
     d58:	91 05       	cpc	r25, r1
     d5a:	61 f0       	breq	.+24     	; 0xd74 <DIO_SelectDirectionForPin+0x62>
     d5c:	d3 c0       	rjmp	.+422    	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
     d5e:	2e 81       	ldd	r18, Y+6	; 0x06
     d60:	3f 81       	ldd	r19, Y+7	; 0x07
     d62:	23 30       	cpi	r18, 0x03	; 3
     d64:	31 05       	cpc	r19, r1
     d66:	71 f1       	breq	.+92     	; 0xdc4 <DIO_SelectDirectionForPin+0xb2>
     d68:	8e 81       	ldd	r24, Y+6	; 0x06
     d6a:	9f 81       	ldd	r25, Y+7	; 0x07
     d6c:	84 30       	cpi	r24, 0x04	; 4
     d6e:	91 05       	cpc	r25, r1
     d70:	e9 f1       	breq	.+122    	; 0xdec <DIO_SelectDirectionForPin+0xda>
     d72:	c8 c0       	rjmp	.+400    	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
					case DIO_GROUPA:	SET_BIT(DIO_DDRA,pinName);	break;
     d74:	aa e3       	ldi	r26, 0x3A	; 58
     d76:	b0 e0       	ldi	r27, 0x00	; 0
     d78:	ea e3       	ldi	r30, 0x3A	; 58
     d7a:	f0 e0       	ldi	r31, 0x00	; 0
     d7c:	80 81       	ld	r24, Z
     d7e:	48 2f       	mov	r20, r24
     d80:	8a 81       	ldd	r24, Y+2	; 0x02
     d82:	28 2f       	mov	r18, r24
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	81 e0       	ldi	r24, 0x01	; 1
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	02 2e       	mov	r0, r18
     d8c:	02 c0       	rjmp	.+4      	; 0xd92 <DIO_SelectDirectionForPin+0x80>
     d8e:	88 0f       	add	r24, r24
     d90:	99 1f       	adc	r25, r25
     d92:	0a 94       	dec	r0
     d94:	e2 f7       	brpl	.-8      	; 0xd8e <DIO_SelectDirectionForPin+0x7c>
     d96:	84 2b       	or	r24, r20
     d98:	8c 93       	st	X, r24
     d9a:	b4 c0       	rjmp	.+360    	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
					case DIO_GROUPB:	SET_BIT(DIO_DDRB,pinName);  break;
     d9c:	a7 e3       	ldi	r26, 0x37	; 55
     d9e:	b0 e0       	ldi	r27, 0x00	; 0
     da0:	e7 e3       	ldi	r30, 0x37	; 55
     da2:	f0 e0       	ldi	r31, 0x00	; 0
     da4:	80 81       	ld	r24, Z
     da6:	48 2f       	mov	r20, r24
     da8:	8a 81       	ldd	r24, Y+2	; 0x02
     daa:	28 2f       	mov	r18, r24
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	81 e0       	ldi	r24, 0x01	; 1
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	02 2e       	mov	r0, r18
     db4:	02 c0       	rjmp	.+4      	; 0xdba <DIO_SelectDirectionForPin+0xa8>
     db6:	88 0f       	add	r24, r24
     db8:	99 1f       	adc	r25, r25
     dba:	0a 94       	dec	r0
     dbc:	e2 f7       	brpl	.-8      	; 0xdb6 <DIO_SelectDirectionForPin+0xa4>
     dbe:	84 2b       	or	r24, r20
     dc0:	8c 93       	st	X, r24
     dc2:	a0 c0       	rjmp	.+320    	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
					case DIO_GROUPC:	SET_BIT(DIO_DDRC,pinName);	break;
     dc4:	a4 e3       	ldi	r26, 0x34	; 52
     dc6:	b0 e0       	ldi	r27, 0x00	; 0
     dc8:	e4 e3       	ldi	r30, 0x34	; 52
     dca:	f0 e0       	ldi	r31, 0x00	; 0
     dcc:	80 81       	ld	r24, Z
     dce:	48 2f       	mov	r20, r24
     dd0:	8a 81       	ldd	r24, Y+2	; 0x02
     dd2:	28 2f       	mov	r18, r24
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	81 e0       	ldi	r24, 0x01	; 1
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	02 2e       	mov	r0, r18
     ddc:	02 c0       	rjmp	.+4      	; 0xde2 <DIO_SelectDirectionForPin+0xd0>
     dde:	88 0f       	add	r24, r24
     de0:	99 1f       	adc	r25, r25
     de2:	0a 94       	dec	r0
     de4:	e2 f7       	brpl	.-8      	; 0xdde <DIO_SelectDirectionForPin+0xcc>
     de6:	84 2b       	or	r24, r20
     de8:	8c 93       	st	X, r24
     dea:	8c c0       	rjmp	.+280    	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
					case DIO_GROUPD:	SET_BIT(DIO_DDRD,pinName);	break;
     dec:	a1 e3       	ldi	r26, 0x31	; 49
     dee:	b0 e0       	ldi	r27, 0x00	; 0
     df0:	e1 e3       	ldi	r30, 0x31	; 49
     df2:	f0 e0       	ldi	r31, 0x00	; 0
     df4:	80 81       	ld	r24, Z
     df6:	48 2f       	mov	r20, r24
     df8:	8a 81       	ldd	r24, Y+2	; 0x02
     dfa:	28 2f       	mov	r18, r24
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	02 2e       	mov	r0, r18
     e04:	02 c0       	rjmp	.+4      	; 0xe0a <DIO_SelectDirectionForPin+0xf8>
     e06:	88 0f       	add	r24, r24
     e08:	99 1f       	adc	r25, r25
     e0a:	0a 94       	dec	r0
     e0c:	e2 f7       	brpl	.-8      	; 0xe06 <DIO_SelectDirectionForPin+0xf4>
     e0e:	84 2b       	or	r24, r20
     e10:	8c 93       	st	X, r24
     e12:	78 c0       	rjmp	.+240    	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
			}

	}else if(directionState == INPUT ){
     e14:	8b 81       	ldd	r24, Y+3	; 0x03
     e16:	88 23       	and	r24, r24
     e18:	09 f0       	breq	.+2      	; 0xe1c <DIO_SelectDirectionForPin+0x10a>
     e1a:	74 c0       	rjmp	.+232    	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
			switch(groupName){
     e1c:	89 81       	ldd	r24, Y+1	; 0x01
     e1e:	28 2f       	mov	r18, r24
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	3d 83       	std	Y+5, r19	; 0x05
     e24:	2c 83       	std	Y+4, r18	; 0x04
     e26:	8c 81       	ldd	r24, Y+4	; 0x04
     e28:	9d 81       	ldd	r25, Y+5	; 0x05
     e2a:	82 30       	cpi	r24, 0x02	; 2
     e2c:	91 05       	cpc	r25, r1
     e2e:	61 f1       	breq	.+88     	; 0xe88 <DIO_SelectDirectionForPin+0x176>
     e30:	2c 81       	ldd	r18, Y+4	; 0x04
     e32:	3d 81       	ldd	r19, Y+5	; 0x05
     e34:	23 30       	cpi	r18, 0x03	; 3
     e36:	31 05       	cpc	r19, r1
     e38:	34 f4       	brge	.+12     	; 0xe46 <DIO_SelectDirectionForPin+0x134>
     e3a:	8c 81       	ldd	r24, Y+4	; 0x04
     e3c:	9d 81       	ldd	r25, Y+5	; 0x05
     e3e:	81 30       	cpi	r24, 0x01	; 1
     e40:	91 05       	cpc	r25, r1
     e42:	69 f0       	breq	.+26     	; 0xe5e <DIO_SelectDirectionForPin+0x14c>
     e44:	5f c0       	rjmp	.+190    	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
     e46:	2c 81       	ldd	r18, Y+4	; 0x04
     e48:	3d 81       	ldd	r19, Y+5	; 0x05
     e4a:	23 30       	cpi	r18, 0x03	; 3
     e4c:	31 05       	cpc	r19, r1
     e4e:	89 f1       	breq	.+98     	; 0xeb2 <DIO_SelectDirectionForPin+0x1a0>
     e50:	8c 81       	ldd	r24, Y+4	; 0x04
     e52:	9d 81       	ldd	r25, Y+5	; 0x05
     e54:	84 30       	cpi	r24, 0x04	; 4
     e56:	91 05       	cpc	r25, r1
     e58:	09 f4       	brne	.+2      	; 0xe5c <DIO_SelectDirectionForPin+0x14a>
     e5a:	40 c0       	rjmp	.+128    	; 0xedc <DIO_SelectDirectionForPin+0x1ca>
     e5c:	53 c0       	rjmp	.+166    	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
					case DIO_GROUPA:	CLEAR_BIT(DIO_DDRA,pinName);	break;
     e5e:	aa e3       	ldi	r26, 0x3A	; 58
     e60:	b0 e0       	ldi	r27, 0x00	; 0
     e62:	ea e3       	ldi	r30, 0x3A	; 58
     e64:	f0 e0       	ldi	r31, 0x00	; 0
     e66:	80 81       	ld	r24, Z
     e68:	48 2f       	mov	r20, r24
     e6a:	8a 81       	ldd	r24, Y+2	; 0x02
     e6c:	28 2f       	mov	r18, r24
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	81 e0       	ldi	r24, 0x01	; 1
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	02 2e       	mov	r0, r18
     e76:	02 c0       	rjmp	.+4      	; 0xe7c <DIO_SelectDirectionForPin+0x16a>
     e78:	88 0f       	add	r24, r24
     e7a:	99 1f       	adc	r25, r25
     e7c:	0a 94       	dec	r0
     e7e:	e2 f7       	brpl	.-8      	; 0xe78 <DIO_SelectDirectionForPin+0x166>
     e80:	80 95       	com	r24
     e82:	84 23       	and	r24, r20
     e84:	8c 93       	st	X, r24
     e86:	3e c0       	rjmp	.+124    	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
					case DIO_GROUPB:	CLEAR_BIT(DIO_DDRB,pinName);	break;
     e88:	a7 e3       	ldi	r26, 0x37	; 55
     e8a:	b0 e0       	ldi	r27, 0x00	; 0
     e8c:	e7 e3       	ldi	r30, 0x37	; 55
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	80 81       	ld	r24, Z
     e92:	48 2f       	mov	r20, r24
     e94:	8a 81       	ldd	r24, Y+2	; 0x02
     e96:	28 2f       	mov	r18, r24
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	02 2e       	mov	r0, r18
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <DIO_SelectDirectionForPin+0x194>
     ea2:	88 0f       	add	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	0a 94       	dec	r0
     ea8:	e2 f7       	brpl	.-8      	; 0xea2 <DIO_SelectDirectionForPin+0x190>
     eaa:	80 95       	com	r24
     eac:	84 23       	and	r24, r20
     eae:	8c 93       	st	X, r24
     eb0:	29 c0       	rjmp	.+82     	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
					case DIO_GROUPC:	CLEAR_BIT(DIO_DDRC,pinName);	break;
     eb2:	a4 e3       	ldi	r26, 0x34	; 52
     eb4:	b0 e0       	ldi	r27, 0x00	; 0
     eb6:	e4 e3       	ldi	r30, 0x34	; 52
     eb8:	f0 e0       	ldi	r31, 0x00	; 0
     eba:	80 81       	ld	r24, Z
     ebc:	48 2f       	mov	r20, r24
     ebe:	8a 81       	ldd	r24, Y+2	; 0x02
     ec0:	28 2f       	mov	r18, r24
     ec2:	30 e0       	ldi	r19, 0x00	; 0
     ec4:	81 e0       	ldi	r24, 0x01	; 1
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	02 2e       	mov	r0, r18
     eca:	02 c0       	rjmp	.+4      	; 0xed0 <DIO_SelectDirectionForPin+0x1be>
     ecc:	88 0f       	add	r24, r24
     ece:	99 1f       	adc	r25, r25
     ed0:	0a 94       	dec	r0
     ed2:	e2 f7       	brpl	.-8      	; 0xecc <DIO_SelectDirectionForPin+0x1ba>
     ed4:	80 95       	com	r24
     ed6:	84 23       	and	r24, r20
     ed8:	8c 93       	st	X, r24
     eda:	14 c0       	rjmp	.+40     	; 0xf04 <DIO_SelectDirectionForPin+0x1f2>
					case DIO_GROUPD:	CLEAR_BIT(DIO_DDRD,pinName);	break;
     edc:	a1 e3       	ldi	r26, 0x31	; 49
     ede:	b0 e0       	ldi	r27, 0x00	; 0
     ee0:	e1 e3       	ldi	r30, 0x31	; 49
     ee2:	f0 e0       	ldi	r31, 0x00	; 0
     ee4:	80 81       	ld	r24, Z
     ee6:	48 2f       	mov	r20, r24
     ee8:	8a 81       	ldd	r24, Y+2	; 0x02
     eea:	28 2f       	mov	r18, r24
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	81 e0       	ldi	r24, 0x01	; 1
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	02 2e       	mov	r0, r18
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <DIO_SelectDirectionForPin+0x1e8>
     ef6:	88 0f       	add	r24, r24
     ef8:	99 1f       	adc	r25, r25
     efa:	0a 94       	dec	r0
     efc:	e2 f7       	brpl	.-8      	; 0xef6 <DIO_SelectDirectionForPin+0x1e4>
     efe:	80 95       	com	r24
     f00:	84 23       	and	r24, r20
     f02:	8c 93       	st	X, r24
			}

		}

}
     f04:	27 96       	adiw	r28, 0x07	; 7
     f06:	0f b6       	in	r0, 0x3f	; 63
     f08:	f8 94       	cli
     f0a:	de bf       	out	0x3e, r29	; 62
     f0c:	0f be       	out	0x3f, r0	; 63
     f0e:	cd bf       	out	0x3d, r28	; 61
     f10:	cf 91       	pop	r28
     f12:	df 91       	pop	r29
     f14:	08 95       	ret

00000f16 <DIO_SelectOutputForGroup>:
void DIO_SelectOutputForGroup(u8 groupName , u8 state){
     f16:	df 93       	push	r29
     f18:	cf 93       	push	r28
     f1a:	00 d0       	rcall	.+0      	; 0xf1c <DIO_SelectOutputForGroup+0x6>
     f1c:	00 d0       	rcall	.+0      	; 0xf1e <DIO_SelectOutputForGroup+0x8>
     f1e:	cd b7       	in	r28, 0x3d	; 61
     f20:	de b7       	in	r29, 0x3e	; 62
     f22:	89 83       	std	Y+1, r24	; 0x01
     f24:	6a 83       	std	Y+2, r22	; 0x02

	 switch(groupName){
     f26:	89 81       	ldd	r24, Y+1	; 0x01
     f28:	28 2f       	mov	r18, r24
     f2a:	30 e0       	ldi	r19, 0x00	; 0
     f2c:	3c 83       	std	Y+4, r19	; 0x04
     f2e:	2b 83       	std	Y+3, r18	; 0x03
     f30:	8b 81       	ldd	r24, Y+3	; 0x03
     f32:	9c 81       	ldd	r25, Y+4	; 0x04
     f34:	82 30       	cpi	r24, 0x02	; 2
     f36:	91 05       	cpc	r25, r1
     f38:	d9 f0       	breq	.+54     	; 0xf70 <DIO_SelectOutputForGroup+0x5a>
     f3a:	2b 81       	ldd	r18, Y+3	; 0x03
     f3c:	3c 81       	ldd	r19, Y+4	; 0x04
     f3e:	23 30       	cpi	r18, 0x03	; 3
     f40:	31 05       	cpc	r19, r1
     f42:	34 f4       	brge	.+12     	; 0xf50 <DIO_SelectOutputForGroup+0x3a>
     f44:	8b 81       	ldd	r24, Y+3	; 0x03
     f46:	9c 81       	ldd	r25, Y+4	; 0x04
     f48:	81 30       	cpi	r24, 0x01	; 1
     f4a:	91 05       	cpc	r25, r1
     f4c:	61 f0       	breq	.+24     	; 0xf66 <DIO_SelectOutputForGroup+0x50>
     f4e:	1e c0       	rjmp	.+60     	; 0xf8c <DIO_SelectOutputForGroup+0x76>
     f50:	2b 81       	ldd	r18, Y+3	; 0x03
     f52:	3c 81       	ldd	r19, Y+4	; 0x04
     f54:	23 30       	cpi	r18, 0x03	; 3
     f56:	31 05       	cpc	r19, r1
     f58:	81 f0       	breq	.+32     	; 0xf7a <DIO_SelectOutputForGroup+0x64>
     f5a:	8b 81       	ldd	r24, Y+3	; 0x03
     f5c:	9c 81       	ldd	r25, Y+4	; 0x04
     f5e:	84 30       	cpi	r24, 0x04	; 4
     f60:	91 05       	cpc	r25, r1
     f62:	81 f0       	breq	.+32     	; 0xf84 <DIO_SelectOutputForGroup+0x6e>
     f64:	13 c0       	rjmp	.+38     	; 0xf8c <DIO_SelectOutputForGroup+0x76>
	        case DIO_GROUPA:	DIO_PORTA = state;	break;
     f66:	eb e3       	ldi	r30, 0x3B	; 59
     f68:	f0 e0       	ldi	r31, 0x00	; 0
     f6a:	8a 81       	ldd	r24, Y+2	; 0x02
     f6c:	80 83       	st	Z, r24
     f6e:	0e c0       	rjmp	.+28     	; 0xf8c <DIO_SelectOutputForGroup+0x76>
	        case DIO_GROUPB:	DIO_PORTB = state;	break;
     f70:	e8 e3       	ldi	r30, 0x38	; 56
     f72:	f0 e0       	ldi	r31, 0x00	; 0
     f74:	8a 81       	ldd	r24, Y+2	; 0x02
     f76:	80 83       	st	Z, r24
     f78:	09 c0       	rjmp	.+18     	; 0xf8c <DIO_SelectOutputForGroup+0x76>
	        case DIO_GROUPC:	DIO_PORTC = state;	break;
     f7a:	e5 e3       	ldi	r30, 0x35	; 53
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	8a 81       	ldd	r24, Y+2	; 0x02
     f80:	80 83       	st	Z, r24
     f82:	04 c0       	rjmp	.+8      	; 0xf8c <DIO_SelectOutputForGroup+0x76>
	        case DIO_GROUPD:	DIO_PORTD = state;	break;
     f84:	e2 e3       	ldi	r30, 0x32	; 50
     f86:	f0 e0       	ldi	r31, 0x00	; 0
     f88:	8a 81       	ldd	r24, Y+2	; 0x02
     f8a:	80 83       	st	Z, r24
	    }
}
     f8c:	0f 90       	pop	r0
     f8e:	0f 90       	pop	r0
     f90:	0f 90       	pop	r0
     f92:	0f 90       	pop	r0
     f94:	cf 91       	pop	r28
     f96:	df 91       	pop	r29
     f98:	08 95       	ret

00000f9a <DIO_SelectOutputForPin>:

void DIO_SelectOutputForPin(u8 groupName , u8 pinName , u8 state){
     f9a:	df 93       	push	r29
     f9c:	cf 93       	push	r28
     f9e:	cd b7       	in	r28, 0x3d	; 61
     fa0:	de b7       	in	r29, 0x3e	; 62
     fa2:	27 97       	sbiw	r28, 0x07	; 7
     fa4:	0f b6       	in	r0, 0x3f	; 63
     fa6:	f8 94       	cli
     fa8:	de bf       	out	0x3e, r29	; 62
     faa:	0f be       	out	0x3f, r0	; 63
     fac:	cd bf       	out	0x3d, r28	; 61
     fae:	89 83       	std	Y+1, r24	; 0x01
     fb0:	6a 83       	std	Y+2, r22	; 0x02
     fb2:	4b 83       	std	Y+3, r20	; 0x03

	if(state == HIGH ){
     fb4:	8b 81       	ldd	r24, Y+3	; 0x03
     fb6:	81 30       	cpi	r24, 0x01	; 1
     fb8:	09 f0       	breq	.+2      	; 0xfbc <DIO_SelectOutputForPin+0x22>
     fba:	70 c0       	rjmp	.+224    	; 0x109c <DIO_SelectOutputForPin+0x102>
		switch(groupName){
     fbc:	89 81       	ldd	r24, Y+1	; 0x01
     fbe:	28 2f       	mov	r18, r24
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	3f 83       	std	Y+7, r19	; 0x07
     fc4:	2e 83       	std	Y+6, r18	; 0x06
     fc6:	8e 81       	ldd	r24, Y+6	; 0x06
     fc8:	9f 81       	ldd	r25, Y+7	; 0x07
     fca:	82 30       	cpi	r24, 0x02	; 2
     fcc:	91 05       	cpc	r25, r1
     fce:	51 f1       	breq	.+84     	; 0x1024 <DIO_SelectOutputForPin+0x8a>
     fd0:	2e 81       	ldd	r18, Y+6	; 0x06
     fd2:	3f 81       	ldd	r19, Y+7	; 0x07
     fd4:	23 30       	cpi	r18, 0x03	; 3
     fd6:	31 05       	cpc	r19, r1
     fd8:	34 f4       	brge	.+12     	; 0xfe6 <DIO_SelectOutputForPin+0x4c>
     fda:	8e 81       	ldd	r24, Y+6	; 0x06
     fdc:	9f 81       	ldd	r25, Y+7	; 0x07
     fde:	81 30       	cpi	r24, 0x01	; 1
     fe0:	91 05       	cpc	r25, r1
     fe2:	61 f0       	breq	.+24     	; 0xffc <DIO_SelectOutputForPin+0x62>
     fe4:	d3 c0       	rjmp	.+422    	; 0x118c <DIO_SelectOutputForPin+0x1f2>
     fe6:	2e 81       	ldd	r18, Y+6	; 0x06
     fe8:	3f 81       	ldd	r19, Y+7	; 0x07
     fea:	23 30       	cpi	r18, 0x03	; 3
     fec:	31 05       	cpc	r19, r1
     fee:	71 f1       	breq	.+92     	; 0x104c <DIO_SelectOutputForPin+0xb2>
     ff0:	8e 81       	ldd	r24, Y+6	; 0x06
     ff2:	9f 81       	ldd	r25, Y+7	; 0x07
     ff4:	84 30       	cpi	r24, 0x04	; 4
     ff6:	91 05       	cpc	r25, r1
     ff8:	e9 f1       	breq	.+122    	; 0x1074 <DIO_SelectOutputForPin+0xda>
     ffa:	c8 c0       	rjmp	.+400    	; 0x118c <DIO_SelectOutputForPin+0x1f2>
				case DIO_GROUPA:	SET_BIT(DIO_PORTA,pinName);	break;
     ffc:	ab e3       	ldi	r26, 0x3B	; 59
     ffe:	b0 e0       	ldi	r27, 0x00	; 0
    1000:	eb e3       	ldi	r30, 0x3B	; 59
    1002:	f0 e0       	ldi	r31, 0x00	; 0
    1004:	80 81       	ld	r24, Z
    1006:	48 2f       	mov	r20, r24
    1008:	8a 81       	ldd	r24, Y+2	; 0x02
    100a:	28 2f       	mov	r18, r24
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	81 e0       	ldi	r24, 0x01	; 1
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	02 2e       	mov	r0, r18
    1014:	02 c0       	rjmp	.+4      	; 0x101a <DIO_SelectOutputForPin+0x80>
    1016:	88 0f       	add	r24, r24
    1018:	99 1f       	adc	r25, r25
    101a:	0a 94       	dec	r0
    101c:	e2 f7       	brpl	.-8      	; 0x1016 <DIO_SelectOutputForPin+0x7c>
    101e:	84 2b       	or	r24, r20
    1020:	8c 93       	st	X, r24
    1022:	b4 c0       	rjmp	.+360    	; 0x118c <DIO_SelectOutputForPin+0x1f2>
				case DIO_GROUPB:	SET_BIT(DIO_PORTB,pinName);	break;
    1024:	a8 e3       	ldi	r26, 0x38	; 56
    1026:	b0 e0       	ldi	r27, 0x00	; 0
    1028:	e8 e3       	ldi	r30, 0x38	; 56
    102a:	f0 e0       	ldi	r31, 0x00	; 0
    102c:	80 81       	ld	r24, Z
    102e:	48 2f       	mov	r20, r24
    1030:	8a 81       	ldd	r24, Y+2	; 0x02
    1032:	28 2f       	mov	r18, r24
    1034:	30 e0       	ldi	r19, 0x00	; 0
    1036:	81 e0       	ldi	r24, 0x01	; 1
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	02 2e       	mov	r0, r18
    103c:	02 c0       	rjmp	.+4      	; 0x1042 <DIO_SelectOutputForPin+0xa8>
    103e:	88 0f       	add	r24, r24
    1040:	99 1f       	adc	r25, r25
    1042:	0a 94       	dec	r0
    1044:	e2 f7       	brpl	.-8      	; 0x103e <DIO_SelectOutputForPin+0xa4>
    1046:	84 2b       	or	r24, r20
    1048:	8c 93       	st	X, r24
    104a:	a0 c0       	rjmp	.+320    	; 0x118c <DIO_SelectOutputForPin+0x1f2>
				case DIO_GROUPC:	SET_BIT(DIO_PORTC,pinName);	break;
    104c:	a5 e3       	ldi	r26, 0x35	; 53
    104e:	b0 e0       	ldi	r27, 0x00	; 0
    1050:	e5 e3       	ldi	r30, 0x35	; 53
    1052:	f0 e0       	ldi	r31, 0x00	; 0
    1054:	80 81       	ld	r24, Z
    1056:	48 2f       	mov	r20, r24
    1058:	8a 81       	ldd	r24, Y+2	; 0x02
    105a:	28 2f       	mov	r18, r24
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	81 e0       	ldi	r24, 0x01	; 1
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	02 2e       	mov	r0, r18
    1064:	02 c0       	rjmp	.+4      	; 0x106a <DIO_SelectOutputForPin+0xd0>
    1066:	88 0f       	add	r24, r24
    1068:	99 1f       	adc	r25, r25
    106a:	0a 94       	dec	r0
    106c:	e2 f7       	brpl	.-8      	; 0x1066 <DIO_SelectOutputForPin+0xcc>
    106e:	84 2b       	or	r24, r20
    1070:	8c 93       	st	X, r24
    1072:	8c c0       	rjmp	.+280    	; 0x118c <DIO_SelectOutputForPin+0x1f2>
				case DIO_GROUPD:	SET_BIT(DIO_PORTD,pinName);	break;
    1074:	a2 e3       	ldi	r26, 0x32	; 50
    1076:	b0 e0       	ldi	r27, 0x00	; 0
    1078:	e2 e3       	ldi	r30, 0x32	; 50
    107a:	f0 e0       	ldi	r31, 0x00	; 0
    107c:	80 81       	ld	r24, Z
    107e:	48 2f       	mov	r20, r24
    1080:	8a 81       	ldd	r24, Y+2	; 0x02
    1082:	28 2f       	mov	r18, r24
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	81 e0       	ldi	r24, 0x01	; 1
    1088:	90 e0       	ldi	r25, 0x00	; 0
    108a:	02 2e       	mov	r0, r18
    108c:	02 c0       	rjmp	.+4      	; 0x1092 <DIO_SelectOutputForPin+0xf8>
    108e:	88 0f       	add	r24, r24
    1090:	99 1f       	adc	r25, r25
    1092:	0a 94       	dec	r0
    1094:	e2 f7       	brpl	.-8      	; 0x108e <DIO_SelectOutputForPin+0xf4>
    1096:	84 2b       	or	r24, r20
    1098:	8c 93       	st	X, r24
    109a:	78 c0       	rjmp	.+240    	; 0x118c <DIO_SelectOutputForPin+0x1f2>
		}

	}else if(state == LOW ){
    109c:	8b 81       	ldd	r24, Y+3	; 0x03
    109e:	88 23       	and	r24, r24
    10a0:	09 f0       	breq	.+2      	; 0x10a4 <DIO_SelectOutputForPin+0x10a>
    10a2:	74 c0       	rjmp	.+232    	; 0x118c <DIO_SelectOutputForPin+0x1f2>
		switch(groupName){
    10a4:	89 81       	ldd	r24, Y+1	; 0x01
    10a6:	28 2f       	mov	r18, r24
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	3d 83       	std	Y+5, r19	; 0x05
    10ac:	2c 83       	std	Y+4, r18	; 0x04
    10ae:	8c 81       	ldd	r24, Y+4	; 0x04
    10b0:	9d 81       	ldd	r25, Y+5	; 0x05
    10b2:	82 30       	cpi	r24, 0x02	; 2
    10b4:	91 05       	cpc	r25, r1
    10b6:	61 f1       	breq	.+88     	; 0x1110 <DIO_SelectOutputForPin+0x176>
    10b8:	2c 81       	ldd	r18, Y+4	; 0x04
    10ba:	3d 81       	ldd	r19, Y+5	; 0x05
    10bc:	23 30       	cpi	r18, 0x03	; 3
    10be:	31 05       	cpc	r19, r1
    10c0:	34 f4       	brge	.+12     	; 0x10ce <DIO_SelectOutputForPin+0x134>
    10c2:	8c 81       	ldd	r24, Y+4	; 0x04
    10c4:	9d 81       	ldd	r25, Y+5	; 0x05
    10c6:	81 30       	cpi	r24, 0x01	; 1
    10c8:	91 05       	cpc	r25, r1
    10ca:	69 f0       	breq	.+26     	; 0x10e6 <DIO_SelectOutputForPin+0x14c>
    10cc:	5f c0       	rjmp	.+190    	; 0x118c <DIO_SelectOutputForPin+0x1f2>
    10ce:	2c 81       	ldd	r18, Y+4	; 0x04
    10d0:	3d 81       	ldd	r19, Y+5	; 0x05
    10d2:	23 30       	cpi	r18, 0x03	; 3
    10d4:	31 05       	cpc	r19, r1
    10d6:	89 f1       	breq	.+98     	; 0x113a <DIO_SelectOutputForPin+0x1a0>
    10d8:	8c 81       	ldd	r24, Y+4	; 0x04
    10da:	9d 81       	ldd	r25, Y+5	; 0x05
    10dc:	84 30       	cpi	r24, 0x04	; 4
    10de:	91 05       	cpc	r25, r1
    10e0:	09 f4       	brne	.+2      	; 0x10e4 <DIO_SelectOutputForPin+0x14a>
    10e2:	40 c0       	rjmp	.+128    	; 0x1164 <DIO_SelectOutputForPin+0x1ca>
    10e4:	53 c0       	rjmp	.+166    	; 0x118c <DIO_SelectOutputForPin+0x1f2>
				case DIO_GROUPA:	CLEAR_BIT(DIO_PORTA,pinName);	break;
    10e6:	ab e3       	ldi	r26, 0x3B	; 59
    10e8:	b0 e0       	ldi	r27, 0x00	; 0
    10ea:	eb e3       	ldi	r30, 0x3B	; 59
    10ec:	f0 e0       	ldi	r31, 0x00	; 0
    10ee:	80 81       	ld	r24, Z
    10f0:	48 2f       	mov	r20, r24
    10f2:	8a 81       	ldd	r24, Y+2	; 0x02
    10f4:	28 2f       	mov	r18, r24
    10f6:	30 e0       	ldi	r19, 0x00	; 0
    10f8:	81 e0       	ldi	r24, 0x01	; 1
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	02 2e       	mov	r0, r18
    10fe:	02 c0       	rjmp	.+4      	; 0x1104 <DIO_SelectOutputForPin+0x16a>
    1100:	88 0f       	add	r24, r24
    1102:	99 1f       	adc	r25, r25
    1104:	0a 94       	dec	r0
    1106:	e2 f7       	brpl	.-8      	; 0x1100 <DIO_SelectOutputForPin+0x166>
    1108:	80 95       	com	r24
    110a:	84 23       	and	r24, r20
    110c:	8c 93       	st	X, r24
    110e:	3e c0       	rjmp	.+124    	; 0x118c <DIO_SelectOutputForPin+0x1f2>
				case DIO_GROUPB:	CLEAR_BIT(DIO_PORTB,pinName);	break;
    1110:	a8 e3       	ldi	r26, 0x38	; 56
    1112:	b0 e0       	ldi	r27, 0x00	; 0
    1114:	e8 e3       	ldi	r30, 0x38	; 56
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	80 81       	ld	r24, Z
    111a:	48 2f       	mov	r20, r24
    111c:	8a 81       	ldd	r24, Y+2	; 0x02
    111e:	28 2f       	mov	r18, r24
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	02 2e       	mov	r0, r18
    1128:	02 c0       	rjmp	.+4      	; 0x112e <DIO_SelectOutputForPin+0x194>
    112a:	88 0f       	add	r24, r24
    112c:	99 1f       	adc	r25, r25
    112e:	0a 94       	dec	r0
    1130:	e2 f7       	brpl	.-8      	; 0x112a <DIO_SelectOutputForPin+0x190>
    1132:	80 95       	com	r24
    1134:	84 23       	and	r24, r20
    1136:	8c 93       	st	X, r24
    1138:	29 c0       	rjmp	.+82     	; 0x118c <DIO_SelectOutputForPin+0x1f2>
				case DIO_GROUPC:	CLEAR_BIT(DIO_PORTC,pinName);	break;
    113a:	a5 e3       	ldi	r26, 0x35	; 53
    113c:	b0 e0       	ldi	r27, 0x00	; 0
    113e:	e5 e3       	ldi	r30, 0x35	; 53
    1140:	f0 e0       	ldi	r31, 0x00	; 0
    1142:	80 81       	ld	r24, Z
    1144:	48 2f       	mov	r20, r24
    1146:	8a 81       	ldd	r24, Y+2	; 0x02
    1148:	28 2f       	mov	r18, r24
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	81 e0       	ldi	r24, 0x01	; 1
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	02 2e       	mov	r0, r18
    1152:	02 c0       	rjmp	.+4      	; 0x1158 <DIO_SelectOutputForPin+0x1be>
    1154:	88 0f       	add	r24, r24
    1156:	99 1f       	adc	r25, r25
    1158:	0a 94       	dec	r0
    115a:	e2 f7       	brpl	.-8      	; 0x1154 <DIO_SelectOutputForPin+0x1ba>
    115c:	80 95       	com	r24
    115e:	84 23       	and	r24, r20
    1160:	8c 93       	st	X, r24
    1162:	14 c0       	rjmp	.+40     	; 0x118c <DIO_SelectOutputForPin+0x1f2>
				case DIO_GROUPD:	CLEAR_BIT(DIO_PORTD,pinName);	break;
    1164:	a2 e3       	ldi	r26, 0x32	; 50
    1166:	b0 e0       	ldi	r27, 0x00	; 0
    1168:	e2 e3       	ldi	r30, 0x32	; 50
    116a:	f0 e0       	ldi	r31, 0x00	; 0
    116c:	80 81       	ld	r24, Z
    116e:	48 2f       	mov	r20, r24
    1170:	8a 81       	ldd	r24, Y+2	; 0x02
    1172:	28 2f       	mov	r18, r24
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	81 e0       	ldi	r24, 0x01	; 1
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	02 2e       	mov	r0, r18
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <DIO_SelectOutputForPin+0x1e8>
    117e:	88 0f       	add	r24, r24
    1180:	99 1f       	adc	r25, r25
    1182:	0a 94       	dec	r0
    1184:	e2 f7       	brpl	.-8      	; 0x117e <DIO_SelectOutputForPin+0x1e4>
    1186:	80 95       	com	r24
    1188:	84 23       	and	r24, r20
    118a:	8c 93       	st	X, r24
		}
	}
}
    118c:	27 96       	adiw	r28, 0x07	; 7
    118e:	0f b6       	in	r0, 0x3f	; 63
    1190:	f8 94       	cli
    1192:	de bf       	out	0x3e, r29	; 62
    1194:	0f be       	out	0x3f, r0	; 63
    1196:	cd bf       	out	0x3d, r28	; 61
    1198:	cf 91       	pop	r28
    119a:	df 91       	pop	r29
    119c:	08 95       	ret

0000119e <DIO_ReadInputValueForGroup>:

u8 DIO_ReadInputValueForGroup(u8 groupName){
    119e:	df 93       	push	r29
    11a0:	cf 93       	push	r28
    11a2:	00 d0       	rcall	.+0      	; 0x11a4 <DIO_ReadInputValueForGroup+0x6>
    11a4:	00 d0       	rcall	.+0      	; 0x11a6 <DIO_ReadInputValueForGroup+0x8>
    11a6:	cd b7       	in	r28, 0x3d	; 61
    11a8:	de b7       	in	r29, 0x3e	; 62
    11aa:	8a 83       	std	Y+2, r24	; 0x02
	u8 groupState = 0;
    11ac:	19 82       	std	Y+1, r1	; 0x01
	switch(groupName){
    11ae:	8a 81       	ldd	r24, Y+2	; 0x02
    11b0:	28 2f       	mov	r18, r24
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	3c 83       	std	Y+4, r19	; 0x04
    11b6:	2b 83       	std	Y+3, r18	; 0x03
    11b8:	8b 81       	ldd	r24, Y+3	; 0x03
    11ba:	9c 81       	ldd	r25, Y+4	; 0x04
    11bc:	82 30       	cpi	r24, 0x02	; 2
    11be:	91 05       	cpc	r25, r1
    11c0:	d9 f0       	breq	.+54     	; 0x11f8 <DIO_ReadInputValueForGroup+0x5a>
    11c2:	2b 81       	ldd	r18, Y+3	; 0x03
    11c4:	3c 81       	ldd	r19, Y+4	; 0x04
    11c6:	23 30       	cpi	r18, 0x03	; 3
    11c8:	31 05       	cpc	r19, r1
    11ca:	34 f4       	brge	.+12     	; 0x11d8 <DIO_ReadInputValueForGroup+0x3a>
    11cc:	8b 81       	ldd	r24, Y+3	; 0x03
    11ce:	9c 81       	ldd	r25, Y+4	; 0x04
    11d0:	81 30       	cpi	r24, 0x01	; 1
    11d2:	91 05       	cpc	r25, r1
    11d4:	61 f0       	breq	.+24     	; 0x11ee <DIO_ReadInputValueForGroup+0x50>
    11d6:	1e c0       	rjmp	.+60     	; 0x1214 <DIO_ReadInputValueForGroup+0x76>
    11d8:	2b 81       	ldd	r18, Y+3	; 0x03
    11da:	3c 81       	ldd	r19, Y+4	; 0x04
    11dc:	23 30       	cpi	r18, 0x03	; 3
    11de:	31 05       	cpc	r19, r1
    11e0:	81 f0       	breq	.+32     	; 0x1202 <DIO_ReadInputValueForGroup+0x64>
    11e2:	8b 81       	ldd	r24, Y+3	; 0x03
    11e4:	9c 81       	ldd	r25, Y+4	; 0x04
    11e6:	84 30       	cpi	r24, 0x04	; 4
    11e8:	91 05       	cpc	r25, r1
    11ea:	81 f0       	breq	.+32     	; 0x120c <DIO_ReadInputValueForGroup+0x6e>
    11ec:	13 c0       	rjmp	.+38     	; 0x1214 <DIO_ReadInputValueForGroup+0x76>
		case DIO_GROUPA:	groupState = DIO_PINA;	break;
    11ee:	e9 e3       	ldi	r30, 0x39	; 57
    11f0:	f0 e0       	ldi	r31, 0x00	; 0
    11f2:	80 81       	ld	r24, Z
    11f4:	89 83       	std	Y+1, r24	; 0x01
    11f6:	0e c0       	rjmp	.+28     	; 0x1214 <DIO_ReadInputValueForGroup+0x76>
		case DIO_GROUPB:	groupState = DIO_PINB;	break;
    11f8:	e6 e3       	ldi	r30, 0x36	; 54
    11fa:	f0 e0       	ldi	r31, 0x00	; 0
    11fc:	80 81       	ld	r24, Z
    11fe:	89 83       	std	Y+1, r24	; 0x01
    1200:	09 c0       	rjmp	.+18     	; 0x1214 <DIO_ReadInputValueForGroup+0x76>
		case DIO_GROUPC:	groupState = DIO_PINC;	break;
    1202:	e3 e3       	ldi	r30, 0x33	; 51
    1204:	f0 e0       	ldi	r31, 0x00	; 0
    1206:	80 81       	ld	r24, Z
    1208:	89 83       	std	Y+1, r24	; 0x01
    120a:	04 c0       	rjmp	.+8      	; 0x1214 <DIO_ReadInputValueForGroup+0x76>
		case DIO_GROUPD:	groupState = DIO_PIND;	break;
    120c:	e0 e3       	ldi	r30, 0x30	; 48
    120e:	f0 e0       	ldi	r31, 0x00	; 0
    1210:	80 81       	ld	r24, Z
    1212:	89 83       	std	Y+1, r24	; 0x01
	}
	return groupState;
    1214:	89 81       	ldd	r24, Y+1	; 0x01

}
    1216:	0f 90       	pop	r0
    1218:	0f 90       	pop	r0
    121a:	0f 90       	pop	r0
    121c:	0f 90       	pop	r0
    121e:	cf 91       	pop	r28
    1220:	df 91       	pop	r29
    1222:	08 95       	ret

00001224 <DIO_ReadInputValueForPin>:
u8 DIO_ReadInputValueForPin(u8 groupName, u8 pinName){
    1224:	df 93       	push	r29
    1226:	cf 93       	push	r28
    1228:	00 d0       	rcall	.+0      	; 0x122a <DIO_ReadInputValueForPin+0x6>
    122a:	00 d0       	rcall	.+0      	; 0x122c <DIO_ReadInputValueForPin+0x8>
    122c:	0f 92       	push	r0
    122e:	cd b7       	in	r28, 0x3d	; 61
    1230:	de b7       	in	r29, 0x3e	; 62
    1232:	8a 83       	std	Y+2, r24	; 0x02
    1234:	6b 83       	std	Y+3, r22	; 0x03
	u8 pinState = 0;
    1236:	19 82       	std	Y+1, r1	; 0x01
	switch(groupName){
    1238:	8a 81       	ldd	r24, Y+2	; 0x02
    123a:	28 2f       	mov	r18, r24
    123c:	30 e0       	ldi	r19, 0x00	; 0
    123e:	3d 83       	std	Y+5, r19	; 0x05
    1240:	2c 83       	std	Y+4, r18	; 0x04
    1242:	4c 81       	ldd	r20, Y+4	; 0x04
    1244:	5d 81       	ldd	r21, Y+5	; 0x05
    1246:	42 30       	cpi	r20, 0x02	; 2
    1248:	51 05       	cpc	r21, r1
    124a:	41 f1       	breq	.+80     	; 0x129c <DIO_ReadInputValueForPin+0x78>
    124c:	8c 81       	ldd	r24, Y+4	; 0x04
    124e:	9d 81       	ldd	r25, Y+5	; 0x05
    1250:	83 30       	cpi	r24, 0x03	; 3
    1252:	91 05       	cpc	r25, r1
    1254:	34 f4       	brge	.+12     	; 0x1262 <DIO_ReadInputValueForPin+0x3e>
    1256:	2c 81       	ldd	r18, Y+4	; 0x04
    1258:	3d 81       	ldd	r19, Y+5	; 0x05
    125a:	21 30       	cpi	r18, 0x01	; 1
    125c:	31 05       	cpc	r19, r1
    125e:	61 f0       	breq	.+24     	; 0x1278 <DIO_ReadInputValueForPin+0x54>
    1260:	52 c0       	rjmp	.+164    	; 0x1306 <DIO_ReadInputValueForPin+0xe2>
    1262:	4c 81       	ldd	r20, Y+4	; 0x04
    1264:	5d 81       	ldd	r21, Y+5	; 0x05
    1266:	43 30       	cpi	r20, 0x03	; 3
    1268:	51 05       	cpc	r21, r1
    126a:	51 f1       	breq	.+84     	; 0x12c0 <DIO_ReadInputValueForPin+0x9c>
    126c:	8c 81       	ldd	r24, Y+4	; 0x04
    126e:	9d 81       	ldd	r25, Y+5	; 0x05
    1270:	84 30       	cpi	r24, 0x04	; 4
    1272:	91 05       	cpc	r25, r1
    1274:	b9 f1       	breq	.+110    	; 0x12e4 <DIO_ReadInputValueForPin+0xc0>
    1276:	47 c0       	rjmp	.+142    	; 0x1306 <DIO_ReadInputValueForPin+0xe2>
		case DIO_GROUPA:	pinState = GET_BIT(DIO_PINA,pinName);	break;
    1278:	e9 e3       	ldi	r30, 0x39	; 57
    127a:	f0 e0       	ldi	r31, 0x00	; 0
    127c:	80 81       	ld	r24, Z
    127e:	28 2f       	mov	r18, r24
    1280:	30 e0       	ldi	r19, 0x00	; 0
    1282:	8b 81       	ldd	r24, Y+3	; 0x03
    1284:	88 2f       	mov	r24, r24
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	a9 01       	movw	r20, r18
    128a:	02 c0       	rjmp	.+4      	; 0x1290 <DIO_ReadInputValueForPin+0x6c>
    128c:	55 95       	asr	r21
    128e:	47 95       	ror	r20
    1290:	8a 95       	dec	r24
    1292:	e2 f7       	brpl	.-8      	; 0x128c <DIO_ReadInputValueForPin+0x68>
    1294:	ca 01       	movw	r24, r20
    1296:	81 70       	andi	r24, 0x01	; 1
    1298:	89 83       	std	Y+1, r24	; 0x01
    129a:	35 c0       	rjmp	.+106    	; 0x1306 <DIO_ReadInputValueForPin+0xe2>
		case DIO_GROUPB:	pinState = GET_BIT(DIO_PINB,pinName);	break;
    129c:	e6 e3       	ldi	r30, 0x36	; 54
    129e:	f0 e0       	ldi	r31, 0x00	; 0
    12a0:	80 81       	ld	r24, Z
    12a2:	28 2f       	mov	r18, r24
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	8b 81       	ldd	r24, Y+3	; 0x03
    12a8:	88 2f       	mov	r24, r24
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	a9 01       	movw	r20, r18
    12ae:	02 c0       	rjmp	.+4      	; 0x12b4 <DIO_ReadInputValueForPin+0x90>
    12b0:	55 95       	asr	r21
    12b2:	47 95       	ror	r20
    12b4:	8a 95       	dec	r24
    12b6:	e2 f7       	brpl	.-8      	; 0x12b0 <DIO_ReadInputValueForPin+0x8c>
    12b8:	ca 01       	movw	r24, r20
    12ba:	81 70       	andi	r24, 0x01	; 1
    12bc:	89 83       	std	Y+1, r24	; 0x01
    12be:	23 c0       	rjmp	.+70     	; 0x1306 <DIO_ReadInputValueForPin+0xe2>
		case DIO_GROUPC:	pinState = GET_BIT(DIO_PINC,pinName);	break;
    12c0:	e3 e3       	ldi	r30, 0x33	; 51
    12c2:	f0 e0       	ldi	r31, 0x00	; 0
    12c4:	80 81       	ld	r24, Z
    12c6:	28 2f       	mov	r18, r24
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	8b 81       	ldd	r24, Y+3	; 0x03
    12cc:	88 2f       	mov	r24, r24
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	a9 01       	movw	r20, r18
    12d2:	02 c0       	rjmp	.+4      	; 0x12d8 <DIO_ReadInputValueForPin+0xb4>
    12d4:	55 95       	asr	r21
    12d6:	47 95       	ror	r20
    12d8:	8a 95       	dec	r24
    12da:	e2 f7       	brpl	.-8      	; 0x12d4 <DIO_ReadInputValueForPin+0xb0>
    12dc:	ca 01       	movw	r24, r20
    12de:	81 70       	andi	r24, 0x01	; 1
    12e0:	89 83       	std	Y+1, r24	; 0x01
    12e2:	11 c0       	rjmp	.+34     	; 0x1306 <DIO_ReadInputValueForPin+0xe2>
		case DIO_GROUPD:	pinState = GET_BIT(DIO_PIND,pinName);	break;
    12e4:	e0 e3       	ldi	r30, 0x30	; 48
    12e6:	f0 e0       	ldi	r31, 0x00	; 0
    12e8:	80 81       	ld	r24, Z
    12ea:	28 2f       	mov	r18, r24
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	8b 81       	ldd	r24, Y+3	; 0x03
    12f0:	88 2f       	mov	r24, r24
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	a9 01       	movw	r20, r18
    12f6:	02 c0       	rjmp	.+4      	; 0x12fc <DIO_ReadInputValueForPin+0xd8>
    12f8:	55 95       	asr	r21
    12fa:	47 95       	ror	r20
    12fc:	8a 95       	dec	r24
    12fe:	e2 f7       	brpl	.-8      	; 0x12f8 <DIO_ReadInputValueForPin+0xd4>
    1300:	ca 01       	movw	r24, r20
    1302:	81 70       	andi	r24, 0x01	; 1
    1304:	89 83       	std	Y+1, r24	; 0x01
	}
	return pinState;
    1306:	89 81       	ldd	r24, Y+1	; 0x01

}
    1308:	0f 90       	pop	r0
    130a:	0f 90       	pop	r0
    130c:	0f 90       	pop	r0
    130e:	0f 90       	pop	r0
    1310:	0f 90       	pop	r0
    1312:	cf 91       	pop	r28
    1314:	df 91       	pop	r29
    1316:	08 95       	ret

00001318 <LCD_INIT>:
#include "../HEADER/LCD_CONFIG.h"
#include "../HEADER/LCD_INTERFACE.h"
#include <util/delay.h>


void LCD_INIT(){
    1318:	0f 93       	push	r16
    131a:	1f 93       	push	r17
    131c:	df 93       	push	r29
    131e:	cf 93       	push	r28
    1320:	cd b7       	in	r28, 0x3d	; 61
    1322:	de b7       	in	r29, 0x3e	; 62
    1324:	cc 54       	subi	r28, 0x4C	; 76
    1326:	d0 40       	sbci	r29, 0x00	; 0
    1328:	0f b6       	in	r0, 0x3f	; 63
    132a:	f8 94       	cli
    132c:	de bf       	out	0x3e, r29	; 62
    132e:	0f be       	out	0x3f, r0	; 63
    1330:	cd bf       	out	0x3d, r28	; 61

	DIO_SelectDirectionForGroup( LCD_DATA , ALLOUTPUT );
    1332:	81 e0       	ldi	r24, 0x01	; 1
    1334:	6f ef       	ldi	r22, 0xFF	; 255
    1336:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_SelectDirectionForGroup>
	DIO_SelectDirectionForPin( LCD_CONTROL , LCD_RS , OUTPUT );
    133a:	82 e0       	ldi	r24, 0x02	; 2
    133c:	60 e0       	ldi	r22, 0x00	; 0
    133e:	41 e0       	ldi	r20, 0x01	; 1
    1340:	0e 94 89 06 	call	0xd12	; 0xd12 <DIO_SelectDirectionForPin>
	DIO_SelectDirectionForPin( LCD_CONTROL , LCD_RW , OUTPUT );
    1344:	82 e0       	ldi	r24, 0x02	; 2
    1346:	61 e0       	ldi	r22, 0x01	; 1
    1348:	41 e0       	ldi	r20, 0x01	; 1
    134a:	0e 94 89 06 	call	0xd12	; 0xd12 <DIO_SelectDirectionForPin>
	DIO_SelectDirectionForPin( LCD_CONTROL , LCD_E , OUTPUT );
    134e:	82 e0       	ldi	r24, 0x02	; 2
    1350:	62 e0       	ldi	r22, 0x02	; 2
    1352:	41 e0       	ldi	r20, 0x01	; 1
    1354:	0e 94 89 06 	call	0xd12	; 0xd12 <DIO_SelectDirectionForPin>
    1358:	fe 01       	movw	r30, r28
    135a:	e7 5b       	subi	r30, 0xB7	; 183
    135c:	ff 4f       	sbci	r31, 0xFF	; 255
    135e:	80 e0       	ldi	r24, 0x00	; 0
    1360:	90 e0       	ldi	r25, 0x00	; 0
    1362:	a0 e2       	ldi	r26, 0x20	; 32
    1364:	b2 e4       	ldi	r27, 0x42	; 66
    1366:	80 83       	st	Z, r24
    1368:	91 83       	std	Z+1, r25	; 0x01
    136a:	a2 83       	std	Z+2, r26	; 0x02
    136c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    136e:	8e 01       	movw	r16, r28
    1370:	0b 5b       	subi	r16, 0xBB	; 187
    1372:	1f 4f       	sbci	r17, 0xFF	; 255
    1374:	fe 01       	movw	r30, r28
    1376:	e7 5b       	subi	r30, 0xB7	; 183
    1378:	ff 4f       	sbci	r31, 0xFF	; 255
    137a:	60 81       	ld	r22, Z
    137c:	71 81       	ldd	r23, Z+1	; 0x01
    137e:	82 81       	ldd	r24, Z+2	; 0x02
    1380:	93 81       	ldd	r25, Z+3	; 0x03
    1382:	20 e0       	ldi	r18, 0x00	; 0
    1384:	30 e0       	ldi	r19, 0x00	; 0
    1386:	4a ef       	ldi	r20, 0xFA	; 250
    1388:	54 e4       	ldi	r21, 0x44	; 68
    138a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    138e:	dc 01       	movw	r26, r24
    1390:	cb 01       	movw	r24, r22
    1392:	f8 01       	movw	r30, r16
    1394:	80 83       	st	Z, r24
    1396:	91 83       	std	Z+1, r25	; 0x01
    1398:	a2 83       	std	Z+2, r26	; 0x02
    139a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    139c:	fe 01       	movw	r30, r28
    139e:	eb 5b       	subi	r30, 0xBB	; 187
    13a0:	ff 4f       	sbci	r31, 0xFF	; 255
    13a2:	60 81       	ld	r22, Z
    13a4:	71 81       	ldd	r23, Z+1	; 0x01
    13a6:	82 81       	ldd	r24, Z+2	; 0x02
    13a8:	93 81       	ldd	r25, Z+3	; 0x03
    13aa:	20 e0       	ldi	r18, 0x00	; 0
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	40 e8       	ldi	r20, 0x80	; 128
    13b0:	5f e3       	ldi	r21, 0x3F	; 63
    13b2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    13b6:	88 23       	and	r24, r24
    13b8:	44 f4       	brge	.+16     	; 0x13ca <LCD_INIT+0xb2>
		__ticks = 1;
    13ba:	fe 01       	movw	r30, r28
    13bc:	ed 5b       	subi	r30, 0xBD	; 189
    13be:	ff 4f       	sbci	r31, 0xFF	; 255
    13c0:	81 e0       	ldi	r24, 0x01	; 1
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	91 83       	std	Z+1, r25	; 0x01
    13c6:	80 83       	st	Z, r24
    13c8:	64 c0       	rjmp	.+200    	; 0x1492 <LCD_INIT+0x17a>
	else if (__tmp > 65535)
    13ca:	fe 01       	movw	r30, r28
    13cc:	eb 5b       	subi	r30, 0xBB	; 187
    13ce:	ff 4f       	sbci	r31, 0xFF	; 255
    13d0:	60 81       	ld	r22, Z
    13d2:	71 81       	ldd	r23, Z+1	; 0x01
    13d4:	82 81       	ldd	r24, Z+2	; 0x02
    13d6:	93 81       	ldd	r25, Z+3	; 0x03
    13d8:	20 e0       	ldi	r18, 0x00	; 0
    13da:	3f ef       	ldi	r19, 0xFF	; 255
    13dc:	4f e7       	ldi	r20, 0x7F	; 127
    13de:	57 e4       	ldi	r21, 0x47	; 71
    13e0:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    13e4:	18 16       	cp	r1, r24
    13e6:	0c f0       	brlt	.+2      	; 0x13ea <LCD_INIT+0xd2>
    13e8:	43 c0       	rjmp	.+134    	; 0x1470 <LCD_INIT+0x158>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13ea:	fe 01       	movw	r30, r28
    13ec:	e7 5b       	subi	r30, 0xB7	; 183
    13ee:	ff 4f       	sbci	r31, 0xFF	; 255
    13f0:	60 81       	ld	r22, Z
    13f2:	71 81       	ldd	r23, Z+1	; 0x01
    13f4:	82 81       	ldd	r24, Z+2	; 0x02
    13f6:	93 81       	ldd	r25, Z+3	; 0x03
    13f8:	20 e0       	ldi	r18, 0x00	; 0
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	40 e2       	ldi	r20, 0x20	; 32
    13fe:	51 e4       	ldi	r21, 0x41	; 65
    1400:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1404:	dc 01       	movw	r26, r24
    1406:	cb 01       	movw	r24, r22
    1408:	8e 01       	movw	r16, r28
    140a:	0d 5b       	subi	r16, 0xBD	; 189
    140c:	1f 4f       	sbci	r17, 0xFF	; 255
    140e:	bc 01       	movw	r22, r24
    1410:	cd 01       	movw	r24, r26
    1412:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1416:	dc 01       	movw	r26, r24
    1418:	cb 01       	movw	r24, r22
    141a:	f8 01       	movw	r30, r16
    141c:	91 83       	std	Z+1, r25	; 0x01
    141e:	80 83       	st	Z, r24
    1420:	1f c0       	rjmp	.+62     	; 0x1460 <LCD_INIT+0x148>
    1422:	fe 01       	movw	r30, r28
    1424:	ef 5b       	subi	r30, 0xBF	; 191
    1426:	ff 4f       	sbci	r31, 0xFF	; 255
    1428:	88 ec       	ldi	r24, 0xC8	; 200
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	91 83       	std	Z+1, r25	; 0x01
    142e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1430:	fe 01       	movw	r30, r28
    1432:	ef 5b       	subi	r30, 0xBF	; 191
    1434:	ff 4f       	sbci	r31, 0xFF	; 255
    1436:	80 81       	ld	r24, Z
    1438:	91 81       	ldd	r25, Z+1	; 0x01
    143a:	01 97       	sbiw	r24, 0x01	; 1
    143c:	f1 f7       	brne	.-4      	; 0x143a <LCD_INIT+0x122>
    143e:	fe 01       	movw	r30, r28
    1440:	ef 5b       	subi	r30, 0xBF	; 191
    1442:	ff 4f       	sbci	r31, 0xFF	; 255
    1444:	91 83       	std	Z+1, r25	; 0x01
    1446:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1448:	de 01       	movw	r26, r28
    144a:	ad 5b       	subi	r26, 0xBD	; 189
    144c:	bf 4f       	sbci	r27, 0xFF	; 255
    144e:	fe 01       	movw	r30, r28
    1450:	ed 5b       	subi	r30, 0xBD	; 189
    1452:	ff 4f       	sbci	r31, 0xFF	; 255
    1454:	80 81       	ld	r24, Z
    1456:	91 81       	ldd	r25, Z+1	; 0x01
    1458:	01 97       	sbiw	r24, 0x01	; 1
    145a:	11 96       	adiw	r26, 0x01	; 1
    145c:	9c 93       	st	X, r25
    145e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1460:	fe 01       	movw	r30, r28
    1462:	ed 5b       	subi	r30, 0xBD	; 189
    1464:	ff 4f       	sbci	r31, 0xFF	; 255
    1466:	80 81       	ld	r24, Z
    1468:	91 81       	ldd	r25, Z+1	; 0x01
    146a:	00 97       	sbiw	r24, 0x00	; 0
    146c:	d1 f6       	brne	.-76     	; 0x1422 <LCD_INIT+0x10a>
    146e:	24 c0       	rjmp	.+72     	; 0x14b8 <LCD_INIT+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1470:	8e 01       	movw	r16, r28
    1472:	0d 5b       	subi	r16, 0xBD	; 189
    1474:	1f 4f       	sbci	r17, 0xFF	; 255
    1476:	fe 01       	movw	r30, r28
    1478:	eb 5b       	subi	r30, 0xBB	; 187
    147a:	ff 4f       	sbci	r31, 0xFF	; 255
    147c:	60 81       	ld	r22, Z
    147e:	71 81       	ldd	r23, Z+1	; 0x01
    1480:	82 81       	ldd	r24, Z+2	; 0x02
    1482:	93 81       	ldd	r25, Z+3	; 0x03
    1484:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1488:	dc 01       	movw	r26, r24
    148a:	cb 01       	movw	r24, r22
    148c:	f8 01       	movw	r30, r16
    148e:	91 83       	std	Z+1, r25	; 0x01
    1490:	80 83       	st	Z, r24
    1492:	fe 01       	movw	r30, r28
    1494:	ed 5b       	subi	r30, 0xBD	; 189
    1496:	ff 4f       	sbci	r31, 0xFF	; 255
    1498:	80 81       	ld	r24, Z
    149a:	91 81       	ldd	r25, Z+1	; 0x01
    149c:	fe 01       	movw	r30, r28
    149e:	ff 96       	adiw	r30, 0x3f	; 63
    14a0:	91 83       	std	Z+1, r25	; 0x01
    14a2:	80 83       	st	Z, r24
    14a4:	fe 01       	movw	r30, r28
    14a6:	ff 96       	adiw	r30, 0x3f	; 63
    14a8:	80 81       	ld	r24, Z
    14aa:	91 81       	ldd	r25, Z+1	; 0x01
    14ac:	01 97       	sbiw	r24, 0x01	; 1
    14ae:	f1 f7       	brne	.-4      	; 0x14ac <LCD_INIT+0x194>
    14b0:	fe 01       	movw	r30, r28
    14b2:	ff 96       	adiw	r30, 0x3f	; 63
    14b4:	91 83       	std	Z+1, r25	; 0x01
    14b6:	80 83       	st	Z, r24

	_delay_ms(40);
	LCD_SEND_COMMAND(LCD_8BIT_MODE_2LINE_5X8);
    14b8:	88 e3       	ldi	r24, 0x38	; 56
    14ba:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <LCD_SEND_COMMAND>
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	a0 e2       	ldi	r26, 0x20	; 32
    14c4:	b2 e4       	ldi	r27, 0x42	; 66
    14c6:	8b af       	std	Y+59, r24	; 0x3b
    14c8:	9c af       	std	Y+60, r25	; 0x3c
    14ca:	ad af       	std	Y+61, r26	; 0x3d
    14cc:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    14ce:	6b ad       	ldd	r22, Y+59	; 0x3b
    14d0:	7c ad       	ldd	r23, Y+60	; 0x3c
    14d2:	8d ad       	ldd	r24, Y+61	; 0x3d
    14d4:	9e ad       	ldd	r25, Y+62	; 0x3e
    14d6:	2b ea       	ldi	r18, 0xAB	; 171
    14d8:	3a ea       	ldi	r19, 0xAA	; 170
    14da:	4a e2       	ldi	r20, 0x2A	; 42
    14dc:	50 e4       	ldi	r21, 0x40	; 64
    14de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14e2:	dc 01       	movw	r26, r24
    14e4:	cb 01       	movw	r24, r22
    14e6:	8f ab       	std	Y+55, r24	; 0x37
    14e8:	98 af       	std	Y+56, r25	; 0x38
    14ea:	a9 af       	std	Y+57, r26	; 0x39
    14ec:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    14ee:	6f a9       	ldd	r22, Y+55	; 0x37
    14f0:	78 ad       	ldd	r23, Y+56	; 0x38
    14f2:	89 ad       	ldd	r24, Y+57	; 0x39
    14f4:	9a ad       	ldd	r25, Y+58	; 0x3a
    14f6:	20 e0       	ldi	r18, 0x00	; 0
    14f8:	30 e0       	ldi	r19, 0x00	; 0
    14fa:	40 e8       	ldi	r20, 0x80	; 128
    14fc:	5f e3       	ldi	r21, 0x3F	; 63
    14fe:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1502:	88 23       	and	r24, r24
    1504:	1c f4       	brge	.+6      	; 0x150c <LCD_INIT+0x1f4>
		__ticks = 1;
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	8e ab       	std	Y+54, r24	; 0x36
    150a:	91 c0       	rjmp	.+290    	; 0x162e <LCD_INIT+0x316>
	else if (__tmp > 255)
    150c:	6f a9       	ldd	r22, Y+55	; 0x37
    150e:	78 ad       	ldd	r23, Y+56	; 0x38
    1510:	89 ad       	ldd	r24, Y+57	; 0x39
    1512:	9a ad       	ldd	r25, Y+58	; 0x3a
    1514:	20 e0       	ldi	r18, 0x00	; 0
    1516:	30 e0       	ldi	r19, 0x00	; 0
    1518:	4f e7       	ldi	r20, 0x7F	; 127
    151a:	53 e4       	ldi	r21, 0x43	; 67
    151c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1520:	18 16       	cp	r1, r24
    1522:	0c f0       	brlt	.+2      	; 0x1526 <LCD_INIT+0x20e>
    1524:	7b c0       	rjmp	.+246    	; 0x161c <LCD_INIT+0x304>
	{
		_delay_ms(__us / 1000.0);
    1526:	6b ad       	ldd	r22, Y+59	; 0x3b
    1528:	7c ad       	ldd	r23, Y+60	; 0x3c
    152a:	8d ad       	ldd	r24, Y+61	; 0x3d
    152c:	9e ad       	ldd	r25, Y+62	; 0x3e
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	4a e7       	ldi	r20, 0x7A	; 122
    1534:	54 e4       	ldi	r21, 0x44	; 68
    1536:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    153a:	dc 01       	movw	r26, r24
    153c:	cb 01       	movw	r24, r22
    153e:	8a ab       	std	Y+50, r24	; 0x32
    1540:	9b ab       	std	Y+51, r25	; 0x33
    1542:	ac ab       	std	Y+52, r26	; 0x34
    1544:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1546:	6a a9       	ldd	r22, Y+50	; 0x32
    1548:	7b a9       	ldd	r23, Y+51	; 0x33
    154a:	8c a9       	ldd	r24, Y+52	; 0x34
    154c:	9d a9       	ldd	r25, Y+53	; 0x35
    154e:	20 e0       	ldi	r18, 0x00	; 0
    1550:	30 e0       	ldi	r19, 0x00	; 0
    1552:	4a ef       	ldi	r20, 0xFA	; 250
    1554:	54 e4       	ldi	r21, 0x44	; 68
    1556:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    155a:	dc 01       	movw	r26, r24
    155c:	cb 01       	movw	r24, r22
    155e:	8e a7       	std	Y+46, r24	; 0x2e
    1560:	9f a7       	std	Y+47, r25	; 0x2f
    1562:	a8 ab       	std	Y+48, r26	; 0x30
    1564:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    1566:	6e a5       	ldd	r22, Y+46	; 0x2e
    1568:	7f a5       	ldd	r23, Y+47	; 0x2f
    156a:	88 a9       	ldd	r24, Y+48	; 0x30
    156c:	99 a9       	ldd	r25, Y+49	; 0x31
    156e:	20 e0       	ldi	r18, 0x00	; 0
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	40 e8       	ldi	r20, 0x80	; 128
    1574:	5f e3       	ldi	r21, 0x3F	; 63
    1576:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    157a:	88 23       	and	r24, r24
    157c:	2c f4       	brge	.+10     	; 0x1588 <LCD_INIT+0x270>
		__ticks = 1;
    157e:	81 e0       	ldi	r24, 0x01	; 1
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	9d a7       	std	Y+45, r25	; 0x2d
    1584:	8c a7       	std	Y+44, r24	; 0x2c
    1586:	3f c0       	rjmp	.+126    	; 0x1606 <LCD_INIT+0x2ee>
	else if (__tmp > 65535)
    1588:	6e a5       	ldd	r22, Y+46	; 0x2e
    158a:	7f a5       	ldd	r23, Y+47	; 0x2f
    158c:	88 a9       	ldd	r24, Y+48	; 0x30
    158e:	99 a9       	ldd	r25, Y+49	; 0x31
    1590:	20 e0       	ldi	r18, 0x00	; 0
    1592:	3f ef       	ldi	r19, 0xFF	; 255
    1594:	4f e7       	ldi	r20, 0x7F	; 127
    1596:	57 e4       	ldi	r21, 0x47	; 71
    1598:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    159c:	18 16       	cp	r1, r24
    159e:	4c f5       	brge	.+82     	; 0x15f2 <LCD_INIT+0x2da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15a0:	6a a9       	ldd	r22, Y+50	; 0x32
    15a2:	7b a9       	ldd	r23, Y+51	; 0x33
    15a4:	8c a9       	ldd	r24, Y+52	; 0x34
    15a6:	9d a9       	ldd	r25, Y+53	; 0x35
    15a8:	20 e0       	ldi	r18, 0x00	; 0
    15aa:	30 e0       	ldi	r19, 0x00	; 0
    15ac:	40 e2       	ldi	r20, 0x20	; 32
    15ae:	51 e4       	ldi	r21, 0x41	; 65
    15b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15b4:	dc 01       	movw	r26, r24
    15b6:	cb 01       	movw	r24, r22
    15b8:	bc 01       	movw	r22, r24
    15ba:	cd 01       	movw	r24, r26
    15bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15c0:	dc 01       	movw	r26, r24
    15c2:	cb 01       	movw	r24, r22
    15c4:	9d a7       	std	Y+45, r25	; 0x2d
    15c6:	8c a7       	std	Y+44, r24	; 0x2c
    15c8:	0f c0       	rjmp	.+30     	; 0x15e8 <LCD_INIT+0x2d0>
    15ca:	88 ec       	ldi	r24, 0xC8	; 200
    15cc:	90 e0       	ldi	r25, 0x00	; 0
    15ce:	9b a7       	std	Y+43, r25	; 0x2b
    15d0:	8a a7       	std	Y+42, r24	; 0x2a
    15d2:	8a a5       	ldd	r24, Y+42	; 0x2a
    15d4:	9b a5       	ldd	r25, Y+43	; 0x2b
    15d6:	01 97       	sbiw	r24, 0x01	; 1
    15d8:	f1 f7       	brne	.-4      	; 0x15d6 <LCD_INIT+0x2be>
    15da:	9b a7       	std	Y+43, r25	; 0x2b
    15dc:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15de:	8c a5       	ldd	r24, Y+44	; 0x2c
    15e0:	9d a5       	ldd	r25, Y+45	; 0x2d
    15e2:	01 97       	sbiw	r24, 0x01	; 1
    15e4:	9d a7       	std	Y+45, r25	; 0x2d
    15e6:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15e8:	8c a5       	ldd	r24, Y+44	; 0x2c
    15ea:	9d a5       	ldd	r25, Y+45	; 0x2d
    15ec:	00 97       	sbiw	r24, 0x00	; 0
    15ee:	69 f7       	brne	.-38     	; 0x15ca <LCD_INIT+0x2b2>
    15f0:	24 c0       	rjmp	.+72     	; 0x163a <LCD_INIT+0x322>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15f2:	6e a5       	ldd	r22, Y+46	; 0x2e
    15f4:	7f a5       	ldd	r23, Y+47	; 0x2f
    15f6:	88 a9       	ldd	r24, Y+48	; 0x30
    15f8:	99 a9       	ldd	r25, Y+49	; 0x31
    15fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15fe:	dc 01       	movw	r26, r24
    1600:	cb 01       	movw	r24, r22
    1602:	9d a7       	std	Y+45, r25	; 0x2d
    1604:	8c a7       	std	Y+44, r24	; 0x2c
    1606:	8c a5       	ldd	r24, Y+44	; 0x2c
    1608:	9d a5       	ldd	r25, Y+45	; 0x2d
    160a:	99 a7       	std	Y+41, r25	; 0x29
    160c:	88 a7       	std	Y+40, r24	; 0x28
    160e:	88 a5       	ldd	r24, Y+40	; 0x28
    1610:	99 a5       	ldd	r25, Y+41	; 0x29
    1612:	01 97       	sbiw	r24, 0x01	; 1
    1614:	f1 f7       	brne	.-4      	; 0x1612 <LCD_INIT+0x2fa>
    1616:	99 a7       	std	Y+41, r25	; 0x29
    1618:	88 a7       	std	Y+40, r24	; 0x28
    161a:	0f c0       	rjmp	.+30     	; 0x163a <LCD_INIT+0x322>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    161c:	6f a9       	ldd	r22, Y+55	; 0x37
    161e:	78 ad       	ldd	r23, Y+56	; 0x38
    1620:	89 ad       	ldd	r24, Y+57	; 0x39
    1622:	9a ad       	ldd	r25, Y+58	; 0x3a
    1624:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1628:	dc 01       	movw	r26, r24
    162a:	cb 01       	movw	r24, r22
    162c:	8e ab       	std	Y+54, r24	; 0x36
    162e:	8e a9       	ldd	r24, Y+54	; 0x36
    1630:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1632:	8f a1       	ldd	r24, Y+39	; 0x27
    1634:	8a 95       	dec	r24
    1636:	f1 f7       	brne	.-4      	; 0x1634 <LCD_INIT+0x31c>
    1638:	8f a3       	std	Y+39, r24	; 0x27
	_delay_us(40);
	LCD_SEND_COMMAND(LCD_DISPLAY_ON);
    163a:	8c e0       	ldi	r24, 0x0C	; 12
    163c:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <LCD_SEND_COMMAND>
    1640:	80 e0       	ldi	r24, 0x00	; 0
    1642:	90 e0       	ldi	r25, 0x00	; 0
    1644:	a0 e2       	ldi	r26, 0x20	; 32
    1646:	b2 e4       	ldi	r27, 0x42	; 66
    1648:	8b a3       	std	Y+35, r24	; 0x23
    164a:	9c a3       	std	Y+36, r25	; 0x24
    164c:	ad a3       	std	Y+37, r26	; 0x25
    164e:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1650:	6b a1       	ldd	r22, Y+35	; 0x23
    1652:	7c a1       	ldd	r23, Y+36	; 0x24
    1654:	8d a1       	ldd	r24, Y+37	; 0x25
    1656:	9e a1       	ldd	r25, Y+38	; 0x26
    1658:	2b ea       	ldi	r18, 0xAB	; 171
    165a:	3a ea       	ldi	r19, 0xAA	; 170
    165c:	4a e2       	ldi	r20, 0x2A	; 42
    165e:	50 e4       	ldi	r21, 0x40	; 64
    1660:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1664:	dc 01       	movw	r26, r24
    1666:	cb 01       	movw	r24, r22
    1668:	8f 8f       	std	Y+31, r24	; 0x1f
    166a:	98 a3       	std	Y+32, r25	; 0x20
    166c:	a9 a3       	std	Y+33, r26	; 0x21
    166e:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    1670:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1672:	78 a1       	ldd	r23, Y+32	; 0x20
    1674:	89 a1       	ldd	r24, Y+33	; 0x21
    1676:	9a a1       	ldd	r25, Y+34	; 0x22
    1678:	20 e0       	ldi	r18, 0x00	; 0
    167a:	30 e0       	ldi	r19, 0x00	; 0
    167c:	40 e8       	ldi	r20, 0x80	; 128
    167e:	5f e3       	ldi	r21, 0x3F	; 63
    1680:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1684:	88 23       	and	r24, r24
    1686:	1c f4       	brge	.+6      	; 0x168e <LCD_INIT+0x376>
		__ticks = 1;
    1688:	81 e0       	ldi	r24, 0x01	; 1
    168a:	8e 8f       	std	Y+30, r24	; 0x1e
    168c:	91 c0       	rjmp	.+290    	; 0x17b0 <LCD_INIT+0x498>
	else if (__tmp > 255)
    168e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1690:	78 a1       	ldd	r23, Y+32	; 0x20
    1692:	89 a1       	ldd	r24, Y+33	; 0x21
    1694:	9a a1       	ldd	r25, Y+34	; 0x22
    1696:	20 e0       	ldi	r18, 0x00	; 0
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	4f e7       	ldi	r20, 0x7F	; 127
    169c:	53 e4       	ldi	r21, 0x43	; 67
    169e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    16a2:	18 16       	cp	r1, r24
    16a4:	0c f0       	brlt	.+2      	; 0x16a8 <LCD_INIT+0x390>
    16a6:	7b c0       	rjmp	.+246    	; 0x179e <LCD_INIT+0x486>
	{
		_delay_ms(__us / 1000.0);
    16a8:	6b a1       	ldd	r22, Y+35	; 0x23
    16aa:	7c a1       	ldd	r23, Y+36	; 0x24
    16ac:	8d a1       	ldd	r24, Y+37	; 0x25
    16ae:	9e a1       	ldd	r25, Y+38	; 0x26
    16b0:	20 e0       	ldi	r18, 0x00	; 0
    16b2:	30 e0       	ldi	r19, 0x00	; 0
    16b4:	4a e7       	ldi	r20, 0x7A	; 122
    16b6:	54 e4       	ldi	r21, 0x44	; 68
    16b8:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    16bc:	dc 01       	movw	r26, r24
    16be:	cb 01       	movw	r24, r22
    16c0:	8a 8f       	std	Y+26, r24	; 0x1a
    16c2:	9b 8f       	std	Y+27, r25	; 0x1b
    16c4:	ac 8f       	std	Y+28, r26	; 0x1c
    16c6:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16c8:	6a 8d       	ldd	r22, Y+26	; 0x1a
    16ca:	7b 8d       	ldd	r23, Y+27	; 0x1b
    16cc:	8c 8d       	ldd	r24, Y+28	; 0x1c
    16ce:	9d 8d       	ldd	r25, Y+29	; 0x1d
    16d0:	20 e0       	ldi	r18, 0x00	; 0
    16d2:	30 e0       	ldi	r19, 0x00	; 0
    16d4:	4a ef       	ldi	r20, 0xFA	; 250
    16d6:	54 e4       	ldi	r21, 0x44	; 68
    16d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16dc:	dc 01       	movw	r26, r24
    16de:	cb 01       	movw	r24, r22
    16e0:	8e 8b       	std	Y+22, r24	; 0x16
    16e2:	9f 8b       	std	Y+23, r25	; 0x17
    16e4:	a8 8f       	std	Y+24, r26	; 0x18
    16e6:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    16e8:	6e 89       	ldd	r22, Y+22	; 0x16
    16ea:	7f 89       	ldd	r23, Y+23	; 0x17
    16ec:	88 8d       	ldd	r24, Y+24	; 0x18
    16ee:	99 8d       	ldd	r25, Y+25	; 0x19
    16f0:	20 e0       	ldi	r18, 0x00	; 0
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	40 e8       	ldi	r20, 0x80	; 128
    16f6:	5f e3       	ldi	r21, 0x3F	; 63
    16f8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    16fc:	88 23       	and	r24, r24
    16fe:	2c f4       	brge	.+10     	; 0x170a <LCD_INIT+0x3f2>
		__ticks = 1;
    1700:	81 e0       	ldi	r24, 0x01	; 1
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	9d 8b       	std	Y+21, r25	; 0x15
    1706:	8c 8b       	std	Y+20, r24	; 0x14
    1708:	3f c0       	rjmp	.+126    	; 0x1788 <LCD_INIT+0x470>
	else if (__tmp > 65535)
    170a:	6e 89       	ldd	r22, Y+22	; 0x16
    170c:	7f 89       	ldd	r23, Y+23	; 0x17
    170e:	88 8d       	ldd	r24, Y+24	; 0x18
    1710:	99 8d       	ldd	r25, Y+25	; 0x19
    1712:	20 e0       	ldi	r18, 0x00	; 0
    1714:	3f ef       	ldi	r19, 0xFF	; 255
    1716:	4f e7       	ldi	r20, 0x7F	; 127
    1718:	57 e4       	ldi	r21, 0x47	; 71
    171a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    171e:	18 16       	cp	r1, r24
    1720:	4c f5       	brge	.+82     	; 0x1774 <LCD_INIT+0x45c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1722:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1724:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1726:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1728:	9d 8d       	ldd	r25, Y+29	; 0x1d
    172a:	20 e0       	ldi	r18, 0x00	; 0
    172c:	30 e0       	ldi	r19, 0x00	; 0
    172e:	40 e2       	ldi	r20, 0x20	; 32
    1730:	51 e4       	ldi	r21, 0x41	; 65
    1732:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1736:	dc 01       	movw	r26, r24
    1738:	cb 01       	movw	r24, r22
    173a:	bc 01       	movw	r22, r24
    173c:	cd 01       	movw	r24, r26
    173e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1742:	dc 01       	movw	r26, r24
    1744:	cb 01       	movw	r24, r22
    1746:	9d 8b       	std	Y+21, r25	; 0x15
    1748:	8c 8b       	std	Y+20, r24	; 0x14
    174a:	0f c0       	rjmp	.+30     	; 0x176a <LCD_INIT+0x452>
    174c:	88 ec       	ldi	r24, 0xC8	; 200
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	9b 8b       	std	Y+19, r25	; 0x13
    1752:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1754:	8a 89       	ldd	r24, Y+18	; 0x12
    1756:	9b 89       	ldd	r25, Y+19	; 0x13
    1758:	01 97       	sbiw	r24, 0x01	; 1
    175a:	f1 f7       	brne	.-4      	; 0x1758 <LCD_INIT+0x440>
    175c:	9b 8b       	std	Y+19, r25	; 0x13
    175e:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1760:	8c 89       	ldd	r24, Y+20	; 0x14
    1762:	9d 89       	ldd	r25, Y+21	; 0x15
    1764:	01 97       	sbiw	r24, 0x01	; 1
    1766:	9d 8b       	std	Y+21, r25	; 0x15
    1768:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    176a:	8c 89       	ldd	r24, Y+20	; 0x14
    176c:	9d 89       	ldd	r25, Y+21	; 0x15
    176e:	00 97       	sbiw	r24, 0x00	; 0
    1770:	69 f7       	brne	.-38     	; 0x174c <LCD_INIT+0x434>
    1772:	24 c0       	rjmp	.+72     	; 0x17bc <LCD_INIT+0x4a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1774:	6e 89       	ldd	r22, Y+22	; 0x16
    1776:	7f 89       	ldd	r23, Y+23	; 0x17
    1778:	88 8d       	ldd	r24, Y+24	; 0x18
    177a:	99 8d       	ldd	r25, Y+25	; 0x19
    177c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1780:	dc 01       	movw	r26, r24
    1782:	cb 01       	movw	r24, r22
    1784:	9d 8b       	std	Y+21, r25	; 0x15
    1786:	8c 8b       	std	Y+20, r24	; 0x14
    1788:	8c 89       	ldd	r24, Y+20	; 0x14
    178a:	9d 89       	ldd	r25, Y+21	; 0x15
    178c:	99 8b       	std	Y+17, r25	; 0x11
    178e:	88 8b       	std	Y+16, r24	; 0x10
    1790:	88 89       	ldd	r24, Y+16	; 0x10
    1792:	99 89       	ldd	r25, Y+17	; 0x11
    1794:	01 97       	sbiw	r24, 0x01	; 1
    1796:	f1 f7       	brne	.-4      	; 0x1794 <LCD_INIT+0x47c>
    1798:	99 8b       	std	Y+17, r25	; 0x11
    179a:	88 8b       	std	Y+16, r24	; 0x10
    179c:	0f c0       	rjmp	.+30     	; 0x17bc <LCD_INIT+0x4a4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    179e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    17a0:	78 a1       	ldd	r23, Y+32	; 0x20
    17a2:	89 a1       	ldd	r24, Y+33	; 0x21
    17a4:	9a a1       	ldd	r25, Y+34	; 0x22
    17a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17aa:	dc 01       	movw	r26, r24
    17ac:	cb 01       	movw	r24, r22
    17ae:	8e 8f       	std	Y+30, r24	; 0x1e
    17b0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    17b2:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    17b4:	8f 85       	ldd	r24, Y+15	; 0x0f
    17b6:	8a 95       	dec	r24
    17b8:	f1 f7       	brne	.-4      	; 0x17b6 <LCD_INIT+0x49e>
    17ba:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(40);
	LCD_SEND_COMMAND(LCD_CLEAR_DISPLAY);
    17bc:	81 e0       	ldi	r24, 0x01	; 1
    17be:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <LCD_SEND_COMMAND>
    17c2:	80 e0       	ldi	r24, 0x00	; 0
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	a0 e0       	ldi	r26, 0x00	; 0
    17c8:	b0 e4       	ldi	r27, 0x40	; 64
    17ca:	8b 87       	std	Y+11, r24	; 0x0b
    17cc:	9c 87       	std	Y+12, r25	; 0x0c
    17ce:	ad 87       	std	Y+13, r26	; 0x0d
    17d0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17d2:	6b 85       	ldd	r22, Y+11	; 0x0b
    17d4:	7c 85       	ldd	r23, Y+12	; 0x0c
    17d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    17d8:	9e 85       	ldd	r25, Y+14	; 0x0e
    17da:	20 e0       	ldi	r18, 0x00	; 0
    17dc:	30 e0       	ldi	r19, 0x00	; 0
    17de:	4a ef       	ldi	r20, 0xFA	; 250
    17e0:	54 e4       	ldi	r21, 0x44	; 68
    17e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17e6:	dc 01       	movw	r26, r24
    17e8:	cb 01       	movw	r24, r22
    17ea:	8f 83       	std	Y+7, r24	; 0x07
    17ec:	98 87       	std	Y+8, r25	; 0x08
    17ee:	a9 87       	std	Y+9, r26	; 0x09
    17f0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    17f2:	6f 81       	ldd	r22, Y+7	; 0x07
    17f4:	78 85       	ldd	r23, Y+8	; 0x08
    17f6:	89 85       	ldd	r24, Y+9	; 0x09
    17f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    17fa:	20 e0       	ldi	r18, 0x00	; 0
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	40 e8       	ldi	r20, 0x80	; 128
    1800:	5f e3       	ldi	r21, 0x3F	; 63
    1802:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1806:	88 23       	and	r24, r24
    1808:	2c f4       	brge	.+10     	; 0x1814 <LCD_INIT+0x4fc>
		__ticks = 1;
    180a:	81 e0       	ldi	r24, 0x01	; 1
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	9e 83       	std	Y+6, r25	; 0x06
    1810:	8d 83       	std	Y+5, r24	; 0x05
    1812:	3f c0       	rjmp	.+126    	; 0x1892 <LCD_INIT+0x57a>
	else if (__tmp > 65535)
    1814:	6f 81       	ldd	r22, Y+7	; 0x07
    1816:	78 85       	ldd	r23, Y+8	; 0x08
    1818:	89 85       	ldd	r24, Y+9	; 0x09
    181a:	9a 85       	ldd	r25, Y+10	; 0x0a
    181c:	20 e0       	ldi	r18, 0x00	; 0
    181e:	3f ef       	ldi	r19, 0xFF	; 255
    1820:	4f e7       	ldi	r20, 0x7F	; 127
    1822:	57 e4       	ldi	r21, 0x47	; 71
    1824:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1828:	18 16       	cp	r1, r24
    182a:	4c f5       	brge	.+82     	; 0x187e <LCD_INIT+0x566>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    182c:	6b 85       	ldd	r22, Y+11	; 0x0b
    182e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1830:	8d 85       	ldd	r24, Y+13	; 0x0d
    1832:	9e 85       	ldd	r25, Y+14	; 0x0e
    1834:	20 e0       	ldi	r18, 0x00	; 0
    1836:	30 e0       	ldi	r19, 0x00	; 0
    1838:	40 e2       	ldi	r20, 0x20	; 32
    183a:	51 e4       	ldi	r21, 0x41	; 65
    183c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1840:	dc 01       	movw	r26, r24
    1842:	cb 01       	movw	r24, r22
    1844:	bc 01       	movw	r22, r24
    1846:	cd 01       	movw	r24, r26
    1848:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    184c:	dc 01       	movw	r26, r24
    184e:	cb 01       	movw	r24, r22
    1850:	9e 83       	std	Y+6, r25	; 0x06
    1852:	8d 83       	std	Y+5, r24	; 0x05
    1854:	0f c0       	rjmp	.+30     	; 0x1874 <LCD_INIT+0x55c>
    1856:	88 ec       	ldi	r24, 0xC8	; 200
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	9c 83       	std	Y+4, r25	; 0x04
    185c:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    185e:	8b 81       	ldd	r24, Y+3	; 0x03
    1860:	9c 81       	ldd	r25, Y+4	; 0x04
    1862:	01 97       	sbiw	r24, 0x01	; 1
    1864:	f1 f7       	brne	.-4      	; 0x1862 <LCD_INIT+0x54a>
    1866:	9c 83       	std	Y+4, r25	; 0x04
    1868:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    186a:	8d 81       	ldd	r24, Y+5	; 0x05
    186c:	9e 81       	ldd	r25, Y+6	; 0x06
    186e:	01 97       	sbiw	r24, 0x01	; 1
    1870:	9e 83       	std	Y+6, r25	; 0x06
    1872:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1874:	8d 81       	ldd	r24, Y+5	; 0x05
    1876:	9e 81       	ldd	r25, Y+6	; 0x06
    1878:	00 97       	sbiw	r24, 0x00	; 0
    187a:	69 f7       	brne	.-38     	; 0x1856 <LCD_INIT+0x53e>
    187c:	14 c0       	rjmp	.+40     	; 0x18a6 <LCD_INIT+0x58e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    187e:	6f 81       	ldd	r22, Y+7	; 0x07
    1880:	78 85       	ldd	r23, Y+8	; 0x08
    1882:	89 85       	ldd	r24, Y+9	; 0x09
    1884:	9a 85       	ldd	r25, Y+10	; 0x0a
    1886:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    188a:	dc 01       	movw	r26, r24
    188c:	cb 01       	movw	r24, r22
    188e:	9e 83       	std	Y+6, r25	; 0x06
    1890:	8d 83       	std	Y+5, r24	; 0x05
    1892:	8d 81       	ldd	r24, Y+5	; 0x05
    1894:	9e 81       	ldd	r25, Y+6	; 0x06
    1896:	9a 83       	std	Y+2, r25	; 0x02
    1898:	89 83       	std	Y+1, r24	; 0x01
    189a:	89 81       	ldd	r24, Y+1	; 0x01
    189c:	9a 81       	ldd	r25, Y+2	; 0x02
    189e:	01 97       	sbiw	r24, 0x01	; 1
    18a0:	f1 f7       	brne	.-4      	; 0x189e <LCD_INIT+0x586>
    18a2:	9a 83       	std	Y+2, r25	; 0x02
    18a4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	LCD_SEND_COMMAND(LCD_ENTRY_MODE);
    18a6:	86 e0       	ldi	r24, 0x06	; 6
    18a8:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <LCD_SEND_COMMAND>

}
    18ac:	c4 5b       	subi	r28, 0xB4	; 180
    18ae:	df 4f       	sbci	r29, 0xFF	; 255
    18b0:	0f b6       	in	r0, 0x3f	; 63
    18b2:	f8 94       	cli
    18b4:	de bf       	out	0x3e, r29	; 62
    18b6:	0f be       	out	0x3f, r0	; 63
    18b8:	cd bf       	out	0x3d, r28	; 61
    18ba:	cf 91       	pop	r28
    18bc:	df 91       	pop	r29
    18be:	1f 91       	pop	r17
    18c0:	0f 91       	pop	r16
    18c2:	08 95       	ret

000018c4 <LCD_SEND_COMMAND>:
void LCD_SEND_COMMAND(u8 command){
    18c4:	df 93       	push	r29
    18c6:	cf 93       	push	r28
    18c8:	cd b7       	in	r28, 0x3d	; 61
    18ca:	de b7       	in	r29, 0x3e	; 62
    18cc:	2f 97       	sbiw	r28, 0x0f	; 15
    18ce:	0f b6       	in	r0, 0x3f	; 63
    18d0:	f8 94       	cli
    18d2:	de bf       	out	0x3e, r29	; 62
    18d4:	0f be       	out	0x3f, r0	; 63
    18d6:	cd bf       	out	0x3d, r28	; 61
    18d8:	8f 87       	std	Y+15, r24	; 0x0f
	//rest rs
	DIO_SelectOutputForPin( LCD_CONTROL , LCD_RS,LOW);
    18da:	82 e0       	ldi	r24, 0x02	; 2
    18dc:	60 e0       	ldi	r22, 0x00	; 0
    18de:	40 e0       	ldi	r20, 0x00	; 0
    18e0:	0e 94 cd 07 	call	0xf9a	; 0xf9a <DIO_SelectOutputForPin>
	//RW
	DIO_SelectOutputForPin( LCD_CONTROL , LCD_RW,LOW);
    18e4:	82 e0       	ldi	r24, 0x02	; 2
    18e6:	61 e0       	ldi	r22, 0x01	; 1
    18e8:	40 e0       	ldi	r20, 0x00	; 0
    18ea:	0e 94 cd 07 	call	0xf9a	; 0xf9a <DIO_SelectOutputForPin>
	//DATA
	DIO_SelectOutputForGroup( LCD_DATA , command);
    18ee:	81 e0       	ldi	r24, 0x01	; 1
    18f0:	6f 85       	ldd	r22, Y+15	; 0x0f
    18f2:	0e 94 8b 07 	call	0xf16	; 0xf16 <DIO_SelectOutputForGroup>

	DIO_SelectOutputForPin( LCD_CONTROL , LCD_E , HIGH );
    18f6:	82 e0       	ldi	r24, 0x02	; 2
    18f8:	62 e0       	ldi	r22, 0x02	; 2
    18fa:	41 e0       	ldi	r20, 0x01	; 1
    18fc:	0e 94 cd 07 	call	0xf9a	; 0xf9a <DIO_SelectOutputForPin>
    1900:	80 e0       	ldi	r24, 0x00	; 0
    1902:	90 e0       	ldi	r25, 0x00	; 0
    1904:	a0 e0       	ldi	r26, 0x00	; 0
    1906:	b0 e4       	ldi	r27, 0x40	; 64
    1908:	8b 87       	std	Y+11, r24	; 0x0b
    190a:	9c 87       	std	Y+12, r25	; 0x0c
    190c:	ad 87       	std	Y+13, r26	; 0x0d
    190e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1910:	6b 85       	ldd	r22, Y+11	; 0x0b
    1912:	7c 85       	ldd	r23, Y+12	; 0x0c
    1914:	8d 85       	ldd	r24, Y+13	; 0x0d
    1916:	9e 85       	ldd	r25, Y+14	; 0x0e
    1918:	20 e0       	ldi	r18, 0x00	; 0
    191a:	30 e0       	ldi	r19, 0x00	; 0
    191c:	4a ef       	ldi	r20, 0xFA	; 250
    191e:	54 e4       	ldi	r21, 0x44	; 68
    1920:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1924:	dc 01       	movw	r26, r24
    1926:	cb 01       	movw	r24, r22
    1928:	8f 83       	std	Y+7, r24	; 0x07
    192a:	98 87       	std	Y+8, r25	; 0x08
    192c:	a9 87       	std	Y+9, r26	; 0x09
    192e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1930:	6f 81       	ldd	r22, Y+7	; 0x07
    1932:	78 85       	ldd	r23, Y+8	; 0x08
    1934:	89 85       	ldd	r24, Y+9	; 0x09
    1936:	9a 85       	ldd	r25, Y+10	; 0x0a
    1938:	20 e0       	ldi	r18, 0x00	; 0
    193a:	30 e0       	ldi	r19, 0x00	; 0
    193c:	40 e8       	ldi	r20, 0x80	; 128
    193e:	5f e3       	ldi	r21, 0x3F	; 63
    1940:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1944:	88 23       	and	r24, r24
    1946:	2c f4       	brge	.+10     	; 0x1952 <LCD_SEND_COMMAND+0x8e>
		__ticks = 1;
    1948:	81 e0       	ldi	r24, 0x01	; 1
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	9e 83       	std	Y+6, r25	; 0x06
    194e:	8d 83       	std	Y+5, r24	; 0x05
    1950:	3f c0       	rjmp	.+126    	; 0x19d0 <LCD_SEND_COMMAND+0x10c>
	else if (__tmp > 65535)
    1952:	6f 81       	ldd	r22, Y+7	; 0x07
    1954:	78 85       	ldd	r23, Y+8	; 0x08
    1956:	89 85       	ldd	r24, Y+9	; 0x09
    1958:	9a 85       	ldd	r25, Y+10	; 0x0a
    195a:	20 e0       	ldi	r18, 0x00	; 0
    195c:	3f ef       	ldi	r19, 0xFF	; 255
    195e:	4f e7       	ldi	r20, 0x7F	; 127
    1960:	57 e4       	ldi	r21, 0x47	; 71
    1962:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1966:	18 16       	cp	r1, r24
    1968:	4c f5       	brge	.+82     	; 0x19bc <LCD_SEND_COMMAND+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    196a:	6b 85       	ldd	r22, Y+11	; 0x0b
    196c:	7c 85       	ldd	r23, Y+12	; 0x0c
    196e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1970:	9e 85       	ldd	r25, Y+14	; 0x0e
    1972:	20 e0       	ldi	r18, 0x00	; 0
    1974:	30 e0       	ldi	r19, 0x00	; 0
    1976:	40 e2       	ldi	r20, 0x20	; 32
    1978:	51 e4       	ldi	r21, 0x41	; 65
    197a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    197e:	dc 01       	movw	r26, r24
    1980:	cb 01       	movw	r24, r22
    1982:	bc 01       	movw	r22, r24
    1984:	cd 01       	movw	r24, r26
    1986:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    198a:	dc 01       	movw	r26, r24
    198c:	cb 01       	movw	r24, r22
    198e:	9e 83       	std	Y+6, r25	; 0x06
    1990:	8d 83       	std	Y+5, r24	; 0x05
    1992:	0f c0       	rjmp	.+30     	; 0x19b2 <LCD_SEND_COMMAND+0xee>
    1994:	88 ec       	ldi	r24, 0xC8	; 200
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	9c 83       	std	Y+4, r25	; 0x04
    199a:	8b 83       	std	Y+3, r24	; 0x03
    199c:	8b 81       	ldd	r24, Y+3	; 0x03
    199e:	9c 81       	ldd	r25, Y+4	; 0x04
    19a0:	01 97       	sbiw	r24, 0x01	; 1
    19a2:	f1 f7       	brne	.-4      	; 0x19a0 <LCD_SEND_COMMAND+0xdc>
    19a4:	9c 83       	std	Y+4, r25	; 0x04
    19a6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19a8:	8d 81       	ldd	r24, Y+5	; 0x05
    19aa:	9e 81       	ldd	r25, Y+6	; 0x06
    19ac:	01 97       	sbiw	r24, 0x01	; 1
    19ae:	9e 83       	std	Y+6, r25	; 0x06
    19b0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19b2:	8d 81       	ldd	r24, Y+5	; 0x05
    19b4:	9e 81       	ldd	r25, Y+6	; 0x06
    19b6:	00 97       	sbiw	r24, 0x00	; 0
    19b8:	69 f7       	brne	.-38     	; 0x1994 <LCD_SEND_COMMAND+0xd0>
    19ba:	14 c0       	rjmp	.+40     	; 0x19e4 <LCD_SEND_COMMAND+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19bc:	6f 81       	ldd	r22, Y+7	; 0x07
    19be:	78 85       	ldd	r23, Y+8	; 0x08
    19c0:	89 85       	ldd	r24, Y+9	; 0x09
    19c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    19c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19c8:	dc 01       	movw	r26, r24
    19ca:	cb 01       	movw	r24, r22
    19cc:	9e 83       	std	Y+6, r25	; 0x06
    19ce:	8d 83       	std	Y+5, r24	; 0x05
    19d0:	8d 81       	ldd	r24, Y+5	; 0x05
    19d2:	9e 81       	ldd	r25, Y+6	; 0x06
    19d4:	9a 83       	std	Y+2, r25	; 0x02
    19d6:	89 83       	std	Y+1, r24	; 0x01
    19d8:	89 81       	ldd	r24, Y+1	; 0x01
    19da:	9a 81       	ldd	r25, Y+2	; 0x02
    19dc:	01 97       	sbiw	r24, 0x01	; 1
    19de:	f1 f7       	brne	.-4      	; 0x19dc <LCD_SEND_COMMAND+0x118>
    19e0:	9a 83       	std	Y+2, r25	; 0x02
    19e2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_SelectOutputForPin(LCD_CONTROL , LCD_E,LOW);
    19e4:	82 e0       	ldi	r24, 0x02	; 2
    19e6:	62 e0       	ldi	r22, 0x02	; 2
    19e8:	40 e0       	ldi	r20, 0x00	; 0
    19ea:	0e 94 cd 07 	call	0xf9a	; 0xf9a <DIO_SelectOutputForPin>





}
    19ee:	2f 96       	adiw	r28, 0x0f	; 15
    19f0:	0f b6       	in	r0, 0x3f	; 63
    19f2:	f8 94       	cli
    19f4:	de bf       	out	0x3e, r29	; 62
    19f6:	0f be       	out	0x3f, r0	; 63
    19f8:	cd bf       	out	0x3d, r28	; 61
    19fa:	cf 91       	pop	r28
    19fc:	df 91       	pop	r29
    19fe:	08 95       	ret

00001a00 <LCD_SEND_DATA>:
void LCD_SEND_DATA(u8 data){
    1a00:	df 93       	push	r29
    1a02:	cf 93       	push	r28
    1a04:	cd b7       	in	r28, 0x3d	; 61
    1a06:	de b7       	in	r29, 0x3e	; 62
    1a08:	2f 97       	sbiw	r28, 0x0f	; 15
    1a0a:	0f b6       	in	r0, 0x3f	; 63
    1a0c:	f8 94       	cli
    1a0e:	de bf       	out	0x3e, r29	; 62
    1a10:	0f be       	out	0x3f, r0	; 63
    1a12:	cd bf       	out	0x3d, r28	; 61
    1a14:	8f 87       	std	Y+15, r24	; 0x0f
	//rest rs
	DIO_SelectOutputForPin( LCD_CONTROL , LCD_RS,HIGH);
    1a16:	82 e0       	ldi	r24, 0x02	; 2
    1a18:	60 e0       	ldi	r22, 0x00	; 0
    1a1a:	41 e0       	ldi	r20, 0x01	; 1
    1a1c:	0e 94 cd 07 	call	0xf9a	; 0xf9a <DIO_SelectOutputForPin>
	//RW
	DIO_SelectOutputForPin( LCD_CONTROL , LCD_RW , LOW );
    1a20:	82 e0       	ldi	r24, 0x02	; 2
    1a22:	61 e0       	ldi	r22, 0x01	; 1
    1a24:	40 e0       	ldi	r20, 0x00	; 0
    1a26:	0e 94 cd 07 	call	0xf9a	; 0xf9a <DIO_SelectOutputForPin>
	//DATA
	DIO_SelectOutputForGroup( LCD_DATA , data );
    1a2a:	81 e0       	ldi	r24, 0x01	; 1
    1a2c:	6f 85       	ldd	r22, Y+15	; 0x0f
    1a2e:	0e 94 8b 07 	call	0xf16	; 0xf16 <DIO_SelectOutputForGroup>

	DIO_SelectOutputForPin( LCD_CONTROL, LCD_E , HIGH );
    1a32:	82 e0       	ldi	r24, 0x02	; 2
    1a34:	62 e0       	ldi	r22, 0x02	; 2
    1a36:	41 e0       	ldi	r20, 0x01	; 1
    1a38:	0e 94 cd 07 	call	0xf9a	; 0xf9a <DIO_SelectOutputForPin>
    1a3c:	80 e0       	ldi	r24, 0x00	; 0
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	a0 e0       	ldi	r26, 0x00	; 0
    1a42:	b0 e4       	ldi	r27, 0x40	; 64
    1a44:	8b 87       	std	Y+11, r24	; 0x0b
    1a46:	9c 87       	std	Y+12, r25	; 0x0c
    1a48:	ad 87       	std	Y+13, r26	; 0x0d
    1a4a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a4c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a4e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a50:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a52:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a54:	20 e0       	ldi	r18, 0x00	; 0
    1a56:	30 e0       	ldi	r19, 0x00	; 0
    1a58:	4a ef       	ldi	r20, 0xFA	; 250
    1a5a:	54 e4       	ldi	r21, 0x44	; 68
    1a5c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a60:	dc 01       	movw	r26, r24
    1a62:	cb 01       	movw	r24, r22
    1a64:	8f 83       	std	Y+7, r24	; 0x07
    1a66:	98 87       	std	Y+8, r25	; 0x08
    1a68:	a9 87       	std	Y+9, r26	; 0x09
    1a6a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a6c:	6f 81       	ldd	r22, Y+7	; 0x07
    1a6e:	78 85       	ldd	r23, Y+8	; 0x08
    1a70:	89 85       	ldd	r24, Y+9	; 0x09
    1a72:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a74:	20 e0       	ldi	r18, 0x00	; 0
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	40 e8       	ldi	r20, 0x80	; 128
    1a7a:	5f e3       	ldi	r21, 0x3F	; 63
    1a7c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1a80:	88 23       	and	r24, r24
    1a82:	2c f4       	brge	.+10     	; 0x1a8e <LCD_SEND_DATA+0x8e>
		__ticks = 1;
    1a84:	81 e0       	ldi	r24, 0x01	; 1
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	9e 83       	std	Y+6, r25	; 0x06
    1a8a:	8d 83       	std	Y+5, r24	; 0x05
    1a8c:	3f c0       	rjmp	.+126    	; 0x1b0c <LCD_SEND_DATA+0x10c>
	else if (__tmp > 65535)
    1a8e:	6f 81       	ldd	r22, Y+7	; 0x07
    1a90:	78 85       	ldd	r23, Y+8	; 0x08
    1a92:	89 85       	ldd	r24, Y+9	; 0x09
    1a94:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a96:	20 e0       	ldi	r18, 0x00	; 0
    1a98:	3f ef       	ldi	r19, 0xFF	; 255
    1a9a:	4f e7       	ldi	r20, 0x7F	; 127
    1a9c:	57 e4       	ldi	r21, 0x47	; 71
    1a9e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1aa2:	18 16       	cp	r1, r24
    1aa4:	4c f5       	brge	.+82     	; 0x1af8 <LCD_SEND_DATA+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aa6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1aa8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1aaa:	8d 85       	ldd	r24, Y+13	; 0x0d
    1aac:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	30 e0       	ldi	r19, 0x00	; 0
    1ab2:	40 e2       	ldi	r20, 0x20	; 32
    1ab4:	51 e4       	ldi	r21, 0x41	; 65
    1ab6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1aba:	dc 01       	movw	r26, r24
    1abc:	cb 01       	movw	r24, r22
    1abe:	bc 01       	movw	r22, r24
    1ac0:	cd 01       	movw	r24, r26
    1ac2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ac6:	dc 01       	movw	r26, r24
    1ac8:	cb 01       	movw	r24, r22
    1aca:	9e 83       	std	Y+6, r25	; 0x06
    1acc:	8d 83       	std	Y+5, r24	; 0x05
    1ace:	0f c0       	rjmp	.+30     	; 0x1aee <LCD_SEND_DATA+0xee>
    1ad0:	88 ec       	ldi	r24, 0xC8	; 200
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	9c 83       	std	Y+4, r25	; 0x04
    1ad6:	8b 83       	std	Y+3, r24	; 0x03
    1ad8:	8b 81       	ldd	r24, Y+3	; 0x03
    1ada:	9c 81       	ldd	r25, Y+4	; 0x04
    1adc:	01 97       	sbiw	r24, 0x01	; 1
    1ade:	f1 f7       	brne	.-4      	; 0x1adc <LCD_SEND_DATA+0xdc>
    1ae0:	9c 83       	std	Y+4, r25	; 0x04
    1ae2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ae4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ae6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ae8:	01 97       	sbiw	r24, 0x01	; 1
    1aea:	9e 83       	std	Y+6, r25	; 0x06
    1aec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aee:	8d 81       	ldd	r24, Y+5	; 0x05
    1af0:	9e 81       	ldd	r25, Y+6	; 0x06
    1af2:	00 97       	sbiw	r24, 0x00	; 0
    1af4:	69 f7       	brne	.-38     	; 0x1ad0 <LCD_SEND_DATA+0xd0>
    1af6:	14 c0       	rjmp	.+40     	; 0x1b20 <LCD_SEND_DATA+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1af8:	6f 81       	ldd	r22, Y+7	; 0x07
    1afa:	78 85       	ldd	r23, Y+8	; 0x08
    1afc:	89 85       	ldd	r24, Y+9	; 0x09
    1afe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b04:	dc 01       	movw	r26, r24
    1b06:	cb 01       	movw	r24, r22
    1b08:	9e 83       	std	Y+6, r25	; 0x06
    1b0a:	8d 83       	std	Y+5, r24	; 0x05
    1b0c:	8d 81       	ldd	r24, Y+5	; 0x05
    1b0e:	9e 81       	ldd	r25, Y+6	; 0x06
    1b10:	9a 83       	std	Y+2, r25	; 0x02
    1b12:	89 83       	std	Y+1, r24	; 0x01
    1b14:	89 81       	ldd	r24, Y+1	; 0x01
    1b16:	9a 81       	ldd	r25, Y+2	; 0x02
    1b18:	01 97       	sbiw	r24, 0x01	; 1
    1b1a:	f1 f7       	brne	.-4      	; 0x1b18 <LCD_SEND_DATA+0x118>
    1b1c:	9a 83       	std	Y+2, r25	; 0x02
    1b1e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_SelectOutputForPin( LCD_CONTROL , LCD_E , LOW );
    1b20:	82 e0       	ldi	r24, 0x02	; 2
    1b22:	62 e0       	ldi	r22, 0x02	; 2
    1b24:	40 e0       	ldi	r20, 0x00	; 0
    1b26:	0e 94 cd 07 	call	0xf9a	; 0xf9a <DIO_SelectOutputForPin>




}
    1b2a:	2f 96       	adiw	r28, 0x0f	; 15
    1b2c:	0f b6       	in	r0, 0x3f	; 63
    1b2e:	f8 94       	cli
    1b30:	de bf       	out	0x3e, r29	; 62
    1b32:	0f be       	out	0x3f, r0	; 63
    1b34:	cd bf       	out	0x3d, r28	; 61
    1b36:	cf 91       	pop	r28
    1b38:	df 91       	pop	r29
    1b3a:	08 95       	ret

00001b3c <LCD_CLEAR>:
void LCD_CLEAR(){
    1b3c:	df 93       	push	r29
    1b3e:	cf 93       	push	r28
    1b40:	cd b7       	in	r28, 0x3d	; 61
    1b42:	de b7       	in	r29, 0x3e	; 62
    1b44:	2e 97       	sbiw	r28, 0x0e	; 14
    1b46:	0f b6       	in	r0, 0x3f	; 63
    1b48:	f8 94       	cli
    1b4a:	de bf       	out	0x3e, r29	; 62
    1b4c:	0f be       	out	0x3f, r0	; 63
    1b4e:	cd bf       	out	0x3d, r28	; 61

	LCD_SEND_COMMAND(LCD_CLEAR_DISPLAY);
    1b50:	81 e0       	ldi	r24, 0x01	; 1
    1b52:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <LCD_SEND_COMMAND>
    1b56:	80 e0       	ldi	r24, 0x00	; 0
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	a0 e0       	ldi	r26, 0x00	; 0
    1b5c:	b0 e4       	ldi	r27, 0x40	; 64
    1b5e:	8b 87       	std	Y+11, r24	; 0x0b
    1b60:	9c 87       	std	Y+12, r25	; 0x0c
    1b62:	ad 87       	std	Y+13, r26	; 0x0d
    1b64:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b66:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b68:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b6c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b6e:	20 e0       	ldi	r18, 0x00	; 0
    1b70:	30 e0       	ldi	r19, 0x00	; 0
    1b72:	4a ef       	ldi	r20, 0xFA	; 250
    1b74:	54 e4       	ldi	r21, 0x44	; 68
    1b76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b7a:	dc 01       	movw	r26, r24
    1b7c:	cb 01       	movw	r24, r22
    1b7e:	8f 83       	std	Y+7, r24	; 0x07
    1b80:	98 87       	std	Y+8, r25	; 0x08
    1b82:	a9 87       	std	Y+9, r26	; 0x09
    1b84:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b86:	6f 81       	ldd	r22, Y+7	; 0x07
    1b88:	78 85       	ldd	r23, Y+8	; 0x08
    1b8a:	89 85       	ldd	r24, Y+9	; 0x09
    1b8c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b8e:	20 e0       	ldi	r18, 0x00	; 0
    1b90:	30 e0       	ldi	r19, 0x00	; 0
    1b92:	40 e8       	ldi	r20, 0x80	; 128
    1b94:	5f e3       	ldi	r21, 0x3F	; 63
    1b96:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1b9a:	88 23       	and	r24, r24
    1b9c:	2c f4       	brge	.+10     	; 0x1ba8 <LCD_CLEAR+0x6c>
		__ticks = 1;
    1b9e:	81 e0       	ldi	r24, 0x01	; 1
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	9e 83       	std	Y+6, r25	; 0x06
    1ba4:	8d 83       	std	Y+5, r24	; 0x05
    1ba6:	3f c0       	rjmp	.+126    	; 0x1c26 <LCD_CLEAR+0xea>
	else if (__tmp > 65535)
    1ba8:	6f 81       	ldd	r22, Y+7	; 0x07
    1baa:	78 85       	ldd	r23, Y+8	; 0x08
    1bac:	89 85       	ldd	r24, Y+9	; 0x09
    1bae:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bb0:	20 e0       	ldi	r18, 0x00	; 0
    1bb2:	3f ef       	ldi	r19, 0xFF	; 255
    1bb4:	4f e7       	ldi	r20, 0x7F	; 127
    1bb6:	57 e4       	ldi	r21, 0x47	; 71
    1bb8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1bbc:	18 16       	cp	r1, r24
    1bbe:	4c f5       	brge	.+82     	; 0x1c12 <LCD_CLEAR+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bc0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1bc2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1bc4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bc6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1bc8:	20 e0       	ldi	r18, 0x00	; 0
    1bca:	30 e0       	ldi	r19, 0x00	; 0
    1bcc:	40 e2       	ldi	r20, 0x20	; 32
    1bce:	51 e4       	ldi	r21, 0x41	; 65
    1bd0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bd4:	dc 01       	movw	r26, r24
    1bd6:	cb 01       	movw	r24, r22
    1bd8:	bc 01       	movw	r22, r24
    1bda:	cd 01       	movw	r24, r26
    1bdc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1be0:	dc 01       	movw	r26, r24
    1be2:	cb 01       	movw	r24, r22
    1be4:	9e 83       	std	Y+6, r25	; 0x06
    1be6:	8d 83       	std	Y+5, r24	; 0x05
    1be8:	0f c0       	rjmp	.+30     	; 0x1c08 <LCD_CLEAR+0xcc>
    1bea:	88 ec       	ldi	r24, 0xC8	; 200
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	9c 83       	std	Y+4, r25	; 0x04
    1bf0:	8b 83       	std	Y+3, r24	; 0x03
    1bf2:	8b 81       	ldd	r24, Y+3	; 0x03
    1bf4:	9c 81       	ldd	r25, Y+4	; 0x04
    1bf6:	01 97       	sbiw	r24, 0x01	; 1
    1bf8:	f1 f7       	brne	.-4      	; 0x1bf6 <LCD_CLEAR+0xba>
    1bfa:	9c 83       	std	Y+4, r25	; 0x04
    1bfc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bfe:	8d 81       	ldd	r24, Y+5	; 0x05
    1c00:	9e 81       	ldd	r25, Y+6	; 0x06
    1c02:	01 97       	sbiw	r24, 0x01	; 1
    1c04:	9e 83       	std	Y+6, r25	; 0x06
    1c06:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c08:	8d 81       	ldd	r24, Y+5	; 0x05
    1c0a:	9e 81       	ldd	r25, Y+6	; 0x06
    1c0c:	00 97       	sbiw	r24, 0x00	; 0
    1c0e:	69 f7       	brne	.-38     	; 0x1bea <LCD_CLEAR+0xae>
    1c10:	14 c0       	rjmp	.+40     	; 0x1c3a <LCD_CLEAR+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c12:	6f 81       	ldd	r22, Y+7	; 0x07
    1c14:	78 85       	ldd	r23, Y+8	; 0x08
    1c16:	89 85       	ldd	r24, Y+9	; 0x09
    1c18:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c1e:	dc 01       	movw	r26, r24
    1c20:	cb 01       	movw	r24, r22
    1c22:	9e 83       	std	Y+6, r25	; 0x06
    1c24:	8d 83       	std	Y+5, r24	; 0x05
    1c26:	8d 81       	ldd	r24, Y+5	; 0x05
    1c28:	9e 81       	ldd	r25, Y+6	; 0x06
    1c2a:	9a 83       	std	Y+2, r25	; 0x02
    1c2c:	89 83       	std	Y+1, r24	; 0x01
    1c2e:	89 81       	ldd	r24, Y+1	; 0x01
    1c30:	9a 81       	ldd	r25, Y+2	; 0x02
    1c32:	01 97       	sbiw	r24, 0x01	; 1
    1c34:	f1 f7       	brne	.-4      	; 0x1c32 <LCD_CLEAR+0xf6>
    1c36:	9a 83       	std	Y+2, r25	; 0x02
    1c38:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);

}
    1c3a:	2e 96       	adiw	r28, 0x0e	; 14
    1c3c:	0f b6       	in	r0, 0x3f	; 63
    1c3e:	f8 94       	cli
    1c40:	de bf       	out	0x3e, r29	; 62
    1c42:	0f be       	out	0x3f, r0	; 63
    1c44:	cd bf       	out	0x3d, r28	; 61
    1c46:	cf 91       	pop	r28
    1c48:	df 91       	pop	r29
    1c4a:	08 95       	ret

00001c4c <LCD_DISPLAY_STRING>:
void LCD_DISPLAY_STRING(u8* string){
    1c4c:	df 93       	push	r29
    1c4e:	cf 93       	push	r28
    1c50:	00 d0       	rcall	.+0      	; 0x1c52 <LCD_DISPLAY_STRING+0x6>
    1c52:	0f 92       	push	r0
    1c54:	cd b7       	in	r28, 0x3d	; 61
    1c56:	de b7       	in	r29, 0x3e	; 62
    1c58:	9b 83       	std	Y+3, r25	; 0x03
    1c5a:	8a 83       	std	Y+2, r24	; 0x02

	u8 i=0;
    1c5c:	19 82       	std	Y+1, r1	; 0x01
    1c5e:	0e c0       	rjmp	.+28     	; 0x1c7c <LCD_DISPLAY_STRING+0x30>
	while(string[i] != '\0'){
		LCD_SEND_DATA(string[i]);
    1c60:	89 81       	ldd	r24, Y+1	; 0x01
    1c62:	28 2f       	mov	r18, r24
    1c64:	30 e0       	ldi	r19, 0x00	; 0
    1c66:	8a 81       	ldd	r24, Y+2	; 0x02
    1c68:	9b 81       	ldd	r25, Y+3	; 0x03
    1c6a:	fc 01       	movw	r30, r24
    1c6c:	e2 0f       	add	r30, r18
    1c6e:	f3 1f       	adc	r31, r19
    1c70:	80 81       	ld	r24, Z
    1c72:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <LCD_SEND_DATA>
		i++;
    1c76:	89 81       	ldd	r24, Y+1	; 0x01
    1c78:	8f 5f       	subi	r24, 0xFF	; 255
    1c7a:	89 83       	std	Y+1, r24	; 0x01

}
void LCD_DISPLAY_STRING(u8* string){

	u8 i=0;
	while(string[i] != '\0'){
    1c7c:	89 81       	ldd	r24, Y+1	; 0x01
    1c7e:	28 2f       	mov	r18, r24
    1c80:	30 e0       	ldi	r19, 0x00	; 0
    1c82:	8a 81       	ldd	r24, Y+2	; 0x02
    1c84:	9b 81       	ldd	r25, Y+3	; 0x03
    1c86:	fc 01       	movw	r30, r24
    1c88:	e2 0f       	add	r30, r18
    1c8a:	f3 1f       	adc	r31, r19
    1c8c:	80 81       	ld	r24, Z
    1c8e:	88 23       	and	r24, r24
    1c90:	39 f7       	brne	.-50     	; 0x1c60 <LCD_DISPLAY_STRING+0x14>
		LCD_SEND_DATA(string[i]);
		i++;
	}

}
    1c92:	0f 90       	pop	r0
    1c94:	0f 90       	pop	r0
    1c96:	0f 90       	pop	r0
    1c98:	cf 91       	pop	r28
    1c9a:	df 91       	pop	r29
    1c9c:	08 95       	ret

00001c9e <LCD_GOTO_XY>:
void LCD_GOTO_XY(u8 ypos ,u8 xpos){
    1c9e:	df 93       	push	r29
    1ca0:	cf 93       	push	r28
    1ca2:	00 d0       	rcall	.+0      	; 0x1ca4 <LCD_GOTO_XY+0x6>
    1ca4:	00 d0       	rcall	.+0      	; 0x1ca6 <LCD_GOTO_XY+0x8>
    1ca6:	0f 92       	push	r0
    1ca8:	cd b7       	in	r28, 0x3d	; 61
    1caa:	de b7       	in	r29, 0x3e	; 62
    1cac:	8a 83       	std	Y+2, r24	; 0x02
    1cae:	6b 83       	std	Y+3, r22	; 0x03
	u8 DDRAM_address = 0 ;
    1cb0:	19 82       	std	Y+1, r1	; 0x01
	switch(ypos){
    1cb2:	8a 81       	ldd	r24, Y+2	; 0x02
    1cb4:	28 2f       	mov	r18, r24
    1cb6:	30 e0       	ldi	r19, 0x00	; 0
    1cb8:	3d 83       	std	Y+5, r19	; 0x05
    1cba:	2c 83       	std	Y+4, r18	; 0x04
    1cbc:	8c 81       	ldd	r24, Y+4	; 0x04
    1cbe:	9d 81       	ldd	r25, Y+5	; 0x05
    1cc0:	00 97       	sbiw	r24, 0x00	; 0
    1cc2:	31 f0       	breq	.+12     	; 0x1cd0 <LCD_GOTO_XY+0x32>
    1cc4:	2c 81       	ldd	r18, Y+4	; 0x04
    1cc6:	3d 81       	ldd	r19, Y+5	; 0x05
    1cc8:	21 30       	cpi	r18, 0x01	; 1
    1cca:	31 05       	cpc	r19, r1
    1ccc:	21 f0       	breq	.+8      	; 0x1cd6 <LCD_GOTO_XY+0x38>
    1cce:	06 c0       	rjmp	.+12     	; 0x1cdc <LCD_GOTO_XY+0x3e>
		case LINE1: DDRAM_address =LINE1ADDRESS + xpos; break;
    1cd0:	8b 81       	ldd	r24, Y+3	; 0x03
    1cd2:	89 83       	std	Y+1, r24	; 0x01
    1cd4:	03 c0       	rjmp	.+6      	; 0x1cdc <LCD_GOTO_XY+0x3e>
		case LINE2: DDRAM_address =LINE2ADDRESS + xpos; break;
    1cd6:	8b 81       	ldd	r24, Y+3	; 0x03
    1cd8:	80 5c       	subi	r24, 0xC0	; 192
    1cda:	89 83       	std	Y+1, r24	; 0x01

	}
	LCD_SEND_COMMAND(DDRAM_address + SETDDRAMADDRESS);
    1cdc:	89 81       	ldd	r24, Y+1	; 0x01
    1cde:	80 58       	subi	r24, 0x80	; 128
    1ce0:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <LCD_SEND_COMMAND>

}
    1ce4:	0f 90       	pop	r0
    1ce6:	0f 90       	pop	r0
    1ce8:	0f 90       	pop	r0
    1cea:	0f 90       	pop	r0
    1cec:	0f 90       	pop	r0
    1cee:	cf 91       	pop	r28
    1cf0:	df 91       	pop	r29
    1cf2:	08 95       	ret

00001cf4 <LCD_CUSTUM_CHAR>:

void LCD_CUSTUM_CHAR(u8* arr , u8 blockno , u8 xpos , u8 ypos){
    1cf4:	df 93       	push	r29
    1cf6:	cf 93       	push	r28
    1cf8:	cd b7       	in	r28, 0x3d	; 61
    1cfa:	de b7       	in	r29, 0x3e	; 62
    1cfc:	27 97       	sbiw	r28, 0x07	; 7
    1cfe:	0f b6       	in	r0, 0x3f	; 63
    1d00:	f8 94       	cli
    1d02:	de bf       	out	0x3e, r29	; 62
    1d04:	0f be       	out	0x3f, r0	; 63
    1d06:	cd bf       	out	0x3d, r28	; 61
    1d08:	9c 83       	std	Y+4, r25	; 0x04
    1d0a:	8b 83       	std	Y+3, r24	; 0x03
    1d0c:	6d 83       	std	Y+5, r22	; 0x05
    1d0e:	4e 83       	std	Y+6, r20	; 0x06
    1d10:	2f 83       	std	Y+7, r18	; 0x07
	if(blockno < 8){
    1d12:	8d 81       	ldd	r24, Y+5	; 0x05
    1d14:	88 30       	cpi	r24, 0x08	; 8
    1d16:	48 f5       	brcc	.+82     	; 0x1d6a <LCD_CUSTUM_CHAR+0x76>
		u8 CGRAM_address =0;
    1d18:	1a 82       	std	Y+2, r1	; 0x02
		CGRAM_address = blockno * 8 ;
    1d1a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d1c:	88 2f       	mov	r24, r24
    1d1e:	90 e0       	ldi	r25, 0x00	; 0
    1d20:	88 0f       	add	r24, r24
    1d22:	99 1f       	adc	r25, r25
    1d24:	88 0f       	add	r24, r24
    1d26:	99 1f       	adc	r25, r25
    1d28:	88 0f       	add	r24, r24
    1d2a:	99 1f       	adc	r25, r25
    1d2c:	8a 83       	std	Y+2, r24	; 0x02
		LCD_SEND_COMMAND(CGRAM_address + SETCGRAMADDRESS);
    1d2e:	8a 81       	ldd	r24, Y+2	; 0x02
    1d30:	80 5c       	subi	r24, 0xC0	; 192
    1d32:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <LCD_SEND_COMMAND>
		for(u8 i = 0 ; i<8 ; i++){
    1d36:	19 82       	std	Y+1, r1	; 0x01
    1d38:	0e c0       	rjmp	.+28     	; 0x1d56 <LCD_CUSTUM_CHAR+0x62>
			LCD_SEND_DATA(arr[i]);
    1d3a:	89 81       	ldd	r24, Y+1	; 0x01
    1d3c:	28 2f       	mov	r18, r24
    1d3e:	30 e0       	ldi	r19, 0x00	; 0
    1d40:	8b 81       	ldd	r24, Y+3	; 0x03
    1d42:	9c 81       	ldd	r25, Y+4	; 0x04
    1d44:	fc 01       	movw	r30, r24
    1d46:	e2 0f       	add	r30, r18
    1d48:	f3 1f       	adc	r31, r19
    1d4a:	80 81       	ld	r24, Z
    1d4c:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <LCD_SEND_DATA>
void LCD_CUSTUM_CHAR(u8* arr , u8 blockno , u8 xpos , u8 ypos){
	if(blockno < 8){
		u8 CGRAM_address =0;
		CGRAM_address = blockno * 8 ;
		LCD_SEND_COMMAND(CGRAM_address + SETCGRAMADDRESS);
		for(u8 i = 0 ; i<8 ; i++){
    1d50:	89 81       	ldd	r24, Y+1	; 0x01
    1d52:	8f 5f       	subi	r24, 0xFF	; 255
    1d54:	89 83       	std	Y+1, r24	; 0x01
    1d56:	89 81       	ldd	r24, Y+1	; 0x01
    1d58:	88 30       	cpi	r24, 0x08	; 8
    1d5a:	78 f3       	brcs	.-34     	; 0x1d3a <LCD_CUSTUM_CHAR+0x46>
			LCD_SEND_DATA(arr[i]);
		}
		LCD_GOTO_XY( ypos ,xpos);
    1d5c:	8f 81       	ldd	r24, Y+7	; 0x07
    1d5e:	6e 81       	ldd	r22, Y+6	; 0x06
    1d60:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <LCD_GOTO_XY>
		LCD_SEND_DATA(blockno);
    1d64:	8d 81       	ldd	r24, Y+5	; 0x05
    1d66:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <LCD_SEND_DATA>

	}


}
    1d6a:	27 96       	adiw	r28, 0x07	; 7
    1d6c:	0f b6       	in	r0, 0x3f	; 63
    1d6e:	f8 94       	cli
    1d70:	de bf       	out	0x3e, r29	; 62
    1d72:	0f be       	out	0x3f, r0	; 63
    1d74:	cd bf       	out	0x3d, r28	; 61
    1d76:	cf 91       	pop	r28
    1d78:	df 91       	pop	r29
    1d7a:	08 95       	ret

00001d7c <LCD_DISPLAY_NUMBER>:
void LCD_DISPLAY_NUMBER(u32 num){
    1d7c:	df 93       	push	r29
    1d7e:	cf 93       	push	r28
    1d80:	cd b7       	in	r28, 0x3d	; 61
    1d82:	de b7       	in	r29, 0x3e	; 62
    1d84:	2d 97       	sbiw	r28, 0x0d	; 13
    1d86:	0f b6       	in	r0, 0x3f	; 63
    1d88:	f8 94       	cli
    1d8a:	de bf       	out	0x3e, r29	; 62
    1d8c:	0f be       	out	0x3f, r0	; 63
    1d8e:	cd bf       	out	0x3d, r28	; 61
    1d90:	9d 87       	std	Y+13, r25	; 0x0d
    1d92:	8c 87       	std	Y+12, r24	; 0x0c
    u8 str[10];
    u8 i = 0;
    1d94:	19 82       	std	Y+1, r1	; 0x01

    if (num == 0) {
    1d96:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d98:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d9a:	00 97       	sbiw	r24, 0x00	; 0
    1d9c:	11 f5       	brne	.+68     	; 0x1de2 <LCD_DISPLAY_NUMBER+0x66>
        LCD_SEND_DATA('0');
    1d9e:	80 e3       	ldi	r24, 0x30	; 48
    1da0:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <LCD_SEND_DATA>
    1da4:	34 c0       	rjmp	.+104    	; 0x1e0e <LCD_DISPLAY_NUMBER+0x92>
        return;
    }

    while (num > 0) {
        str[i] = (num % 10) + '0';
    1da6:	89 81       	ldd	r24, Y+1	; 0x01
    1da8:	e8 2f       	mov	r30, r24
    1daa:	f0 e0       	ldi	r31, 0x00	; 0
    1dac:	8c 85       	ldd	r24, Y+12	; 0x0c
    1dae:	9d 85       	ldd	r25, Y+13	; 0x0d
    1db0:	2a e0       	ldi	r18, 0x0A	; 10
    1db2:	30 e0       	ldi	r19, 0x00	; 0
    1db4:	b9 01       	movw	r22, r18
    1db6:	0e 94 0b 1a 	call	0x3416	; 0x3416 <__udivmodhi4>
    1dba:	28 2f       	mov	r18, r24
    1dbc:	20 5d       	subi	r18, 0xD0	; 208
    1dbe:	ce 01       	movw	r24, r28
    1dc0:	02 96       	adiw	r24, 0x02	; 2
    1dc2:	e8 0f       	add	r30, r24
    1dc4:	f9 1f       	adc	r31, r25
    1dc6:	20 83       	st	Z, r18
        num /= 10;
    1dc8:	8c 85       	ldd	r24, Y+12	; 0x0c
    1dca:	9d 85       	ldd	r25, Y+13	; 0x0d
    1dcc:	2a e0       	ldi	r18, 0x0A	; 10
    1dce:	30 e0       	ldi	r19, 0x00	; 0
    1dd0:	b9 01       	movw	r22, r18
    1dd2:	0e 94 0b 1a 	call	0x3416	; 0x3416 <__udivmodhi4>
    1dd6:	cb 01       	movw	r24, r22
    1dd8:	9d 87       	std	Y+13, r25	; 0x0d
    1dda:	8c 87       	std	Y+12, r24	; 0x0c
        i++;
    1ddc:	89 81       	ldd	r24, Y+1	; 0x01
    1dde:	8f 5f       	subi	r24, 0xFF	; 255
    1de0:	89 83       	std	Y+1, r24	; 0x01
    if (num == 0) {
        LCD_SEND_DATA('0');
        return;
    }

    while (num > 0) {
    1de2:	8c 85       	ldd	r24, Y+12	; 0x0c
    1de4:	9d 85       	ldd	r25, Y+13	; 0x0d
    1de6:	00 97       	sbiw	r24, 0x00	; 0
    1de8:	f1 f6       	brne	.-68     	; 0x1da6 <LCD_DISPLAY_NUMBER+0x2a>
    1dea:	0e c0       	rjmp	.+28     	; 0x1e08 <LCD_DISPLAY_NUMBER+0x8c>
        num /= 10;
        i++;
    }

    while (i > 0) {
        i--;
    1dec:	89 81       	ldd	r24, Y+1	; 0x01
    1dee:	81 50       	subi	r24, 0x01	; 1
    1df0:	89 83       	std	Y+1, r24	; 0x01
        LCD_SEND_DATA(str[i]);
    1df2:	89 81       	ldd	r24, Y+1	; 0x01
    1df4:	28 2f       	mov	r18, r24
    1df6:	30 e0       	ldi	r19, 0x00	; 0
    1df8:	ce 01       	movw	r24, r28
    1dfa:	02 96       	adiw	r24, 0x02	; 2
    1dfc:	fc 01       	movw	r30, r24
    1dfe:	e2 0f       	add	r30, r18
    1e00:	f3 1f       	adc	r31, r19
    1e02:	80 81       	ld	r24, Z
    1e04:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <LCD_SEND_DATA>
        str[i] = (num % 10) + '0';
        num /= 10;
        i++;
    }

    while (i > 0) {
    1e08:	89 81       	ldd	r24, Y+1	; 0x01
    1e0a:	88 23       	and	r24, r24
    1e0c:	79 f7       	brne	.-34     	; 0x1dec <LCD_DISPLAY_NUMBER+0x70>
        i--;
        LCD_SEND_DATA(str[i]);
    }
}
    1e0e:	2d 96       	adiw	r28, 0x0d	; 13
    1e10:	0f b6       	in	r0, 0x3f	; 63
    1e12:	f8 94       	cli
    1e14:	de bf       	out	0x3e, r29	; 62
    1e16:	0f be       	out	0x3f, r0	; 63
    1e18:	cd bf       	out	0x3d, r28	; 61
    1e1a:	cf 91       	pop	r28
    1e1c:	df 91       	pop	r29
    1e1e:	08 95       	ret

00001e20 <main>:
#include "../HAL/LCD/HEADER/LCD_PRIVATE.h"
#include "../HAL/LCD/HEADER/LCD_CONFIG.h"

#include <util/delay.h>

void main(){
    1e20:	0f 93       	push	r16
    1e22:	1f 93       	push	r17
    1e24:	df 93       	push	r29
    1e26:	cf 93       	push	r28
    1e28:	cd b7       	in	r28, 0x3d	; 61
    1e2a:	de b7       	in	r29, 0x3e	; 62
    1e2c:	c3 53       	subi	r28, 0x33	; 51
    1e2e:	d1 40       	sbci	r29, 0x01	; 1
    1e30:	0f b6       	in	r0, 0x3f	; 63
    1e32:	f8 94       	cli
    1e34:	de bf       	out	0x3e, r29	; 62
    1e36:	0f be       	out	0x3f, r0	; 63
    1e38:	cd bf       	out	0x3d, r28	; 61

	LCD_INIT();
    1e3a:	0e 94 8c 09 	call	0x1318	; 0x1318 <LCD_INIT>
		0b0010001,
		0b0011111,
		0,
		0b0001010,
		0
	};
    1e3e:	ce 01       	movw	r24, r28
    1e40:	8d 57       	subi	r24, 0x7D	; 125
    1e42:	9f 4f       	sbci	r25, 0xFF	; 255
    1e44:	cd 50       	subi	r28, 0x0D	; 13
    1e46:	df 4f       	sbci	r29, 0xFF	; 255
    1e48:	99 83       	std	Y+1, r25	; 0x01
    1e4a:	88 83       	st	Y, r24
    1e4c:	c3 5f       	subi	r28, 0xF3	; 243
    1e4e:	d0 40       	sbci	r29, 0x00	; 0
    1e50:	86 ef       	ldi	r24, 0xF6	; 246
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	cb 50       	subi	r28, 0x0B	; 11
    1e56:	df 4f       	sbci	r29, 0xFF	; 255
    1e58:	99 83       	std	Y+1, r25	; 0x01
    1e5a:	88 83       	st	Y, r24
    1e5c:	c5 5f       	subi	r28, 0xF5	; 245
    1e5e:	d0 40       	sbci	r29, 0x00	; 0
    1e60:	98 e0       	ldi	r25, 0x08	; 8
    1e62:	c9 50       	subi	r28, 0x09	; 9
    1e64:	df 4f       	sbci	r29, 0xFF	; 255
    1e66:	98 83       	st	Y, r25
    1e68:	c7 5f       	subi	r28, 0xF7	; 247
    1e6a:	d0 40       	sbci	r29, 0x00	; 0
    1e6c:	cb 50       	subi	r28, 0x0B	; 11
    1e6e:	df 4f       	sbci	r29, 0xFF	; 255
    1e70:	a8 81       	ld	r26, Y
    1e72:	b9 81       	ldd	r27, Y+1	; 0x01
    1e74:	c5 5f       	subi	r28, 0xF5	; 245
    1e76:	d0 40       	sbci	r29, 0x00	; 0
    1e78:	0c 90       	ld	r0, X
    1e7a:	cb 50       	subi	r28, 0x0B	; 11
    1e7c:	df 4f       	sbci	r29, 0xFF	; 255
    1e7e:	e8 81       	ld	r30, Y
    1e80:	f9 81       	ldd	r31, Y+1	; 0x01
    1e82:	c5 5f       	subi	r28, 0xF5	; 245
    1e84:	d0 40       	sbci	r29, 0x00	; 0
    1e86:	31 96       	adiw	r30, 0x01	; 1
    1e88:	cb 50       	subi	r28, 0x0B	; 11
    1e8a:	df 4f       	sbci	r29, 0xFF	; 255
    1e8c:	f9 83       	std	Y+1, r31	; 0x01
    1e8e:	e8 83       	st	Y, r30
    1e90:	c5 5f       	subi	r28, 0xF5	; 245
    1e92:	d0 40       	sbci	r29, 0x00	; 0
    1e94:	cd 50       	subi	r28, 0x0D	; 13
    1e96:	df 4f       	sbci	r29, 0xFF	; 255
    1e98:	a8 81       	ld	r26, Y
    1e9a:	b9 81       	ldd	r27, Y+1	; 0x01
    1e9c:	c3 5f       	subi	r28, 0xF3	; 243
    1e9e:	d0 40       	sbci	r29, 0x00	; 0
    1ea0:	0c 92       	st	X, r0
    1ea2:	cd 50       	subi	r28, 0x0D	; 13
    1ea4:	df 4f       	sbci	r29, 0xFF	; 255
    1ea6:	e8 81       	ld	r30, Y
    1ea8:	f9 81       	ldd	r31, Y+1	; 0x01
    1eaa:	c3 5f       	subi	r28, 0xF3	; 243
    1eac:	d0 40       	sbci	r29, 0x00	; 0
    1eae:	31 96       	adiw	r30, 0x01	; 1
    1eb0:	cd 50       	subi	r28, 0x0D	; 13
    1eb2:	df 4f       	sbci	r29, 0xFF	; 255
    1eb4:	f9 83       	std	Y+1, r31	; 0x01
    1eb6:	e8 83       	st	Y, r30
    1eb8:	c3 5f       	subi	r28, 0xF3	; 243
    1eba:	d0 40       	sbci	r29, 0x00	; 0
    1ebc:	c9 50       	subi	r28, 0x09	; 9
    1ebe:	df 4f       	sbci	r29, 0xFF	; 255
    1ec0:	f8 81       	ld	r31, Y
    1ec2:	c7 5f       	subi	r28, 0xF7	; 247
    1ec4:	d0 40       	sbci	r29, 0x00	; 0
    1ec6:	f1 50       	subi	r31, 0x01	; 1
    1ec8:	c9 50       	subi	r28, 0x09	; 9
    1eca:	df 4f       	sbci	r29, 0xFF	; 255
    1ecc:	f8 83       	st	Y, r31
    1ece:	c7 5f       	subi	r28, 0xF7	; 247
    1ed0:	d0 40       	sbci	r29, 0x00	; 0
    1ed2:	c9 50       	subi	r28, 0x09	; 9
    1ed4:	df 4f       	sbci	r29, 0xFF	; 255
    1ed6:	88 81       	ld	r24, Y
    1ed8:	c7 5f       	subi	r28, 0xF7	; 247
    1eda:	d0 40       	sbci	r29, 0x00	; 0
    1edc:	88 23       	and	r24, r24
    1ede:	31 f6       	brne	.-116    	; 0x1e6c <main+0x4c>
		0b0010101,
		0b11111111,
		0,
		0,
		0
	};
    1ee0:	ce 01       	movw	r24, r28
    1ee2:	85 57       	subi	r24, 0x75	; 117
    1ee4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee6:	c8 50       	subi	r28, 0x08	; 8
    1ee8:	df 4f       	sbci	r29, 0xFF	; 255
    1eea:	99 83       	std	Y+1, r25	; 0x01
    1eec:	88 83       	st	Y, r24
    1eee:	c8 5f       	subi	r28, 0xF8	; 248
    1ef0:	d0 40       	sbci	r29, 0x00	; 0
    1ef2:	ae ee       	ldi	r26, 0xEE	; 238
    1ef4:	b0 e0       	ldi	r27, 0x00	; 0
    1ef6:	c6 50       	subi	r28, 0x06	; 6
    1ef8:	df 4f       	sbci	r29, 0xFF	; 255
    1efa:	b9 83       	std	Y+1, r27	; 0x01
    1efc:	a8 83       	st	Y, r26
    1efe:	ca 5f       	subi	r28, 0xFA	; 250
    1f00:	d0 40       	sbci	r29, 0x00	; 0
    1f02:	b8 e0       	ldi	r27, 0x08	; 8
    1f04:	c4 50       	subi	r28, 0x04	; 4
    1f06:	df 4f       	sbci	r29, 0xFF	; 255
    1f08:	b8 83       	st	Y, r27
    1f0a:	cc 5f       	subi	r28, 0xFC	; 252
    1f0c:	d0 40       	sbci	r29, 0x00	; 0
    1f0e:	c6 50       	subi	r28, 0x06	; 6
    1f10:	df 4f       	sbci	r29, 0xFF	; 255
    1f12:	e8 81       	ld	r30, Y
    1f14:	f9 81       	ldd	r31, Y+1	; 0x01
    1f16:	ca 5f       	subi	r28, 0xFA	; 250
    1f18:	d0 40       	sbci	r29, 0x00	; 0
    1f1a:	00 80       	ld	r0, Z
    1f1c:	c6 50       	subi	r28, 0x06	; 6
    1f1e:	df 4f       	sbci	r29, 0xFF	; 255
    1f20:	88 81       	ld	r24, Y
    1f22:	99 81       	ldd	r25, Y+1	; 0x01
    1f24:	ca 5f       	subi	r28, 0xFA	; 250
    1f26:	d0 40       	sbci	r29, 0x00	; 0
    1f28:	01 96       	adiw	r24, 0x01	; 1
    1f2a:	c6 50       	subi	r28, 0x06	; 6
    1f2c:	df 4f       	sbci	r29, 0xFF	; 255
    1f2e:	99 83       	std	Y+1, r25	; 0x01
    1f30:	88 83       	st	Y, r24
    1f32:	ca 5f       	subi	r28, 0xFA	; 250
    1f34:	d0 40       	sbci	r29, 0x00	; 0
    1f36:	c8 50       	subi	r28, 0x08	; 8
    1f38:	df 4f       	sbci	r29, 0xFF	; 255
    1f3a:	a8 81       	ld	r26, Y
    1f3c:	b9 81       	ldd	r27, Y+1	; 0x01
    1f3e:	c8 5f       	subi	r28, 0xF8	; 248
    1f40:	d0 40       	sbci	r29, 0x00	; 0
    1f42:	0c 92       	st	X, r0
    1f44:	c8 50       	subi	r28, 0x08	; 8
    1f46:	df 4f       	sbci	r29, 0xFF	; 255
    1f48:	e8 81       	ld	r30, Y
    1f4a:	f9 81       	ldd	r31, Y+1	; 0x01
    1f4c:	c8 5f       	subi	r28, 0xF8	; 248
    1f4e:	d0 40       	sbci	r29, 0x00	; 0
    1f50:	31 96       	adiw	r30, 0x01	; 1
    1f52:	c8 50       	subi	r28, 0x08	; 8
    1f54:	df 4f       	sbci	r29, 0xFF	; 255
    1f56:	f9 83       	std	Y+1, r31	; 0x01
    1f58:	e8 83       	st	Y, r30
    1f5a:	c8 5f       	subi	r28, 0xF8	; 248
    1f5c:	d0 40       	sbci	r29, 0x00	; 0
    1f5e:	c4 50       	subi	r28, 0x04	; 4
    1f60:	df 4f       	sbci	r29, 0xFF	; 255
    1f62:	f8 81       	ld	r31, Y
    1f64:	cc 5f       	subi	r28, 0xFC	; 252
    1f66:	d0 40       	sbci	r29, 0x00	; 0
    1f68:	f1 50       	subi	r31, 0x01	; 1
    1f6a:	c4 50       	subi	r28, 0x04	; 4
    1f6c:	df 4f       	sbci	r29, 0xFF	; 255
    1f6e:	f8 83       	st	Y, r31
    1f70:	cc 5f       	subi	r28, 0xFC	; 252
    1f72:	d0 40       	sbci	r29, 0x00	; 0
    1f74:	c4 50       	subi	r28, 0x04	; 4
    1f76:	df 4f       	sbci	r29, 0xFF	; 255
    1f78:	88 81       	ld	r24, Y
    1f7a:	cc 5f       	subi	r28, 0xFC	; 252
    1f7c:	d0 40       	sbci	r29, 0x00	; 0
    1f7e:	88 23       	and	r24, r24
    1f80:	31 f6       	brne	.-116    	; 0x1f0e <main+0xee>
		0,
		0b1111111,
		0,
		0,
		0
	};
    1f82:	ce 01       	movw	r24, r28
    1f84:	8d 56       	subi	r24, 0x6D	; 109
    1f86:	9f 4f       	sbci	r25, 0xFF	; 255
    1f88:	28 e0       	ldi	r18, 0x08	; 8
    1f8a:	fc 01       	movw	r30, r24
    1f8c:	df 01       	movw	r26, r30
    1f8e:	82 2f       	mov	r24, r18
    1f90:	1d 92       	st	X+, r1
    1f92:	8a 95       	dec	r24
    1f94:	e9 f7       	brne	.-6      	; 0x1f90 <main+0x170>
    1f96:	fe 01       	movw	r30, r28
    1f98:	ed 56       	subi	r30, 0x6D	; 109
    1f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9c:	8f e7       	ldi	r24, 0x7F	; 127
    1f9e:	84 83       	std	Z+4, r24	; 0x04
		0,
		0b11111,
		0b10001,
		0b11111,
		0
	};
    1fa0:	ce 01       	movw	r24, r28
    1fa2:	85 56       	subi	r24, 0x65	; 101
    1fa4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fa6:	c3 50       	subi	r28, 0x03	; 3
    1fa8:	df 4f       	sbci	r29, 0xFF	; 255
    1faa:	99 83       	std	Y+1, r25	; 0x01
    1fac:	88 83       	st	Y, r24
    1fae:	cd 5f       	subi	r28, 0xFD	; 253
    1fb0:	d0 40       	sbci	r29, 0x00	; 0
    1fb2:	a6 ee       	ldi	r26, 0xE6	; 230
    1fb4:	b0 e0       	ldi	r27, 0x00	; 0
    1fb6:	c1 50       	subi	r28, 0x01	; 1
    1fb8:	df 4f       	sbci	r29, 0xFF	; 255
    1fba:	b9 83       	std	Y+1, r27	; 0x01
    1fbc:	a8 83       	st	Y, r26
    1fbe:	cf 5f       	subi	r28, 0xFF	; 255
    1fc0:	d0 40       	sbci	r29, 0x00	; 0
    1fc2:	b8 e0       	ldi	r27, 0x08	; 8
    1fc4:	cf 5f       	subi	r28, 0xFF	; 255
    1fc6:	de 4f       	sbci	r29, 0xFE	; 254
    1fc8:	b8 83       	st	Y, r27
    1fca:	c1 50       	subi	r28, 0x01	; 1
    1fcc:	d1 40       	sbci	r29, 0x01	; 1
    1fce:	c1 50       	subi	r28, 0x01	; 1
    1fd0:	df 4f       	sbci	r29, 0xFF	; 255
    1fd2:	e8 81       	ld	r30, Y
    1fd4:	f9 81       	ldd	r31, Y+1	; 0x01
    1fd6:	cf 5f       	subi	r28, 0xFF	; 255
    1fd8:	d0 40       	sbci	r29, 0x00	; 0
    1fda:	00 80       	ld	r0, Z
    1fdc:	c1 50       	subi	r28, 0x01	; 1
    1fde:	df 4f       	sbci	r29, 0xFF	; 255
    1fe0:	88 81       	ld	r24, Y
    1fe2:	99 81       	ldd	r25, Y+1	; 0x01
    1fe4:	cf 5f       	subi	r28, 0xFF	; 255
    1fe6:	d0 40       	sbci	r29, 0x00	; 0
    1fe8:	01 96       	adiw	r24, 0x01	; 1
    1fea:	c1 50       	subi	r28, 0x01	; 1
    1fec:	df 4f       	sbci	r29, 0xFF	; 255
    1fee:	99 83       	std	Y+1, r25	; 0x01
    1ff0:	88 83       	st	Y, r24
    1ff2:	cf 5f       	subi	r28, 0xFF	; 255
    1ff4:	d0 40       	sbci	r29, 0x00	; 0
    1ff6:	c3 50       	subi	r28, 0x03	; 3
    1ff8:	df 4f       	sbci	r29, 0xFF	; 255
    1ffa:	a8 81       	ld	r26, Y
    1ffc:	b9 81       	ldd	r27, Y+1	; 0x01
    1ffe:	cd 5f       	subi	r28, 0xFD	; 253
    2000:	d0 40       	sbci	r29, 0x00	; 0
    2002:	0c 92       	st	X, r0
    2004:	c3 50       	subi	r28, 0x03	; 3
    2006:	df 4f       	sbci	r29, 0xFF	; 255
    2008:	e8 81       	ld	r30, Y
    200a:	f9 81       	ldd	r31, Y+1	; 0x01
    200c:	cd 5f       	subi	r28, 0xFD	; 253
    200e:	d0 40       	sbci	r29, 0x00	; 0
    2010:	31 96       	adiw	r30, 0x01	; 1
    2012:	c3 50       	subi	r28, 0x03	; 3
    2014:	df 4f       	sbci	r29, 0xFF	; 255
    2016:	f9 83       	std	Y+1, r31	; 0x01
    2018:	e8 83       	st	Y, r30
    201a:	cd 5f       	subi	r28, 0xFD	; 253
    201c:	d0 40       	sbci	r29, 0x00	; 0
    201e:	cf 5f       	subi	r28, 0xFF	; 255
    2020:	de 4f       	sbci	r29, 0xFE	; 254
    2022:	f8 81       	ld	r31, Y
    2024:	c1 50       	subi	r28, 0x01	; 1
    2026:	d1 40       	sbci	r29, 0x01	; 1
    2028:	f1 50       	subi	r31, 0x01	; 1
    202a:	cf 5f       	subi	r28, 0xFF	; 255
    202c:	de 4f       	sbci	r29, 0xFE	; 254
    202e:	f8 83       	st	Y, r31
    2030:	c1 50       	subi	r28, 0x01	; 1
    2032:	d1 40       	sbci	r29, 0x01	; 1
    2034:	cf 5f       	subi	r28, 0xFF	; 255
    2036:	de 4f       	sbci	r29, 0xFE	; 254
    2038:	88 81       	ld	r24, Y
    203a:	c1 50       	subi	r28, 0x01	; 1
    203c:	d1 40       	sbci	r29, 0x01	; 1
    203e:	88 23       	and	r24, r24
    2040:	31 f6       	brne	.-116    	; 0x1fce <main+0x1ae>
		0b0000001,
		0b1111111,
		0,
		0b0001010,
		0
		};
    2042:	ce 01       	movw	r24, r28
    2044:	8d 55       	subi	r24, 0x5D	; 93
    2046:	9f 4f       	sbci	r25, 0xFF	; 255
    2048:	ce 5f       	subi	r28, 0xFE	; 254
    204a:	de 4f       	sbci	r29, 0xFE	; 254
    204c:	99 83       	std	Y+1, r25	; 0x01
    204e:	88 83       	st	Y, r24
    2050:	c2 50       	subi	r28, 0x02	; 2
    2052:	d1 40       	sbci	r29, 0x01	; 1
    2054:	ae ed       	ldi	r26, 0xDE	; 222
    2056:	b0 e0       	ldi	r27, 0x00	; 0
    2058:	cc 5f       	subi	r28, 0xFC	; 252
    205a:	de 4f       	sbci	r29, 0xFE	; 254
    205c:	b9 83       	std	Y+1, r27	; 0x01
    205e:	a8 83       	st	Y, r26
    2060:	c4 50       	subi	r28, 0x04	; 4
    2062:	d1 40       	sbci	r29, 0x01	; 1
    2064:	b8 e0       	ldi	r27, 0x08	; 8
    2066:	ca 5f       	subi	r28, 0xFA	; 250
    2068:	de 4f       	sbci	r29, 0xFE	; 254
    206a:	b8 83       	st	Y, r27
    206c:	c6 50       	subi	r28, 0x06	; 6
    206e:	d1 40       	sbci	r29, 0x01	; 1
    2070:	cc 5f       	subi	r28, 0xFC	; 252
    2072:	de 4f       	sbci	r29, 0xFE	; 254
    2074:	e8 81       	ld	r30, Y
    2076:	f9 81       	ldd	r31, Y+1	; 0x01
    2078:	c4 50       	subi	r28, 0x04	; 4
    207a:	d1 40       	sbci	r29, 0x01	; 1
    207c:	00 80       	ld	r0, Z
    207e:	cc 5f       	subi	r28, 0xFC	; 252
    2080:	de 4f       	sbci	r29, 0xFE	; 254
    2082:	88 81       	ld	r24, Y
    2084:	99 81       	ldd	r25, Y+1	; 0x01
    2086:	c4 50       	subi	r28, 0x04	; 4
    2088:	d1 40       	sbci	r29, 0x01	; 1
    208a:	01 96       	adiw	r24, 0x01	; 1
    208c:	cc 5f       	subi	r28, 0xFC	; 252
    208e:	de 4f       	sbci	r29, 0xFE	; 254
    2090:	99 83       	std	Y+1, r25	; 0x01
    2092:	88 83       	st	Y, r24
    2094:	c4 50       	subi	r28, 0x04	; 4
    2096:	d1 40       	sbci	r29, 0x01	; 1
    2098:	ce 5f       	subi	r28, 0xFE	; 254
    209a:	de 4f       	sbci	r29, 0xFE	; 254
    209c:	a8 81       	ld	r26, Y
    209e:	b9 81       	ldd	r27, Y+1	; 0x01
    20a0:	c2 50       	subi	r28, 0x02	; 2
    20a2:	d1 40       	sbci	r29, 0x01	; 1
    20a4:	0c 92       	st	X, r0
    20a6:	ce 5f       	subi	r28, 0xFE	; 254
    20a8:	de 4f       	sbci	r29, 0xFE	; 254
    20aa:	e8 81       	ld	r30, Y
    20ac:	f9 81       	ldd	r31, Y+1	; 0x01
    20ae:	c2 50       	subi	r28, 0x02	; 2
    20b0:	d1 40       	sbci	r29, 0x01	; 1
    20b2:	31 96       	adiw	r30, 0x01	; 1
    20b4:	ce 5f       	subi	r28, 0xFE	; 254
    20b6:	de 4f       	sbci	r29, 0xFE	; 254
    20b8:	f9 83       	std	Y+1, r31	; 0x01
    20ba:	e8 83       	st	Y, r30
    20bc:	c2 50       	subi	r28, 0x02	; 2
    20be:	d1 40       	sbci	r29, 0x01	; 1
    20c0:	ca 5f       	subi	r28, 0xFA	; 250
    20c2:	de 4f       	sbci	r29, 0xFE	; 254
    20c4:	f8 81       	ld	r31, Y
    20c6:	c6 50       	subi	r28, 0x06	; 6
    20c8:	d1 40       	sbci	r29, 0x01	; 1
    20ca:	f1 50       	subi	r31, 0x01	; 1
    20cc:	ca 5f       	subi	r28, 0xFA	; 250
    20ce:	de 4f       	sbci	r29, 0xFE	; 254
    20d0:	f8 83       	st	Y, r31
    20d2:	c6 50       	subi	r28, 0x06	; 6
    20d4:	d1 40       	sbci	r29, 0x01	; 1
    20d6:	ca 5f       	subi	r28, 0xFA	; 250
    20d8:	de 4f       	sbci	r29, 0xFE	; 254
    20da:	88 81       	ld	r24, Y
    20dc:	c6 50       	subi	r28, 0x06	; 6
    20de:	d1 40       	sbci	r29, 0x01	; 1
    20e0:	88 23       	and	r24, r24
    20e2:	31 f6       	brne	.-116    	; 0x2070 <main+0x250>
		0b10001,
		0b10001,
		0b10001,
		0b11111,
		0
		};
    20e4:	ce 01       	movw	r24, r28
    20e6:	85 55       	subi	r24, 0x55	; 85
    20e8:	9f 4f       	sbci	r25, 0xFF	; 255
    20ea:	c9 5f       	subi	r28, 0xF9	; 249
    20ec:	de 4f       	sbci	r29, 0xFE	; 254
    20ee:	99 83       	std	Y+1, r25	; 0x01
    20f0:	88 83       	st	Y, r24
    20f2:	c7 50       	subi	r28, 0x07	; 7
    20f4:	d1 40       	sbci	r29, 0x01	; 1
    20f6:	a6 ed       	ldi	r26, 0xD6	; 214
    20f8:	b0 e0       	ldi	r27, 0x00	; 0
    20fa:	c7 5f       	subi	r28, 0xF7	; 247
    20fc:	de 4f       	sbci	r29, 0xFE	; 254
    20fe:	b9 83       	std	Y+1, r27	; 0x01
    2100:	a8 83       	st	Y, r26
    2102:	c9 50       	subi	r28, 0x09	; 9
    2104:	d1 40       	sbci	r29, 0x01	; 1
    2106:	b8 e0       	ldi	r27, 0x08	; 8
    2108:	c5 5f       	subi	r28, 0xF5	; 245
    210a:	de 4f       	sbci	r29, 0xFE	; 254
    210c:	b8 83       	st	Y, r27
    210e:	cb 50       	subi	r28, 0x0B	; 11
    2110:	d1 40       	sbci	r29, 0x01	; 1
    2112:	c7 5f       	subi	r28, 0xF7	; 247
    2114:	de 4f       	sbci	r29, 0xFE	; 254
    2116:	e8 81       	ld	r30, Y
    2118:	f9 81       	ldd	r31, Y+1	; 0x01
    211a:	c9 50       	subi	r28, 0x09	; 9
    211c:	d1 40       	sbci	r29, 0x01	; 1
    211e:	00 80       	ld	r0, Z
    2120:	c7 5f       	subi	r28, 0xF7	; 247
    2122:	de 4f       	sbci	r29, 0xFE	; 254
    2124:	88 81       	ld	r24, Y
    2126:	99 81       	ldd	r25, Y+1	; 0x01
    2128:	c9 50       	subi	r28, 0x09	; 9
    212a:	d1 40       	sbci	r29, 0x01	; 1
    212c:	01 96       	adiw	r24, 0x01	; 1
    212e:	c7 5f       	subi	r28, 0xF7	; 247
    2130:	de 4f       	sbci	r29, 0xFE	; 254
    2132:	99 83       	std	Y+1, r25	; 0x01
    2134:	88 83       	st	Y, r24
    2136:	c9 50       	subi	r28, 0x09	; 9
    2138:	d1 40       	sbci	r29, 0x01	; 1
    213a:	c9 5f       	subi	r28, 0xF9	; 249
    213c:	de 4f       	sbci	r29, 0xFE	; 254
    213e:	a8 81       	ld	r26, Y
    2140:	b9 81       	ldd	r27, Y+1	; 0x01
    2142:	c7 50       	subi	r28, 0x07	; 7
    2144:	d1 40       	sbci	r29, 0x01	; 1
    2146:	0c 92       	st	X, r0
    2148:	c9 5f       	subi	r28, 0xF9	; 249
    214a:	de 4f       	sbci	r29, 0xFE	; 254
    214c:	e8 81       	ld	r30, Y
    214e:	f9 81       	ldd	r31, Y+1	; 0x01
    2150:	c7 50       	subi	r28, 0x07	; 7
    2152:	d1 40       	sbci	r29, 0x01	; 1
    2154:	31 96       	adiw	r30, 0x01	; 1
    2156:	c9 5f       	subi	r28, 0xF9	; 249
    2158:	de 4f       	sbci	r29, 0xFE	; 254
    215a:	f9 83       	std	Y+1, r31	; 0x01
    215c:	e8 83       	st	Y, r30
    215e:	c7 50       	subi	r28, 0x07	; 7
    2160:	d1 40       	sbci	r29, 0x01	; 1
    2162:	c5 5f       	subi	r28, 0xF5	; 245
    2164:	de 4f       	sbci	r29, 0xFE	; 254
    2166:	f8 81       	ld	r31, Y
    2168:	cb 50       	subi	r28, 0x0B	; 11
    216a:	d1 40       	sbci	r29, 0x01	; 1
    216c:	f1 50       	subi	r31, 0x01	; 1
    216e:	c5 5f       	subi	r28, 0xF5	; 245
    2170:	de 4f       	sbci	r29, 0xFE	; 254
    2172:	f8 83       	st	Y, r31
    2174:	cb 50       	subi	r28, 0x0B	; 11
    2176:	d1 40       	sbci	r29, 0x01	; 1
    2178:	c5 5f       	subi	r28, 0xF5	; 245
    217a:	de 4f       	sbci	r29, 0xFE	; 254
    217c:	88 81       	ld	r24, Y
    217e:	cb 50       	subi	r28, 0x0B	; 11
    2180:	d1 40       	sbci	r29, 0x01	; 1
    2182:	88 23       	and	r24, r24
    2184:	31 f6       	brne	.-116    	; 0x2112 <main+0x2f2>

	u8 i = 0, line = LINE1;
    2186:	fe 01       	movw	r30, r28
    2188:	ee 57       	subi	r30, 0x7E	; 126
    218a:	ff 4f       	sbci	r31, 0xFF	; 255
    218c:	10 82       	st	Z, r1
    218e:	fe 01       	movw	r30, r28
    2190:	ef 57       	subi	r30, 0x7F	; 127
    2192:	ff 4f       	sbci	r31, 0xFF	; 255
    2194:	10 82       	st	Z, r1
    2196:	41 c1       	rjmp	.+642    	; 0x241a <main+0x5fa>
	for( i ; i<11 ; i=i+2 ){

	LCD_CLEAR();
    2198:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <LCD_CLEAR>
	LCD_CUSTUM_CHAR(ya,1,15-i,line);
    219c:	fe 01       	movw	r30, r28
    219e:	ee 57       	subi	r30, 0x7E	; 126
    21a0:	ff 4f       	sbci	r31, 0xFF	; 255
    21a2:	9f e0       	ldi	r25, 0x0F	; 15
    21a4:	80 81       	ld	r24, Z
    21a6:	29 2f       	mov	r18, r25
    21a8:	28 1b       	sub	r18, r24
    21aa:	ce 01       	movw	r24, r28
    21ac:	8d 57       	subi	r24, 0x7D	; 125
    21ae:	9f 4f       	sbci	r25, 0xFF	; 255
    21b0:	fe 01       	movw	r30, r28
    21b2:	ef 57       	subi	r30, 0x7F	; 127
    21b4:	ff 4f       	sbci	r31, 0xFF	; 255
    21b6:	61 e0       	ldi	r22, 0x01	; 1
    21b8:	42 2f       	mov	r20, r18
    21ba:	20 81       	ld	r18, Z
    21bc:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
	LCD_CUSTUM_CHAR(s,2,14-i,line);
    21c0:	fe 01       	movw	r30, r28
    21c2:	ee 57       	subi	r30, 0x7E	; 126
    21c4:	ff 4f       	sbci	r31, 0xFF	; 255
    21c6:	9e e0       	ldi	r25, 0x0E	; 14
    21c8:	80 81       	ld	r24, Z
    21ca:	29 2f       	mov	r18, r25
    21cc:	28 1b       	sub	r18, r24
    21ce:	ce 01       	movw	r24, r28
    21d0:	85 57       	subi	r24, 0x75	; 117
    21d2:	9f 4f       	sbci	r25, 0xFF	; 255
    21d4:	fe 01       	movw	r30, r28
    21d6:	ef 57       	subi	r30, 0x7F	; 127
    21d8:	ff 4f       	sbci	r31, 0xFF	; 255
    21da:	62 e0       	ldi	r22, 0x02	; 2
    21dc:	42 2f       	mov	r20, r18
    21de:	20 81       	ld	r18, Z
    21e0:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
	LCD_CUSTUM_CHAR(da,3,13-i,line);
    21e4:	fe 01       	movw	r30, r28
    21e6:	ee 57       	subi	r30, 0x7E	; 126
    21e8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ea:	9d e0       	ldi	r25, 0x0D	; 13
    21ec:	80 81       	ld	r24, Z
    21ee:	29 2f       	mov	r18, r25
    21f0:	28 1b       	sub	r18, r24
    21f2:	ce 01       	movw	r24, r28
    21f4:	8d 56       	subi	r24, 0x6D	; 109
    21f6:	9f 4f       	sbci	r25, 0xFF	; 255
    21f8:	fe 01       	movw	r30, r28
    21fa:	ef 57       	subi	r30, 0x7F	; 127
    21fc:	ff 4f       	sbci	r31, 0xFF	; 255
    21fe:	63 e0       	ldi	r22, 0x03	; 3
    2200:	42 2f       	mov	r20, r18
    2202:	20 81       	ld	r18, Z
    2204:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
	LCD_CUSTUM_CHAR(m,4,12-i,line);
    2208:	fe 01       	movw	r30, r28
    220a:	ee 57       	subi	r30, 0x7E	; 126
    220c:	ff 4f       	sbci	r31, 0xFF	; 255
    220e:	9c e0       	ldi	r25, 0x0C	; 12
    2210:	80 81       	ld	r24, Z
    2212:	29 2f       	mov	r18, r25
    2214:	28 1b       	sub	r18, r24
    2216:	ce 01       	movw	r24, r28
    2218:	85 56       	subi	r24, 0x65	; 101
    221a:	9f 4f       	sbci	r25, 0xFF	; 255
    221c:	fe 01       	movw	r30, r28
    221e:	ef 57       	subi	r30, 0x7F	; 127
    2220:	ff 4f       	sbci	r31, 0xFF	; 255
    2222:	64 e0       	ldi	r22, 0x04	; 4
    2224:	42 2f       	mov	r20, r18
    2226:	20 81       	ld	r18, Z
    2228:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
	LCD_CUSTUM_CHAR(y,5,11-i,line);
    222c:	fe 01       	movw	r30, r28
    222e:	ee 57       	subi	r30, 0x7E	; 126
    2230:	ff 4f       	sbci	r31, 0xFF	; 255
    2232:	9b e0       	ldi	r25, 0x0B	; 11
    2234:	80 81       	ld	r24, Z
    2236:	29 2f       	mov	r18, r25
    2238:	28 1b       	sub	r18, r24
    223a:	ce 01       	movw	r24, r28
    223c:	8d 55       	subi	r24, 0x5D	; 93
    223e:	9f 4f       	sbci	r25, 0xFF	; 255
    2240:	fe 01       	movw	r30, r28
    2242:	ef 57       	subi	r30, 0x7F	; 127
    2244:	ff 4f       	sbci	r31, 0xFF	; 255
    2246:	65 e0       	ldi	r22, 0x05	; 5
    2248:	42 2f       	mov	r20, r18
    224a:	20 81       	ld	r18, Z
    224c:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
	LCD_CUSTUM_CHAR(n,6,10-i,line);
    2250:	fe 01       	movw	r30, r28
    2252:	ee 57       	subi	r30, 0x7E	; 126
    2254:	ff 4f       	sbci	r31, 0xFF	; 255
    2256:	9a e0       	ldi	r25, 0x0A	; 10
    2258:	80 81       	ld	r24, Z
    225a:	29 2f       	mov	r18, r25
    225c:	28 1b       	sub	r18, r24
    225e:	ce 01       	movw	r24, r28
    2260:	85 55       	subi	r24, 0x55	; 85
    2262:	9f 4f       	sbci	r25, 0xFF	; 255
    2264:	fe 01       	movw	r30, r28
    2266:	ef 57       	subi	r30, 0x7F	; 127
    2268:	ff 4f       	sbci	r31, 0xFF	; 255
    226a:	66 e0       	ldi	r22, 0x06	; 6
    226c:	42 2f       	mov	r20, r18
    226e:	20 81       	ld	r18, Z
    2270:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
    2274:	fe 01       	movw	r30, r28
    2276:	e5 58       	subi	r30, 0x85	; 133
    2278:	ff 4f       	sbci	r31, 0xFF	; 255
    227a:	80 e0       	ldi	r24, 0x00	; 0
    227c:	90 e0       	ldi	r25, 0x00	; 0
    227e:	aa ef       	ldi	r26, 0xFA	; 250
    2280:	b3 e4       	ldi	r27, 0x43	; 67
    2282:	80 83       	st	Z, r24
    2284:	91 83       	std	Z+1, r25	; 0x01
    2286:	a2 83       	std	Z+2, r26	; 0x02
    2288:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    228a:	8e 01       	movw	r16, r28
    228c:	09 58       	subi	r16, 0x89	; 137
    228e:	1f 4f       	sbci	r17, 0xFF	; 255
    2290:	fe 01       	movw	r30, r28
    2292:	e5 58       	subi	r30, 0x85	; 133
    2294:	ff 4f       	sbci	r31, 0xFF	; 255
    2296:	60 81       	ld	r22, Z
    2298:	71 81       	ldd	r23, Z+1	; 0x01
    229a:	82 81       	ldd	r24, Z+2	; 0x02
    229c:	93 81       	ldd	r25, Z+3	; 0x03
    229e:	20 e0       	ldi	r18, 0x00	; 0
    22a0:	30 e0       	ldi	r19, 0x00	; 0
    22a2:	4a ef       	ldi	r20, 0xFA	; 250
    22a4:	54 e4       	ldi	r21, 0x44	; 68
    22a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22aa:	dc 01       	movw	r26, r24
    22ac:	cb 01       	movw	r24, r22
    22ae:	f8 01       	movw	r30, r16
    22b0:	80 83       	st	Z, r24
    22b2:	91 83       	std	Z+1, r25	; 0x01
    22b4:	a2 83       	std	Z+2, r26	; 0x02
    22b6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22b8:	fe 01       	movw	r30, r28
    22ba:	e9 58       	subi	r30, 0x89	; 137
    22bc:	ff 4f       	sbci	r31, 0xFF	; 255
    22be:	60 81       	ld	r22, Z
    22c0:	71 81       	ldd	r23, Z+1	; 0x01
    22c2:	82 81       	ldd	r24, Z+2	; 0x02
    22c4:	93 81       	ldd	r25, Z+3	; 0x03
    22c6:	20 e0       	ldi	r18, 0x00	; 0
    22c8:	30 e0       	ldi	r19, 0x00	; 0
    22ca:	40 e8       	ldi	r20, 0x80	; 128
    22cc:	5f e3       	ldi	r21, 0x3F	; 63
    22ce:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    22d2:	88 23       	and	r24, r24
    22d4:	44 f4       	brge	.+16     	; 0x22e6 <main+0x4c6>
		__ticks = 1;
    22d6:	fe 01       	movw	r30, r28
    22d8:	eb 58       	subi	r30, 0x8B	; 139
    22da:	ff 4f       	sbci	r31, 0xFF	; 255
    22dc:	81 e0       	ldi	r24, 0x01	; 1
    22de:	90 e0       	ldi	r25, 0x00	; 0
    22e0:	91 83       	std	Z+1, r25	; 0x01
    22e2:	80 83       	st	Z, r24
    22e4:	64 c0       	rjmp	.+200    	; 0x23ae <main+0x58e>
	else if (__tmp > 65535)
    22e6:	fe 01       	movw	r30, r28
    22e8:	e9 58       	subi	r30, 0x89	; 137
    22ea:	ff 4f       	sbci	r31, 0xFF	; 255
    22ec:	60 81       	ld	r22, Z
    22ee:	71 81       	ldd	r23, Z+1	; 0x01
    22f0:	82 81       	ldd	r24, Z+2	; 0x02
    22f2:	93 81       	ldd	r25, Z+3	; 0x03
    22f4:	20 e0       	ldi	r18, 0x00	; 0
    22f6:	3f ef       	ldi	r19, 0xFF	; 255
    22f8:	4f e7       	ldi	r20, 0x7F	; 127
    22fa:	57 e4       	ldi	r21, 0x47	; 71
    22fc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2300:	18 16       	cp	r1, r24
    2302:	0c f0       	brlt	.+2      	; 0x2306 <main+0x4e6>
    2304:	43 c0       	rjmp	.+134    	; 0x238c <main+0x56c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2306:	fe 01       	movw	r30, r28
    2308:	e5 58       	subi	r30, 0x85	; 133
    230a:	ff 4f       	sbci	r31, 0xFF	; 255
    230c:	60 81       	ld	r22, Z
    230e:	71 81       	ldd	r23, Z+1	; 0x01
    2310:	82 81       	ldd	r24, Z+2	; 0x02
    2312:	93 81       	ldd	r25, Z+3	; 0x03
    2314:	20 e0       	ldi	r18, 0x00	; 0
    2316:	30 e0       	ldi	r19, 0x00	; 0
    2318:	40 e2       	ldi	r20, 0x20	; 32
    231a:	51 e4       	ldi	r21, 0x41	; 65
    231c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2320:	dc 01       	movw	r26, r24
    2322:	cb 01       	movw	r24, r22
    2324:	8e 01       	movw	r16, r28
    2326:	0b 58       	subi	r16, 0x8B	; 139
    2328:	1f 4f       	sbci	r17, 0xFF	; 255
    232a:	bc 01       	movw	r22, r24
    232c:	cd 01       	movw	r24, r26
    232e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2332:	dc 01       	movw	r26, r24
    2334:	cb 01       	movw	r24, r22
    2336:	f8 01       	movw	r30, r16
    2338:	91 83       	std	Z+1, r25	; 0x01
    233a:	80 83       	st	Z, r24
    233c:	1f c0       	rjmp	.+62     	; 0x237c <main+0x55c>
    233e:	fe 01       	movw	r30, r28
    2340:	ed 58       	subi	r30, 0x8D	; 141
    2342:	ff 4f       	sbci	r31, 0xFF	; 255
    2344:	88 ec       	ldi	r24, 0xC8	; 200
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	91 83       	std	Z+1, r25	; 0x01
    234a:	80 83       	st	Z, r24
    234c:	fe 01       	movw	r30, r28
    234e:	ed 58       	subi	r30, 0x8D	; 141
    2350:	ff 4f       	sbci	r31, 0xFF	; 255
    2352:	80 81       	ld	r24, Z
    2354:	91 81       	ldd	r25, Z+1	; 0x01
    2356:	01 97       	sbiw	r24, 0x01	; 1
    2358:	f1 f7       	brne	.-4      	; 0x2356 <main+0x536>
    235a:	fe 01       	movw	r30, r28
    235c:	ed 58       	subi	r30, 0x8D	; 141
    235e:	ff 4f       	sbci	r31, 0xFF	; 255
    2360:	91 83       	std	Z+1, r25	; 0x01
    2362:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2364:	de 01       	movw	r26, r28
    2366:	ab 58       	subi	r26, 0x8B	; 139
    2368:	bf 4f       	sbci	r27, 0xFF	; 255
    236a:	fe 01       	movw	r30, r28
    236c:	eb 58       	subi	r30, 0x8B	; 139
    236e:	ff 4f       	sbci	r31, 0xFF	; 255
    2370:	80 81       	ld	r24, Z
    2372:	91 81       	ldd	r25, Z+1	; 0x01
    2374:	01 97       	sbiw	r24, 0x01	; 1
    2376:	11 96       	adiw	r26, 0x01	; 1
    2378:	9c 93       	st	X, r25
    237a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    237c:	fe 01       	movw	r30, r28
    237e:	eb 58       	subi	r30, 0x8B	; 139
    2380:	ff 4f       	sbci	r31, 0xFF	; 255
    2382:	80 81       	ld	r24, Z
    2384:	91 81       	ldd	r25, Z+1	; 0x01
    2386:	00 97       	sbiw	r24, 0x00	; 0
    2388:	d1 f6       	brne	.-76     	; 0x233e <main+0x51e>
    238a:	28 c0       	rjmp	.+80     	; 0x23dc <main+0x5bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    238c:	8e 01       	movw	r16, r28
    238e:	0b 58       	subi	r16, 0x8B	; 139
    2390:	1f 4f       	sbci	r17, 0xFF	; 255
    2392:	fe 01       	movw	r30, r28
    2394:	e9 58       	subi	r30, 0x89	; 137
    2396:	ff 4f       	sbci	r31, 0xFF	; 255
    2398:	60 81       	ld	r22, Z
    239a:	71 81       	ldd	r23, Z+1	; 0x01
    239c:	82 81       	ldd	r24, Z+2	; 0x02
    239e:	93 81       	ldd	r25, Z+3	; 0x03
    23a0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23a4:	dc 01       	movw	r26, r24
    23a6:	cb 01       	movw	r24, r22
    23a8:	f8 01       	movw	r30, r16
    23aa:	91 83       	std	Z+1, r25	; 0x01
    23ac:	80 83       	st	Z, r24
    23ae:	de 01       	movw	r26, r28
    23b0:	af 58       	subi	r26, 0x8F	; 143
    23b2:	bf 4f       	sbci	r27, 0xFF	; 255
    23b4:	fe 01       	movw	r30, r28
    23b6:	eb 58       	subi	r30, 0x8B	; 139
    23b8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ba:	80 81       	ld	r24, Z
    23bc:	91 81       	ldd	r25, Z+1	; 0x01
    23be:	11 96       	adiw	r26, 0x01	; 1
    23c0:	9c 93       	st	X, r25
    23c2:	8e 93       	st	-X, r24
    23c4:	fe 01       	movw	r30, r28
    23c6:	ef 58       	subi	r30, 0x8F	; 143
    23c8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ca:	80 81       	ld	r24, Z
    23cc:	91 81       	ldd	r25, Z+1	; 0x01
    23ce:	01 97       	sbiw	r24, 0x01	; 1
    23d0:	f1 f7       	brne	.-4      	; 0x23ce <main+0x5ae>
    23d2:	fe 01       	movw	r30, r28
    23d4:	ef 58       	subi	r30, 0x8F	; 143
    23d6:	ff 4f       	sbci	r31, 0xFF	; 255
    23d8:	91 83       	std	Z+1, r25	; 0x01
    23da:	80 83       	st	Z, r24
	_delay_ms(500);
	if(line == LINE1){
    23dc:	fe 01       	movw	r30, r28
    23de:	ef 57       	subi	r30, 0x7F	; 127
    23e0:	ff 4f       	sbci	r31, 0xFF	; 255
    23e2:	80 81       	ld	r24, Z
    23e4:	88 23       	and	r24, r24
    23e6:	31 f4       	brne	.+12     	; 0x23f4 <main+0x5d4>
		line = LINE2;
    23e8:	fe 01       	movw	r30, r28
    23ea:	ef 57       	subi	r30, 0x7F	; 127
    23ec:	ff 4f       	sbci	r31, 0xFF	; 255
    23ee:	81 e0       	ldi	r24, 0x01	; 1
    23f0:	80 83       	st	Z, r24
    23f2:	0a c0       	rjmp	.+20     	; 0x2408 <main+0x5e8>
	}else if(line == LINE2){
    23f4:	fe 01       	movw	r30, r28
    23f6:	ef 57       	subi	r30, 0x7F	; 127
    23f8:	ff 4f       	sbci	r31, 0xFF	; 255
    23fa:	80 81       	ld	r24, Z
    23fc:	81 30       	cpi	r24, 0x01	; 1
    23fe:	21 f4       	brne	.+8      	; 0x2408 <main+0x5e8>
		line = LINE1;
    2400:	fe 01       	movw	r30, r28
    2402:	ef 57       	subi	r30, 0x7F	; 127
    2404:	ff 4f       	sbci	r31, 0xFF	; 255
    2406:	10 82       	st	Z, r1
		0b11111,
		0
		};

	u8 i = 0, line = LINE1;
	for( i ; i<11 ; i=i+2 ){
    2408:	de 01       	movw	r26, r28
    240a:	ae 57       	subi	r26, 0x7E	; 126
    240c:	bf 4f       	sbci	r27, 0xFF	; 255
    240e:	fe 01       	movw	r30, r28
    2410:	ee 57       	subi	r30, 0x7E	; 126
    2412:	ff 4f       	sbci	r31, 0xFF	; 255
    2414:	80 81       	ld	r24, Z
    2416:	8e 5f       	subi	r24, 0xFE	; 254
    2418:	8c 93       	st	X, r24
    241a:	fe 01       	movw	r30, r28
    241c:	ee 57       	subi	r30, 0x7E	; 126
    241e:	ff 4f       	sbci	r31, 0xFF	; 255
    2420:	80 81       	ld	r24, Z
    2422:	8b 30       	cpi	r24, 0x0B	; 11
    2424:	08 f4       	brcc	.+2      	; 0x2428 <main+0x608>
    2426:	b8 ce       	rjmp	.-656    	; 0x2198 <main+0x378>
	}else if(line == LINE2){
		line = LINE1;
	}

	}
	LCD_CLEAR();
    2428:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <LCD_CLEAR>
		0b01110,
		0b10101,
		0b10101,
		0

	};
    242c:	ce 01       	movw	r24, r28
    242e:	8d 54       	subi	r24, 0x4D	; 77
    2430:	9f 4f       	sbci	r25, 0xFF	; 255
    2432:	c4 5f       	subi	r28, 0xF4	; 244
    2434:	de 4f       	sbci	r29, 0xFE	; 254
    2436:	99 83       	std	Y+1, r25	; 0x01
    2438:	88 83       	st	Y, r24
    243a:	cc 50       	subi	r28, 0x0C	; 12
    243c:	d1 40       	sbci	r29, 0x01	; 1
    243e:	8e ec       	ldi	r24, 0xCE	; 206
    2440:	90 e0       	ldi	r25, 0x00	; 0
    2442:	c2 5f       	subi	r28, 0xF2	; 242
    2444:	de 4f       	sbci	r29, 0xFE	; 254
    2446:	99 83       	std	Y+1, r25	; 0x01
    2448:	88 83       	st	Y, r24
    244a:	ce 50       	subi	r28, 0x0E	; 14
    244c:	d1 40       	sbci	r29, 0x01	; 1
    244e:	98 e0       	ldi	r25, 0x08	; 8
    2450:	c0 5f       	subi	r28, 0xF0	; 240
    2452:	de 4f       	sbci	r29, 0xFE	; 254
    2454:	98 83       	st	Y, r25
    2456:	c0 51       	subi	r28, 0x10	; 16
    2458:	d1 40       	sbci	r29, 0x01	; 1
    245a:	c2 5f       	subi	r28, 0xF2	; 242
    245c:	de 4f       	sbci	r29, 0xFE	; 254
    245e:	a8 81       	ld	r26, Y
    2460:	b9 81       	ldd	r27, Y+1	; 0x01
    2462:	ce 50       	subi	r28, 0x0E	; 14
    2464:	d1 40       	sbci	r29, 0x01	; 1
    2466:	0c 90       	ld	r0, X
    2468:	c2 5f       	subi	r28, 0xF2	; 242
    246a:	de 4f       	sbci	r29, 0xFE	; 254
    246c:	e8 81       	ld	r30, Y
    246e:	f9 81       	ldd	r31, Y+1	; 0x01
    2470:	ce 50       	subi	r28, 0x0E	; 14
    2472:	d1 40       	sbci	r29, 0x01	; 1
    2474:	31 96       	adiw	r30, 0x01	; 1
    2476:	c2 5f       	subi	r28, 0xF2	; 242
    2478:	de 4f       	sbci	r29, 0xFE	; 254
    247a:	f9 83       	std	Y+1, r31	; 0x01
    247c:	e8 83       	st	Y, r30
    247e:	ce 50       	subi	r28, 0x0E	; 14
    2480:	d1 40       	sbci	r29, 0x01	; 1
    2482:	c4 5f       	subi	r28, 0xF4	; 244
    2484:	de 4f       	sbci	r29, 0xFE	; 254
    2486:	a8 81       	ld	r26, Y
    2488:	b9 81       	ldd	r27, Y+1	; 0x01
    248a:	cc 50       	subi	r28, 0x0C	; 12
    248c:	d1 40       	sbci	r29, 0x01	; 1
    248e:	0c 92       	st	X, r0
    2490:	c4 5f       	subi	r28, 0xF4	; 244
    2492:	de 4f       	sbci	r29, 0xFE	; 254
    2494:	e8 81       	ld	r30, Y
    2496:	f9 81       	ldd	r31, Y+1	; 0x01
    2498:	cc 50       	subi	r28, 0x0C	; 12
    249a:	d1 40       	sbci	r29, 0x01	; 1
    249c:	31 96       	adiw	r30, 0x01	; 1
    249e:	c4 5f       	subi	r28, 0xF4	; 244
    24a0:	de 4f       	sbci	r29, 0xFE	; 254
    24a2:	f9 83       	std	Y+1, r31	; 0x01
    24a4:	e8 83       	st	Y, r30
    24a6:	cc 50       	subi	r28, 0x0C	; 12
    24a8:	d1 40       	sbci	r29, 0x01	; 1
    24aa:	c0 5f       	subi	r28, 0xF0	; 240
    24ac:	de 4f       	sbci	r29, 0xFE	; 254
    24ae:	f8 81       	ld	r31, Y
    24b0:	c0 51       	subi	r28, 0x10	; 16
    24b2:	d1 40       	sbci	r29, 0x01	; 1
    24b4:	f1 50       	subi	r31, 0x01	; 1
    24b6:	c0 5f       	subi	r28, 0xF0	; 240
    24b8:	de 4f       	sbci	r29, 0xFE	; 254
    24ba:	f8 83       	st	Y, r31
    24bc:	c0 51       	subi	r28, 0x10	; 16
    24be:	d1 40       	sbci	r29, 0x01	; 1
    24c0:	c0 5f       	subi	r28, 0xF0	; 240
    24c2:	de 4f       	sbci	r29, 0xFE	; 254
    24c4:	88 81       	ld	r24, Y
    24c6:	c0 51       	subi	r28, 0x10	; 16
    24c8:	d1 40       	sbci	r29, 0x01	; 1
    24ca:	88 23       	and	r24, r24
    24cc:	31 f6       	brne	.-116    	; 0x245a <main+0x63a>
		0b01110,
		0b01110,
		0b01110,
		0

	};
    24ce:	ce 01       	movw	r24, r28
    24d0:	85 54       	subi	r24, 0x45	; 69
    24d2:	9f 4f       	sbci	r25, 0xFF	; 255
    24d4:	cf 5e       	subi	r28, 0xEF	; 239
    24d6:	de 4f       	sbci	r29, 0xFE	; 254
    24d8:	99 83       	std	Y+1, r25	; 0x01
    24da:	88 83       	st	Y, r24
    24dc:	c1 51       	subi	r28, 0x11	; 17
    24de:	d1 40       	sbci	r29, 0x01	; 1
    24e0:	a6 ec       	ldi	r26, 0xC6	; 198
    24e2:	b0 e0       	ldi	r27, 0x00	; 0
    24e4:	cd 5e       	subi	r28, 0xED	; 237
    24e6:	de 4f       	sbci	r29, 0xFE	; 254
    24e8:	b9 83       	std	Y+1, r27	; 0x01
    24ea:	a8 83       	st	Y, r26
    24ec:	c3 51       	subi	r28, 0x13	; 19
    24ee:	d1 40       	sbci	r29, 0x01	; 1
    24f0:	b8 e0       	ldi	r27, 0x08	; 8
    24f2:	cb 5e       	subi	r28, 0xEB	; 235
    24f4:	de 4f       	sbci	r29, 0xFE	; 254
    24f6:	b8 83       	st	Y, r27
    24f8:	c5 51       	subi	r28, 0x15	; 21
    24fa:	d1 40       	sbci	r29, 0x01	; 1
    24fc:	cd 5e       	subi	r28, 0xED	; 237
    24fe:	de 4f       	sbci	r29, 0xFE	; 254
    2500:	e8 81       	ld	r30, Y
    2502:	f9 81       	ldd	r31, Y+1	; 0x01
    2504:	c3 51       	subi	r28, 0x13	; 19
    2506:	d1 40       	sbci	r29, 0x01	; 1
    2508:	00 80       	ld	r0, Z
    250a:	cd 5e       	subi	r28, 0xED	; 237
    250c:	de 4f       	sbci	r29, 0xFE	; 254
    250e:	88 81       	ld	r24, Y
    2510:	99 81       	ldd	r25, Y+1	; 0x01
    2512:	c3 51       	subi	r28, 0x13	; 19
    2514:	d1 40       	sbci	r29, 0x01	; 1
    2516:	01 96       	adiw	r24, 0x01	; 1
    2518:	cd 5e       	subi	r28, 0xED	; 237
    251a:	de 4f       	sbci	r29, 0xFE	; 254
    251c:	99 83       	std	Y+1, r25	; 0x01
    251e:	88 83       	st	Y, r24
    2520:	c3 51       	subi	r28, 0x13	; 19
    2522:	d1 40       	sbci	r29, 0x01	; 1
    2524:	cf 5e       	subi	r28, 0xEF	; 239
    2526:	de 4f       	sbci	r29, 0xFE	; 254
    2528:	a8 81       	ld	r26, Y
    252a:	b9 81       	ldd	r27, Y+1	; 0x01
    252c:	c1 51       	subi	r28, 0x11	; 17
    252e:	d1 40       	sbci	r29, 0x01	; 1
    2530:	0c 92       	st	X, r0
    2532:	cf 5e       	subi	r28, 0xEF	; 239
    2534:	de 4f       	sbci	r29, 0xFE	; 254
    2536:	e8 81       	ld	r30, Y
    2538:	f9 81       	ldd	r31, Y+1	; 0x01
    253a:	c1 51       	subi	r28, 0x11	; 17
    253c:	d1 40       	sbci	r29, 0x01	; 1
    253e:	31 96       	adiw	r30, 0x01	; 1
    2540:	cf 5e       	subi	r28, 0xEF	; 239
    2542:	de 4f       	sbci	r29, 0xFE	; 254
    2544:	f9 83       	std	Y+1, r31	; 0x01
    2546:	e8 83       	st	Y, r30
    2548:	c1 51       	subi	r28, 0x11	; 17
    254a:	d1 40       	sbci	r29, 0x01	; 1
    254c:	cb 5e       	subi	r28, 0xEB	; 235
    254e:	de 4f       	sbci	r29, 0xFE	; 254
    2550:	f8 81       	ld	r31, Y
    2552:	c5 51       	subi	r28, 0x15	; 21
    2554:	d1 40       	sbci	r29, 0x01	; 1
    2556:	f1 50       	subi	r31, 0x01	; 1
    2558:	cb 5e       	subi	r28, 0xEB	; 235
    255a:	de 4f       	sbci	r29, 0xFE	; 254
    255c:	f8 83       	st	Y, r31
    255e:	c5 51       	subi	r28, 0x15	; 21
    2560:	d1 40       	sbci	r29, 0x01	; 1
    2562:	cb 5e       	subi	r28, 0xEB	; 235
    2564:	de 4f       	sbci	r29, 0xFE	; 254
    2566:	88 81       	ld	r24, Y
    2568:	c5 51       	subi	r28, 0x15	; 21
    256a:	d1 40       	sbci	r29, 0x01	; 1
    256c:	88 23       	and	r24, r24
    256e:	31 f6       	brne	.-116    	; 0x24fc <main+0x6dc>
		0b11111,
		0b00100,
		0b00100,
		0

	};
    2570:	ce 01       	movw	r24, r28
    2572:	8d 53       	subi	r24, 0x3D	; 61
    2574:	9f 4f       	sbci	r25, 0xFF	; 255
    2576:	ca 5e       	subi	r28, 0xEA	; 234
    2578:	de 4f       	sbci	r29, 0xFE	; 254
    257a:	99 83       	std	Y+1, r25	; 0x01
    257c:	88 83       	st	Y, r24
    257e:	c6 51       	subi	r28, 0x16	; 22
    2580:	d1 40       	sbci	r29, 0x01	; 1
    2582:	ae eb       	ldi	r26, 0xBE	; 190
    2584:	b0 e0       	ldi	r27, 0x00	; 0
    2586:	c8 5e       	subi	r28, 0xE8	; 232
    2588:	de 4f       	sbci	r29, 0xFE	; 254
    258a:	b9 83       	std	Y+1, r27	; 0x01
    258c:	a8 83       	st	Y, r26
    258e:	c8 51       	subi	r28, 0x18	; 24
    2590:	d1 40       	sbci	r29, 0x01	; 1
    2592:	b8 e0       	ldi	r27, 0x08	; 8
    2594:	c6 5e       	subi	r28, 0xE6	; 230
    2596:	de 4f       	sbci	r29, 0xFE	; 254
    2598:	b8 83       	st	Y, r27
    259a:	ca 51       	subi	r28, 0x1A	; 26
    259c:	d1 40       	sbci	r29, 0x01	; 1
    259e:	c8 5e       	subi	r28, 0xE8	; 232
    25a0:	de 4f       	sbci	r29, 0xFE	; 254
    25a2:	e8 81       	ld	r30, Y
    25a4:	f9 81       	ldd	r31, Y+1	; 0x01
    25a6:	c8 51       	subi	r28, 0x18	; 24
    25a8:	d1 40       	sbci	r29, 0x01	; 1
    25aa:	00 80       	ld	r0, Z
    25ac:	c8 5e       	subi	r28, 0xE8	; 232
    25ae:	de 4f       	sbci	r29, 0xFE	; 254
    25b0:	88 81       	ld	r24, Y
    25b2:	99 81       	ldd	r25, Y+1	; 0x01
    25b4:	c8 51       	subi	r28, 0x18	; 24
    25b6:	d1 40       	sbci	r29, 0x01	; 1
    25b8:	01 96       	adiw	r24, 0x01	; 1
    25ba:	c8 5e       	subi	r28, 0xE8	; 232
    25bc:	de 4f       	sbci	r29, 0xFE	; 254
    25be:	99 83       	std	Y+1, r25	; 0x01
    25c0:	88 83       	st	Y, r24
    25c2:	c8 51       	subi	r28, 0x18	; 24
    25c4:	d1 40       	sbci	r29, 0x01	; 1
    25c6:	ca 5e       	subi	r28, 0xEA	; 234
    25c8:	de 4f       	sbci	r29, 0xFE	; 254
    25ca:	a8 81       	ld	r26, Y
    25cc:	b9 81       	ldd	r27, Y+1	; 0x01
    25ce:	c6 51       	subi	r28, 0x16	; 22
    25d0:	d1 40       	sbci	r29, 0x01	; 1
    25d2:	0c 92       	st	X, r0
    25d4:	ca 5e       	subi	r28, 0xEA	; 234
    25d6:	de 4f       	sbci	r29, 0xFE	; 254
    25d8:	e8 81       	ld	r30, Y
    25da:	f9 81       	ldd	r31, Y+1	; 0x01
    25dc:	c6 51       	subi	r28, 0x16	; 22
    25de:	d1 40       	sbci	r29, 0x01	; 1
    25e0:	31 96       	adiw	r30, 0x01	; 1
    25e2:	ca 5e       	subi	r28, 0xEA	; 234
    25e4:	de 4f       	sbci	r29, 0xFE	; 254
    25e6:	f9 83       	std	Y+1, r31	; 0x01
    25e8:	e8 83       	st	Y, r30
    25ea:	c6 51       	subi	r28, 0x16	; 22
    25ec:	d1 40       	sbci	r29, 0x01	; 1
    25ee:	c6 5e       	subi	r28, 0xE6	; 230
    25f0:	de 4f       	sbci	r29, 0xFE	; 254
    25f2:	f8 81       	ld	r31, Y
    25f4:	ca 51       	subi	r28, 0x1A	; 26
    25f6:	d1 40       	sbci	r29, 0x01	; 1
    25f8:	f1 50       	subi	r31, 0x01	; 1
    25fa:	c6 5e       	subi	r28, 0xE6	; 230
    25fc:	de 4f       	sbci	r29, 0xFE	; 254
    25fe:	f8 83       	st	Y, r31
    2600:	ca 51       	subi	r28, 0x1A	; 26
    2602:	d1 40       	sbci	r29, 0x01	; 1
    2604:	c6 5e       	subi	r28, 0xE6	; 230
    2606:	de 4f       	sbci	r29, 0xFE	; 254
    2608:	88 81       	ld	r24, Y
    260a:	ca 51       	subi	r28, 0x1A	; 26
    260c:	d1 40       	sbci	r29, 0x01	; 1
    260e:	88 23       	and	r24, r24
    2610:	31 f6       	brne	.-116    	; 0x259e <main+0x77e>
		0b00100,
		0b01010,
		0b10001,
		0b10001,
		0b10001
	};
    2612:	ce 01       	movw	r24, r28
    2614:	85 53       	subi	r24, 0x35	; 53
    2616:	9f 4f       	sbci	r25, 0xFF	; 255
    2618:	c5 5e       	subi	r28, 0xE5	; 229
    261a:	de 4f       	sbci	r29, 0xFE	; 254
    261c:	99 83       	std	Y+1, r25	; 0x01
    261e:	88 83       	st	Y, r24
    2620:	cb 51       	subi	r28, 0x1B	; 27
    2622:	d1 40       	sbci	r29, 0x01	; 1
    2624:	a6 eb       	ldi	r26, 0xB6	; 182
    2626:	b0 e0       	ldi	r27, 0x00	; 0
    2628:	c3 5e       	subi	r28, 0xE3	; 227
    262a:	de 4f       	sbci	r29, 0xFE	; 254
    262c:	b9 83       	std	Y+1, r27	; 0x01
    262e:	a8 83       	st	Y, r26
    2630:	cd 51       	subi	r28, 0x1D	; 29
    2632:	d1 40       	sbci	r29, 0x01	; 1
    2634:	b8 e0       	ldi	r27, 0x08	; 8
    2636:	c1 5e       	subi	r28, 0xE1	; 225
    2638:	de 4f       	sbci	r29, 0xFE	; 254
    263a:	b8 83       	st	Y, r27
    263c:	cf 51       	subi	r28, 0x1F	; 31
    263e:	d1 40       	sbci	r29, 0x01	; 1
    2640:	c3 5e       	subi	r28, 0xE3	; 227
    2642:	de 4f       	sbci	r29, 0xFE	; 254
    2644:	e8 81       	ld	r30, Y
    2646:	f9 81       	ldd	r31, Y+1	; 0x01
    2648:	cd 51       	subi	r28, 0x1D	; 29
    264a:	d1 40       	sbci	r29, 0x01	; 1
    264c:	00 80       	ld	r0, Z
    264e:	c3 5e       	subi	r28, 0xE3	; 227
    2650:	de 4f       	sbci	r29, 0xFE	; 254
    2652:	88 81       	ld	r24, Y
    2654:	99 81       	ldd	r25, Y+1	; 0x01
    2656:	cd 51       	subi	r28, 0x1D	; 29
    2658:	d1 40       	sbci	r29, 0x01	; 1
    265a:	01 96       	adiw	r24, 0x01	; 1
    265c:	c3 5e       	subi	r28, 0xE3	; 227
    265e:	de 4f       	sbci	r29, 0xFE	; 254
    2660:	99 83       	std	Y+1, r25	; 0x01
    2662:	88 83       	st	Y, r24
    2664:	cd 51       	subi	r28, 0x1D	; 29
    2666:	d1 40       	sbci	r29, 0x01	; 1
    2668:	c5 5e       	subi	r28, 0xE5	; 229
    266a:	de 4f       	sbci	r29, 0xFE	; 254
    266c:	a8 81       	ld	r26, Y
    266e:	b9 81       	ldd	r27, Y+1	; 0x01
    2670:	cb 51       	subi	r28, 0x1B	; 27
    2672:	d1 40       	sbci	r29, 0x01	; 1
    2674:	0c 92       	st	X, r0
    2676:	c5 5e       	subi	r28, 0xE5	; 229
    2678:	de 4f       	sbci	r29, 0xFE	; 254
    267a:	e8 81       	ld	r30, Y
    267c:	f9 81       	ldd	r31, Y+1	; 0x01
    267e:	cb 51       	subi	r28, 0x1B	; 27
    2680:	d1 40       	sbci	r29, 0x01	; 1
    2682:	31 96       	adiw	r30, 0x01	; 1
    2684:	c5 5e       	subi	r28, 0xE5	; 229
    2686:	de 4f       	sbci	r29, 0xFE	; 254
    2688:	f9 83       	std	Y+1, r31	; 0x01
    268a:	e8 83       	st	Y, r30
    268c:	cb 51       	subi	r28, 0x1B	; 27
    268e:	d1 40       	sbci	r29, 0x01	; 1
    2690:	c1 5e       	subi	r28, 0xE1	; 225
    2692:	de 4f       	sbci	r29, 0xFE	; 254
    2694:	f8 81       	ld	r31, Y
    2696:	cf 51       	subi	r28, 0x1F	; 31
    2698:	d1 40       	sbci	r29, 0x01	; 1
    269a:	f1 50       	subi	r31, 0x01	; 1
    269c:	c1 5e       	subi	r28, 0xE1	; 225
    269e:	de 4f       	sbci	r29, 0xFE	; 254
    26a0:	f8 83       	st	Y, r31
    26a2:	cf 51       	subi	r28, 0x1F	; 31
    26a4:	d1 40       	sbci	r29, 0x01	; 1
    26a6:	c1 5e       	subi	r28, 0xE1	; 225
    26a8:	de 4f       	sbci	r29, 0xFE	; 254
    26aa:	88 81       	ld	r24, Y
    26ac:	cf 51       	subi	r28, 0x1F	; 31
    26ae:	d1 40       	sbci	r29, 0x01	; 1
    26b0:	88 23       	and	r24, r24
    26b2:	31 f6       	brne	.-116    	; 0x2640 <main+0x820>
		0b00100,
		0b01010,
		0b01010,
		0b01010,
		0b01010
	};
    26b4:	ce 01       	movw	r24, r28
    26b6:	8d 52       	subi	r24, 0x2D	; 45
    26b8:	9f 4f       	sbci	r25, 0xFF	; 255
    26ba:	c0 5e       	subi	r28, 0xE0	; 224
    26bc:	de 4f       	sbci	r29, 0xFE	; 254
    26be:	99 83       	std	Y+1, r25	; 0x01
    26c0:	88 83       	st	Y, r24
    26c2:	c0 52       	subi	r28, 0x20	; 32
    26c4:	d1 40       	sbci	r29, 0x01	; 1
    26c6:	ae ea       	ldi	r26, 0xAE	; 174
    26c8:	b0 e0       	ldi	r27, 0x00	; 0
    26ca:	ce 5d       	subi	r28, 0xDE	; 222
    26cc:	de 4f       	sbci	r29, 0xFE	; 254
    26ce:	b9 83       	std	Y+1, r27	; 0x01
    26d0:	a8 83       	st	Y, r26
    26d2:	c2 52       	subi	r28, 0x22	; 34
    26d4:	d1 40       	sbci	r29, 0x01	; 1
    26d6:	b8 e0       	ldi	r27, 0x08	; 8
    26d8:	cc 5d       	subi	r28, 0xDC	; 220
    26da:	de 4f       	sbci	r29, 0xFE	; 254
    26dc:	b8 83       	st	Y, r27
    26de:	c4 52       	subi	r28, 0x24	; 36
    26e0:	d1 40       	sbci	r29, 0x01	; 1
    26e2:	ce 5d       	subi	r28, 0xDE	; 222
    26e4:	de 4f       	sbci	r29, 0xFE	; 254
    26e6:	e8 81       	ld	r30, Y
    26e8:	f9 81       	ldd	r31, Y+1	; 0x01
    26ea:	c2 52       	subi	r28, 0x22	; 34
    26ec:	d1 40       	sbci	r29, 0x01	; 1
    26ee:	00 80       	ld	r0, Z
    26f0:	ce 5d       	subi	r28, 0xDE	; 222
    26f2:	de 4f       	sbci	r29, 0xFE	; 254
    26f4:	88 81       	ld	r24, Y
    26f6:	99 81       	ldd	r25, Y+1	; 0x01
    26f8:	c2 52       	subi	r28, 0x22	; 34
    26fa:	d1 40       	sbci	r29, 0x01	; 1
    26fc:	01 96       	adiw	r24, 0x01	; 1
    26fe:	ce 5d       	subi	r28, 0xDE	; 222
    2700:	de 4f       	sbci	r29, 0xFE	; 254
    2702:	99 83       	std	Y+1, r25	; 0x01
    2704:	88 83       	st	Y, r24
    2706:	c2 52       	subi	r28, 0x22	; 34
    2708:	d1 40       	sbci	r29, 0x01	; 1
    270a:	c0 5e       	subi	r28, 0xE0	; 224
    270c:	de 4f       	sbci	r29, 0xFE	; 254
    270e:	a8 81       	ld	r26, Y
    2710:	b9 81       	ldd	r27, Y+1	; 0x01
    2712:	c0 52       	subi	r28, 0x20	; 32
    2714:	d1 40       	sbci	r29, 0x01	; 1
    2716:	0c 92       	st	X, r0
    2718:	c0 5e       	subi	r28, 0xE0	; 224
    271a:	de 4f       	sbci	r29, 0xFE	; 254
    271c:	e8 81       	ld	r30, Y
    271e:	f9 81       	ldd	r31, Y+1	; 0x01
    2720:	c0 52       	subi	r28, 0x20	; 32
    2722:	d1 40       	sbci	r29, 0x01	; 1
    2724:	31 96       	adiw	r30, 0x01	; 1
    2726:	c0 5e       	subi	r28, 0xE0	; 224
    2728:	de 4f       	sbci	r29, 0xFE	; 254
    272a:	f9 83       	std	Y+1, r31	; 0x01
    272c:	e8 83       	st	Y, r30
    272e:	c0 52       	subi	r28, 0x20	; 32
    2730:	d1 40       	sbci	r29, 0x01	; 1
    2732:	cc 5d       	subi	r28, 0xDC	; 220
    2734:	de 4f       	sbci	r29, 0xFE	; 254
    2736:	f8 81       	ld	r31, Y
    2738:	c4 52       	subi	r28, 0x24	; 36
    273a:	d1 40       	sbci	r29, 0x01	; 1
    273c:	f1 50       	subi	r31, 0x01	; 1
    273e:	cc 5d       	subi	r28, 0xDC	; 220
    2740:	de 4f       	sbci	r29, 0xFE	; 254
    2742:	f8 83       	st	Y, r31
    2744:	c4 52       	subi	r28, 0x24	; 36
    2746:	d1 40       	sbci	r29, 0x01	; 1
    2748:	cc 5d       	subi	r28, 0xDC	; 220
    274a:	de 4f       	sbci	r29, 0xFE	; 254
    274c:	88 81       	ld	r24, Y
    274e:	c4 52       	subi	r28, 0x24	; 36
    2750:	d1 40       	sbci	r29, 0x01	; 1
    2752:	88 23       	and	r24, r24
    2754:	31 f6       	brne	.-116    	; 0x26e2 <main+0x8c2>
		0b00100,
		0b01010,
		0b10010,
		0b00010,
		0b00010
	};
    2756:	ce 01       	movw	r24, r28
    2758:	85 52       	subi	r24, 0x25	; 37
    275a:	9f 4f       	sbci	r25, 0xFF	; 255
    275c:	cb 5d       	subi	r28, 0xDB	; 219
    275e:	de 4f       	sbci	r29, 0xFE	; 254
    2760:	99 83       	std	Y+1, r25	; 0x01
    2762:	88 83       	st	Y, r24
    2764:	c5 52       	subi	r28, 0x25	; 37
    2766:	d1 40       	sbci	r29, 0x01	; 1
    2768:	a6 ea       	ldi	r26, 0xA6	; 166
    276a:	b0 e0       	ldi	r27, 0x00	; 0
    276c:	c9 5d       	subi	r28, 0xD9	; 217
    276e:	de 4f       	sbci	r29, 0xFE	; 254
    2770:	b9 83       	std	Y+1, r27	; 0x01
    2772:	a8 83       	st	Y, r26
    2774:	c7 52       	subi	r28, 0x27	; 39
    2776:	d1 40       	sbci	r29, 0x01	; 1
    2778:	b8 e0       	ldi	r27, 0x08	; 8
    277a:	c7 5d       	subi	r28, 0xD7	; 215
    277c:	de 4f       	sbci	r29, 0xFE	; 254
    277e:	b8 83       	st	Y, r27
    2780:	c9 52       	subi	r28, 0x29	; 41
    2782:	d1 40       	sbci	r29, 0x01	; 1
    2784:	c9 5d       	subi	r28, 0xD9	; 217
    2786:	de 4f       	sbci	r29, 0xFE	; 254
    2788:	e8 81       	ld	r30, Y
    278a:	f9 81       	ldd	r31, Y+1	; 0x01
    278c:	c7 52       	subi	r28, 0x27	; 39
    278e:	d1 40       	sbci	r29, 0x01	; 1
    2790:	00 80       	ld	r0, Z
    2792:	c9 5d       	subi	r28, 0xD9	; 217
    2794:	de 4f       	sbci	r29, 0xFE	; 254
    2796:	88 81       	ld	r24, Y
    2798:	99 81       	ldd	r25, Y+1	; 0x01
    279a:	c7 52       	subi	r28, 0x27	; 39
    279c:	d1 40       	sbci	r29, 0x01	; 1
    279e:	01 96       	adiw	r24, 0x01	; 1
    27a0:	c9 5d       	subi	r28, 0xD9	; 217
    27a2:	de 4f       	sbci	r29, 0xFE	; 254
    27a4:	99 83       	std	Y+1, r25	; 0x01
    27a6:	88 83       	st	Y, r24
    27a8:	c7 52       	subi	r28, 0x27	; 39
    27aa:	d1 40       	sbci	r29, 0x01	; 1
    27ac:	cb 5d       	subi	r28, 0xDB	; 219
    27ae:	de 4f       	sbci	r29, 0xFE	; 254
    27b0:	a8 81       	ld	r26, Y
    27b2:	b9 81       	ldd	r27, Y+1	; 0x01
    27b4:	c5 52       	subi	r28, 0x25	; 37
    27b6:	d1 40       	sbci	r29, 0x01	; 1
    27b8:	0c 92       	st	X, r0
    27ba:	cb 5d       	subi	r28, 0xDB	; 219
    27bc:	de 4f       	sbci	r29, 0xFE	; 254
    27be:	e8 81       	ld	r30, Y
    27c0:	f9 81       	ldd	r31, Y+1	; 0x01
    27c2:	c5 52       	subi	r28, 0x25	; 37
    27c4:	d1 40       	sbci	r29, 0x01	; 1
    27c6:	31 96       	adiw	r30, 0x01	; 1
    27c8:	cb 5d       	subi	r28, 0xDB	; 219
    27ca:	de 4f       	sbci	r29, 0xFE	; 254
    27cc:	f9 83       	std	Y+1, r31	; 0x01
    27ce:	e8 83       	st	Y, r30
    27d0:	c5 52       	subi	r28, 0x25	; 37
    27d2:	d1 40       	sbci	r29, 0x01	; 1
    27d4:	c7 5d       	subi	r28, 0xD7	; 215
    27d6:	de 4f       	sbci	r29, 0xFE	; 254
    27d8:	f8 81       	ld	r31, Y
    27da:	c9 52       	subi	r28, 0x29	; 41
    27dc:	d1 40       	sbci	r29, 0x01	; 1
    27de:	f1 50       	subi	r31, 0x01	; 1
    27e0:	c7 5d       	subi	r28, 0xD7	; 215
    27e2:	de 4f       	sbci	r29, 0xFE	; 254
    27e4:	f8 83       	st	Y, r31
    27e6:	c9 52       	subi	r28, 0x29	; 41
    27e8:	d1 40       	sbci	r29, 0x01	; 1
    27ea:	c7 5d       	subi	r28, 0xD7	; 215
    27ec:	de 4f       	sbci	r29, 0xFE	; 254
    27ee:	88 81       	ld	r24, Y
    27f0:	c9 52       	subi	r28, 0x29	; 41
    27f2:	d1 40       	sbci	r29, 0x01	; 1
    27f4:	88 23       	and	r24, r24
    27f6:	31 f6       	brne	.-116    	; 0x2784 <main+0x964>
		0b00100,
		0b01010,
		0b01001,
		0b01000,
		0b01000
	};
    27f8:	ce 01       	movw	r24, r28
    27fa:	8d 51       	subi	r24, 0x1D	; 29
    27fc:	9f 4f       	sbci	r25, 0xFF	; 255
    27fe:	c6 5d       	subi	r28, 0xD6	; 214
    2800:	de 4f       	sbci	r29, 0xFE	; 254
    2802:	99 83       	std	Y+1, r25	; 0x01
    2804:	88 83       	st	Y, r24
    2806:	ca 52       	subi	r28, 0x2A	; 42
    2808:	d1 40       	sbci	r29, 0x01	; 1
    280a:	ae e9       	ldi	r26, 0x9E	; 158
    280c:	b0 e0       	ldi	r27, 0x00	; 0
    280e:	c4 5d       	subi	r28, 0xD4	; 212
    2810:	de 4f       	sbci	r29, 0xFE	; 254
    2812:	b9 83       	std	Y+1, r27	; 0x01
    2814:	a8 83       	st	Y, r26
    2816:	cc 52       	subi	r28, 0x2C	; 44
    2818:	d1 40       	sbci	r29, 0x01	; 1
    281a:	b8 e0       	ldi	r27, 0x08	; 8
    281c:	c2 5d       	subi	r28, 0xD2	; 210
    281e:	de 4f       	sbci	r29, 0xFE	; 254
    2820:	b8 83       	st	Y, r27
    2822:	ce 52       	subi	r28, 0x2E	; 46
    2824:	d1 40       	sbci	r29, 0x01	; 1
    2826:	c4 5d       	subi	r28, 0xD4	; 212
    2828:	de 4f       	sbci	r29, 0xFE	; 254
    282a:	e8 81       	ld	r30, Y
    282c:	f9 81       	ldd	r31, Y+1	; 0x01
    282e:	cc 52       	subi	r28, 0x2C	; 44
    2830:	d1 40       	sbci	r29, 0x01	; 1
    2832:	00 80       	ld	r0, Z
    2834:	c4 5d       	subi	r28, 0xD4	; 212
    2836:	de 4f       	sbci	r29, 0xFE	; 254
    2838:	88 81       	ld	r24, Y
    283a:	99 81       	ldd	r25, Y+1	; 0x01
    283c:	cc 52       	subi	r28, 0x2C	; 44
    283e:	d1 40       	sbci	r29, 0x01	; 1
    2840:	01 96       	adiw	r24, 0x01	; 1
    2842:	c4 5d       	subi	r28, 0xD4	; 212
    2844:	de 4f       	sbci	r29, 0xFE	; 254
    2846:	99 83       	std	Y+1, r25	; 0x01
    2848:	88 83       	st	Y, r24
    284a:	cc 52       	subi	r28, 0x2C	; 44
    284c:	d1 40       	sbci	r29, 0x01	; 1
    284e:	c6 5d       	subi	r28, 0xD6	; 214
    2850:	de 4f       	sbci	r29, 0xFE	; 254
    2852:	a8 81       	ld	r26, Y
    2854:	b9 81       	ldd	r27, Y+1	; 0x01
    2856:	ca 52       	subi	r28, 0x2A	; 42
    2858:	d1 40       	sbci	r29, 0x01	; 1
    285a:	0c 92       	st	X, r0
    285c:	c6 5d       	subi	r28, 0xD6	; 214
    285e:	de 4f       	sbci	r29, 0xFE	; 254
    2860:	e8 81       	ld	r30, Y
    2862:	f9 81       	ldd	r31, Y+1	; 0x01
    2864:	ca 52       	subi	r28, 0x2A	; 42
    2866:	d1 40       	sbci	r29, 0x01	; 1
    2868:	31 96       	adiw	r30, 0x01	; 1
    286a:	c6 5d       	subi	r28, 0xD6	; 214
    286c:	de 4f       	sbci	r29, 0xFE	; 254
    286e:	f9 83       	std	Y+1, r31	; 0x01
    2870:	e8 83       	st	Y, r30
    2872:	ca 52       	subi	r28, 0x2A	; 42
    2874:	d1 40       	sbci	r29, 0x01	; 1
    2876:	c2 5d       	subi	r28, 0xD2	; 210
    2878:	de 4f       	sbci	r29, 0xFE	; 254
    287a:	f8 81       	ld	r31, Y
    287c:	ce 52       	subi	r28, 0x2E	; 46
    287e:	d1 40       	sbci	r29, 0x01	; 1
    2880:	f1 50       	subi	r31, 0x01	; 1
    2882:	c2 5d       	subi	r28, 0xD2	; 210
    2884:	de 4f       	sbci	r29, 0xFE	; 254
    2886:	f8 83       	st	Y, r31
    2888:	ce 52       	subi	r28, 0x2E	; 46
    288a:	d1 40       	sbci	r29, 0x01	; 1
    288c:	c2 5d       	subi	r28, 0xD2	; 210
    288e:	de 4f       	sbci	r29, 0xFE	; 254
    2890:	88 81       	ld	r24, Y
    2892:	ce 52       	subi	r28, 0x2E	; 46
    2894:	d1 40       	sbci	r29, 0x01	; 1
    2896:	88 23       	and	r24, r24
    2898:	31 f6       	brne	.-116    	; 0x2826 <main+0xa06>
			0b01110,
			0b10001,
			0b01110,

			0
	};
    289a:	ce 01       	movw	r24, r28
    289c:	85 51       	subi	r24, 0x15	; 21
    289e:	9f 4f       	sbci	r25, 0xFF	; 255
    28a0:	c1 5d       	subi	r28, 0xD1	; 209
    28a2:	de 4f       	sbci	r29, 0xFE	; 254
    28a4:	99 83       	std	Y+1, r25	; 0x01
    28a6:	88 83       	st	Y, r24
    28a8:	cf 52       	subi	r28, 0x2F	; 47
    28aa:	d1 40       	sbci	r29, 0x01	; 1
    28ac:	a6 e9       	ldi	r26, 0x96	; 150
    28ae:	b0 e0       	ldi	r27, 0x00	; 0
    28b0:	cf 5c       	subi	r28, 0xCF	; 207
    28b2:	de 4f       	sbci	r29, 0xFE	; 254
    28b4:	b9 83       	std	Y+1, r27	; 0x01
    28b6:	a8 83       	st	Y, r26
    28b8:	c1 53       	subi	r28, 0x31	; 49
    28ba:	d1 40       	sbci	r29, 0x01	; 1
    28bc:	b8 e0       	ldi	r27, 0x08	; 8
    28be:	cd 5c       	subi	r28, 0xCD	; 205
    28c0:	de 4f       	sbci	r29, 0xFE	; 254
    28c2:	b8 83       	st	Y, r27
    28c4:	c3 53       	subi	r28, 0x33	; 51
    28c6:	d1 40       	sbci	r29, 0x01	; 1
    28c8:	cf 5c       	subi	r28, 0xCF	; 207
    28ca:	de 4f       	sbci	r29, 0xFE	; 254
    28cc:	e8 81       	ld	r30, Y
    28ce:	f9 81       	ldd	r31, Y+1	; 0x01
    28d0:	c1 53       	subi	r28, 0x31	; 49
    28d2:	d1 40       	sbci	r29, 0x01	; 1
    28d4:	00 80       	ld	r0, Z
    28d6:	cf 5c       	subi	r28, 0xCF	; 207
    28d8:	de 4f       	sbci	r29, 0xFE	; 254
    28da:	88 81       	ld	r24, Y
    28dc:	99 81       	ldd	r25, Y+1	; 0x01
    28de:	c1 53       	subi	r28, 0x31	; 49
    28e0:	d1 40       	sbci	r29, 0x01	; 1
    28e2:	01 96       	adiw	r24, 0x01	; 1
    28e4:	cf 5c       	subi	r28, 0xCF	; 207
    28e6:	de 4f       	sbci	r29, 0xFE	; 254
    28e8:	99 83       	std	Y+1, r25	; 0x01
    28ea:	88 83       	st	Y, r24
    28ec:	c1 53       	subi	r28, 0x31	; 49
    28ee:	d1 40       	sbci	r29, 0x01	; 1
    28f0:	c1 5d       	subi	r28, 0xD1	; 209
    28f2:	de 4f       	sbci	r29, 0xFE	; 254
    28f4:	a8 81       	ld	r26, Y
    28f6:	b9 81       	ldd	r27, Y+1	; 0x01
    28f8:	cf 52       	subi	r28, 0x2F	; 47
    28fa:	d1 40       	sbci	r29, 0x01	; 1
    28fc:	0c 92       	st	X, r0
    28fe:	c1 5d       	subi	r28, 0xD1	; 209
    2900:	de 4f       	sbci	r29, 0xFE	; 254
    2902:	e8 81       	ld	r30, Y
    2904:	f9 81       	ldd	r31, Y+1	; 0x01
    2906:	cf 52       	subi	r28, 0x2F	; 47
    2908:	d1 40       	sbci	r29, 0x01	; 1
    290a:	31 96       	adiw	r30, 0x01	; 1
    290c:	c1 5d       	subi	r28, 0xD1	; 209
    290e:	de 4f       	sbci	r29, 0xFE	; 254
    2910:	f9 83       	std	Y+1, r31	; 0x01
    2912:	e8 83       	st	Y, r30
    2914:	cf 52       	subi	r28, 0x2F	; 47
    2916:	d1 40       	sbci	r29, 0x01	; 1
    2918:	cd 5c       	subi	r28, 0xCD	; 205
    291a:	de 4f       	sbci	r29, 0xFE	; 254
    291c:	f8 81       	ld	r31, Y
    291e:	c3 53       	subi	r28, 0x33	; 51
    2920:	d1 40       	sbci	r29, 0x01	; 1
    2922:	f1 50       	subi	r31, 0x01	; 1
    2924:	cd 5c       	subi	r28, 0xCD	; 205
    2926:	de 4f       	sbci	r29, 0xFE	; 254
    2928:	f8 83       	st	Y, r31
    292a:	c3 53       	subi	r28, 0x33	; 51
    292c:	d1 40       	sbci	r29, 0x01	; 1
    292e:	cd 5c       	subi	r28, 0xCD	; 205
    2930:	de 4f       	sbci	r29, 0xFE	; 254
    2932:	88 81       	ld	r24, Y
    2934:	c3 53       	subi	r28, 0x33	; 51
    2936:	d1 40       	sbci	r29, 0x01	; 1
    2938:	88 23       	and	r24, r24
    293a:	31 f6       	brne	.-116    	; 0x28c8 <main+0xaa8>

	LCD_DISPLAY_STRING("IT CAN RUN");
    293c:	80 e6       	ldi	r24, 0x60	; 96
    293e:	90 e0       	ldi	r25, 0x00	; 0
    2940:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <LCD_DISPLAY_STRING>
    2944:	fe 01       	movw	r30, r28
    2946:	e3 59       	subi	r30, 0x93	; 147
    2948:	ff 4f       	sbci	r31, 0xFF	; 255
    294a:	80 e0       	ldi	r24, 0x00	; 0
    294c:	90 e0       	ldi	r25, 0x00	; 0
    294e:	a1 ee       	ldi	r26, 0xE1	; 225
    2950:	b3 e4       	ldi	r27, 0x43	; 67
    2952:	80 83       	st	Z, r24
    2954:	91 83       	std	Z+1, r25	; 0x01
    2956:	a2 83       	std	Z+2, r26	; 0x02
    2958:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    295a:	8e 01       	movw	r16, r28
    295c:	07 59       	subi	r16, 0x97	; 151
    295e:	1f 4f       	sbci	r17, 0xFF	; 255
    2960:	fe 01       	movw	r30, r28
    2962:	e3 59       	subi	r30, 0x93	; 147
    2964:	ff 4f       	sbci	r31, 0xFF	; 255
    2966:	60 81       	ld	r22, Z
    2968:	71 81       	ldd	r23, Z+1	; 0x01
    296a:	82 81       	ldd	r24, Z+2	; 0x02
    296c:	93 81       	ldd	r25, Z+3	; 0x03
    296e:	20 e0       	ldi	r18, 0x00	; 0
    2970:	30 e0       	ldi	r19, 0x00	; 0
    2972:	4a ef       	ldi	r20, 0xFA	; 250
    2974:	54 e4       	ldi	r21, 0x44	; 68
    2976:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    297a:	dc 01       	movw	r26, r24
    297c:	cb 01       	movw	r24, r22
    297e:	f8 01       	movw	r30, r16
    2980:	80 83       	st	Z, r24
    2982:	91 83       	std	Z+1, r25	; 0x01
    2984:	a2 83       	std	Z+2, r26	; 0x02
    2986:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2988:	fe 01       	movw	r30, r28
    298a:	e7 59       	subi	r30, 0x97	; 151
    298c:	ff 4f       	sbci	r31, 0xFF	; 255
    298e:	60 81       	ld	r22, Z
    2990:	71 81       	ldd	r23, Z+1	; 0x01
    2992:	82 81       	ldd	r24, Z+2	; 0x02
    2994:	93 81       	ldd	r25, Z+3	; 0x03
    2996:	20 e0       	ldi	r18, 0x00	; 0
    2998:	30 e0       	ldi	r19, 0x00	; 0
    299a:	40 e8       	ldi	r20, 0x80	; 128
    299c:	5f e3       	ldi	r21, 0x3F	; 63
    299e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    29a2:	88 23       	and	r24, r24
    29a4:	44 f4       	brge	.+16     	; 0x29b6 <main+0xb96>
		__ticks = 1;
    29a6:	fe 01       	movw	r30, r28
    29a8:	e9 59       	subi	r30, 0x99	; 153
    29aa:	ff 4f       	sbci	r31, 0xFF	; 255
    29ac:	81 e0       	ldi	r24, 0x01	; 1
    29ae:	90 e0       	ldi	r25, 0x00	; 0
    29b0:	91 83       	std	Z+1, r25	; 0x01
    29b2:	80 83       	st	Z, r24
    29b4:	64 c0       	rjmp	.+200    	; 0x2a7e <main+0xc5e>
	else if (__tmp > 65535)
    29b6:	fe 01       	movw	r30, r28
    29b8:	e7 59       	subi	r30, 0x97	; 151
    29ba:	ff 4f       	sbci	r31, 0xFF	; 255
    29bc:	60 81       	ld	r22, Z
    29be:	71 81       	ldd	r23, Z+1	; 0x01
    29c0:	82 81       	ldd	r24, Z+2	; 0x02
    29c2:	93 81       	ldd	r25, Z+3	; 0x03
    29c4:	20 e0       	ldi	r18, 0x00	; 0
    29c6:	3f ef       	ldi	r19, 0xFF	; 255
    29c8:	4f e7       	ldi	r20, 0x7F	; 127
    29ca:	57 e4       	ldi	r21, 0x47	; 71
    29cc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    29d0:	18 16       	cp	r1, r24
    29d2:	0c f0       	brlt	.+2      	; 0x29d6 <main+0xbb6>
    29d4:	43 c0       	rjmp	.+134    	; 0x2a5c <main+0xc3c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29d6:	fe 01       	movw	r30, r28
    29d8:	e3 59       	subi	r30, 0x93	; 147
    29da:	ff 4f       	sbci	r31, 0xFF	; 255
    29dc:	60 81       	ld	r22, Z
    29de:	71 81       	ldd	r23, Z+1	; 0x01
    29e0:	82 81       	ldd	r24, Z+2	; 0x02
    29e2:	93 81       	ldd	r25, Z+3	; 0x03
    29e4:	20 e0       	ldi	r18, 0x00	; 0
    29e6:	30 e0       	ldi	r19, 0x00	; 0
    29e8:	40 e2       	ldi	r20, 0x20	; 32
    29ea:	51 e4       	ldi	r21, 0x41	; 65
    29ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29f0:	dc 01       	movw	r26, r24
    29f2:	cb 01       	movw	r24, r22
    29f4:	8e 01       	movw	r16, r28
    29f6:	09 59       	subi	r16, 0x99	; 153
    29f8:	1f 4f       	sbci	r17, 0xFF	; 255
    29fa:	bc 01       	movw	r22, r24
    29fc:	cd 01       	movw	r24, r26
    29fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a02:	dc 01       	movw	r26, r24
    2a04:	cb 01       	movw	r24, r22
    2a06:	f8 01       	movw	r30, r16
    2a08:	91 83       	std	Z+1, r25	; 0x01
    2a0a:	80 83       	st	Z, r24
    2a0c:	1f c0       	rjmp	.+62     	; 0x2a4c <main+0xc2c>
    2a0e:	fe 01       	movw	r30, r28
    2a10:	eb 59       	subi	r30, 0x9B	; 155
    2a12:	ff 4f       	sbci	r31, 0xFF	; 255
    2a14:	88 ec       	ldi	r24, 0xC8	; 200
    2a16:	90 e0       	ldi	r25, 0x00	; 0
    2a18:	91 83       	std	Z+1, r25	; 0x01
    2a1a:	80 83       	st	Z, r24
    2a1c:	fe 01       	movw	r30, r28
    2a1e:	eb 59       	subi	r30, 0x9B	; 155
    2a20:	ff 4f       	sbci	r31, 0xFF	; 255
    2a22:	80 81       	ld	r24, Z
    2a24:	91 81       	ldd	r25, Z+1	; 0x01
    2a26:	01 97       	sbiw	r24, 0x01	; 1
    2a28:	f1 f7       	brne	.-4      	; 0x2a26 <main+0xc06>
    2a2a:	fe 01       	movw	r30, r28
    2a2c:	eb 59       	subi	r30, 0x9B	; 155
    2a2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a30:	91 83       	std	Z+1, r25	; 0x01
    2a32:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a34:	de 01       	movw	r26, r28
    2a36:	a9 59       	subi	r26, 0x99	; 153
    2a38:	bf 4f       	sbci	r27, 0xFF	; 255
    2a3a:	fe 01       	movw	r30, r28
    2a3c:	e9 59       	subi	r30, 0x99	; 153
    2a3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a40:	80 81       	ld	r24, Z
    2a42:	91 81       	ldd	r25, Z+1	; 0x01
    2a44:	01 97       	sbiw	r24, 0x01	; 1
    2a46:	11 96       	adiw	r26, 0x01	; 1
    2a48:	9c 93       	st	X, r25
    2a4a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a4c:	fe 01       	movw	r30, r28
    2a4e:	e9 59       	subi	r30, 0x99	; 153
    2a50:	ff 4f       	sbci	r31, 0xFF	; 255
    2a52:	80 81       	ld	r24, Z
    2a54:	91 81       	ldd	r25, Z+1	; 0x01
    2a56:	00 97       	sbiw	r24, 0x00	; 0
    2a58:	d1 f6       	brne	.-76     	; 0x2a0e <main+0xbee>
    2a5a:	27 c0       	rjmp	.+78     	; 0x2aaa <main+0xc8a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a5c:	8e 01       	movw	r16, r28
    2a5e:	09 59       	subi	r16, 0x99	; 153
    2a60:	1f 4f       	sbci	r17, 0xFF	; 255
    2a62:	fe 01       	movw	r30, r28
    2a64:	e7 59       	subi	r30, 0x97	; 151
    2a66:	ff 4f       	sbci	r31, 0xFF	; 255
    2a68:	60 81       	ld	r22, Z
    2a6a:	71 81       	ldd	r23, Z+1	; 0x01
    2a6c:	82 81       	ldd	r24, Z+2	; 0x02
    2a6e:	93 81       	ldd	r25, Z+3	; 0x03
    2a70:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a74:	dc 01       	movw	r26, r24
    2a76:	cb 01       	movw	r24, r22
    2a78:	f8 01       	movw	r30, r16
    2a7a:	91 83       	std	Z+1, r25	; 0x01
    2a7c:	80 83       	st	Z, r24
    2a7e:	de 01       	movw	r26, r28
    2a80:	ad 59       	subi	r26, 0x9D	; 157
    2a82:	bf 4f       	sbci	r27, 0xFF	; 255
    2a84:	fe 01       	movw	r30, r28
    2a86:	e9 59       	subi	r30, 0x99	; 153
    2a88:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8a:	80 81       	ld	r24, Z
    2a8c:	91 81       	ldd	r25, Z+1	; 0x01
    2a8e:	8d 93       	st	X+, r24
    2a90:	9c 93       	st	X, r25
    2a92:	fe 01       	movw	r30, r28
    2a94:	ed 59       	subi	r30, 0x9D	; 157
    2a96:	ff 4f       	sbci	r31, 0xFF	; 255
    2a98:	80 81       	ld	r24, Z
    2a9a:	91 81       	ldd	r25, Z+1	; 0x01
    2a9c:	01 97       	sbiw	r24, 0x01	; 1
    2a9e:	f1 f7       	brne	.-4      	; 0x2a9c <main+0xc7c>
    2aa0:	fe 01       	movw	r30, r28
    2aa2:	ed 59       	subi	r30, 0x9D	; 157
    2aa4:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa6:	91 83       	std	Z+1, r25	; 0x01
    2aa8:	80 83       	st	Z, r24
	_delay_ms(450);
	LCD_CLEAR();
    2aaa:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <LCD_CLEAR>

	for (u8 pos = 0; pos < 16; pos++) {
    2aae:	fe 01       	movw	r30, r28
    2ab0:	e0 58       	subi	r30, 0x80	; 128
    2ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab4:	10 82       	st	Z, r1
    2ab6:	f5 c0       	rjmp	.+490    	; 0x2ca2 <main+0xe82>
		LCD_CLEAR();
    2ab8:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <LCD_CLEAR>
		if (pos % 2 == 0) {
    2abc:	fe 01       	movw	r30, r28
    2abe:	e0 58       	subi	r30, 0x80	; 128
    2ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac2:	80 81       	ld	r24, Z
    2ac4:	88 2f       	mov	r24, r24
    2ac6:	90 e0       	ldi	r25, 0x00	; 0
    2ac8:	81 70       	andi	r24, 0x01	; 1
    2aca:	90 70       	andi	r25, 0x00	; 0
    2acc:	00 97       	sbiw	r24, 0x00	; 0
    2ace:	b9 f4       	brne	.+46     	; 0x2afe <main+0xcde>
			LCD_CUSTUM_CHAR(person1_frame1, 0, pos, 0);
    2ad0:	ce 01       	movw	r24, r28
    2ad2:	8d 54       	subi	r24, 0x4D	; 77
    2ad4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ad6:	fe 01       	movw	r30, r28
    2ad8:	e0 58       	subi	r30, 0x80	; 128
    2ada:	ff 4f       	sbci	r31, 0xFF	; 255
    2adc:	60 e0       	ldi	r22, 0x00	; 0
    2ade:	40 81       	ld	r20, Z
    2ae0:	20 e0       	ldi	r18, 0x00	; 0
    2ae2:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
			LCD_CUSTUM_CHAR(person2_frame1, 1, pos, 1);
    2ae6:	ce 01       	movw	r24, r28
    2ae8:	85 53       	subi	r24, 0x35	; 53
    2aea:	9f 4f       	sbci	r25, 0xFF	; 255
    2aec:	fe 01       	movw	r30, r28
    2aee:	e0 58       	subi	r30, 0x80	; 128
    2af0:	ff 4f       	sbci	r31, 0xFF	; 255
    2af2:	61 e0       	ldi	r22, 0x01	; 1
    2af4:	40 81       	ld	r20, Z
    2af6:	21 e0       	ldi	r18, 0x01	; 1
    2af8:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
    2afc:	16 c0       	rjmp	.+44     	; 0x2b2a <main+0xd0a>
		} else {
			LCD_CUSTUM_CHAR(person1_frame2, 0, pos, 0);
    2afe:	ce 01       	movw	r24, r28
    2b00:	85 54       	subi	r24, 0x45	; 69
    2b02:	9f 4f       	sbci	r25, 0xFF	; 255
    2b04:	fe 01       	movw	r30, r28
    2b06:	e0 58       	subi	r30, 0x80	; 128
    2b08:	ff 4f       	sbci	r31, 0xFF	; 255
    2b0a:	60 e0       	ldi	r22, 0x00	; 0
    2b0c:	40 81       	ld	r20, Z
    2b0e:	20 e0       	ldi	r18, 0x00	; 0
    2b10:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
			LCD_CUSTUM_CHAR(person2_frame2, 1, pos, 1);
    2b14:	ce 01       	movw	r24, r28
    2b16:	8d 52       	subi	r24, 0x2D	; 45
    2b18:	9f 4f       	sbci	r25, 0xFF	; 255
    2b1a:	fe 01       	movw	r30, r28
    2b1c:	e0 58       	subi	r30, 0x80	; 128
    2b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b20:	61 e0       	ldi	r22, 0x01	; 1
    2b22:	40 81       	ld	r20, Z
    2b24:	21 e0       	ldi	r18, 0x01	; 1
    2b26:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
    2b2a:	fe 01       	movw	r30, r28
    2b2c:	e1 5a       	subi	r30, 0xA1	; 161
    2b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b30:	80 e0       	ldi	r24, 0x00	; 0
    2b32:	90 e0       	ldi	r25, 0x00	; 0
    2b34:	a6 e1       	ldi	r26, 0x16	; 22
    2b36:	b3 e4       	ldi	r27, 0x43	; 67
    2b38:	80 83       	st	Z, r24
    2b3a:	91 83       	std	Z+1, r25	; 0x01
    2b3c:	a2 83       	std	Z+2, r26	; 0x02
    2b3e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b40:	8e 01       	movw	r16, r28
    2b42:	05 5a       	subi	r16, 0xA5	; 165
    2b44:	1f 4f       	sbci	r17, 0xFF	; 255
    2b46:	fe 01       	movw	r30, r28
    2b48:	e1 5a       	subi	r30, 0xA1	; 161
    2b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b4c:	60 81       	ld	r22, Z
    2b4e:	71 81       	ldd	r23, Z+1	; 0x01
    2b50:	82 81       	ldd	r24, Z+2	; 0x02
    2b52:	93 81       	ldd	r25, Z+3	; 0x03
    2b54:	20 e0       	ldi	r18, 0x00	; 0
    2b56:	30 e0       	ldi	r19, 0x00	; 0
    2b58:	4a ef       	ldi	r20, 0xFA	; 250
    2b5a:	54 e4       	ldi	r21, 0x44	; 68
    2b5c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b60:	dc 01       	movw	r26, r24
    2b62:	cb 01       	movw	r24, r22
    2b64:	f8 01       	movw	r30, r16
    2b66:	80 83       	st	Z, r24
    2b68:	91 83       	std	Z+1, r25	; 0x01
    2b6a:	a2 83       	std	Z+2, r26	; 0x02
    2b6c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b6e:	fe 01       	movw	r30, r28
    2b70:	e5 5a       	subi	r30, 0xA5	; 165
    2b72:	ff 4f       	sbci	r31, 0xFF	; 255
    2b74:	60 81       	ld	r22, Z
    2b76:	71 81       	ldd	r23, Z+1	; 0x01
    2b78:	82 81       	ldd	r24, Z+2	; 0x02
    2b7a:	93 81       	ldd	r25, Z+3	; 0x03
    2b7c:	20 e0       	ldi	r18, 0x00	; 0
    2b7e:	30 e0       	ldi	r19, 0x00	; 0
    2b80:	40 e8       	ldi	r20, 0x80	; 128
    2b82:	5f e3       	ldi	r21, 0x3F	; 63
    2b84:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2b88:	88 23       	and	r24, r24
    2b8a:	44 f4       	brge	.+16     	; 0x2b9c <main+0xd7c>
		__ticks = 1;
    2b8c:	fe 01       	movw	r30, r28
    2b8e:	e7 5a       	subi	r30, 0xA7	; 167
    2b90:	ff 4f       	sbci	r31, 0xFF	; 255
    2b92:	81 e0       	ldi	r24, 0x01	; 1
    2b94:	90 e0       	ldi	r25, 0x00	; 0
    2b96:	91 83       	std	Z+1, r25	; 0x01
    2b98:	80 83       	st	Z, r24
    2b9a:	64 c0       	rjmp	.+200    	; 0x2c64 <main+0xe44>
	else if (__tmp > 65535)
    2b9c:	fe 01       	movw	r30, r28
    2b9e:	e5 5a       	subi	r30, 0xA5	; 165
    2ba0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba2:	60 81       	ld	r22, Z
    2ba4:	71 81       	ldd	r23, Z+1	; 0x01
    2ba6:	82 81       	ldd	r24, Z+2	; 0x02
    2ba8:	93 81       	ldd	r25, Z+3	; 0x03
    2baa:	20 e0       	ldi	r18, 0x00	; 0
    2bac:	3f ef       	ldi	r19, 0xFF	; 255
    2bae:	4f e7       	ldi	r20, 0x7F	; 127
    2bb0:	57 e4       	ldi	r21, 0x47	; 71
    2bb2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2bb6:	18 16       	cp	r1, r24
    2bb8:	0c f0       	brlt	.+2      	; 0x2bbc <main+0xd9c>
    2bba:	43 c0       	rjmp	.+134    	; 0x2c42 <main+0xe22>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bbc:	fe 01       	movw	r30, r28
    2bbe:	e1 5a       	subi	r30, 0xA1	; 161
    2bc0:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc2:	60 81       	ld	r22, Z
    2bc4:	71 81       	ldd	r23, Z+1	; 0x01
    2bc6:	82 81       	ldd	r24, Z+2	; 0x02
    2bc8:	93 81       	ldd	r25, Z+3	; 0x03
    2bca:	20 e0       	ldi	r18, 0x00	; 0
    2bcc:	30 e0       	ldi	r19, 0x00	; 0
    2bce:	40 e2       	ldi	r20, 0x20	; 32
    2bd0:	51 e4       	ldi	r21, 0x41	; 65
    2bd2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bd6:	dc 01       	movw	r26, r24
    2bd8:	cb 01       	movw	r24, r22
    2bda:	8e 01       	movw	r16, r28
    2bdc:	07 5a       	subi	r16, 0xA7	; 167
    2bde:	1f 4f       	sbci	r17, 0xFF	; 255
    2be0:	bc 01       	movw	r22, r24
    2be2:	cd 01       	movw	r24, r26
    2be4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2be8:	dc 01       	movw	r26, r24
    2bea:	cb 01       	movw	r24, r22
    2bec:	f8 01       	movw	r30, r16
    2bee:	91 83       	std	Z+1, r25	; 0x01
    2bf0:	80 83       	st	Z, r24
    2bf2:	1f c0       	rjmp	.+62     	; 0x2c32 <main+0xe12>
    2bf4:	fe 01       	movw	r30, r28
    2bf6:	e9 5a       	subi	r30, 0xA9	; 169
    2bf8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bfa:	88 ec       	ldi	r24, 0xC8	; 200
    2bfc:	90 e0       	ldi	r25, 0x00	; 0
    2bfe:	91 83       	std	Z+1, r25	; 0x01
    2c00:	80 83       	st	Z, r24
    2c02:	fe 01       	movw	r30, r28
    2c04:	e9 5a       	subi	r30, 0xA9	; 169
    2c06:	ff 4f       	sbci	r31, 0xFF	; 255
    2c08:	80 81       	ld	r24, Z
    2c0a:	91 81       	ldd	r25, Z+1	; 0x01
    2c0c:	01 97       	sbiw	r24, 0x01	; 1
    2c0e:	f1 f7       	brne	.-4      	; 0x2c0c <main+0xdec>
    2c10:	fe 01       	movw	r30, r28
    2c12:	e9 5a       	subi	r30, 0xA9	; 169
    2c14:	ff 4f       	sbci	r31, 0xFF	; 255
    2c16:	91 83       	std	Z+1, r25	; 0x01
    2c18:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c1a:	de 01       	movw	r26, r28
    2c1c:	a7 5a       	subi	r26, 0xA7	; 167
    2c1e:	bf 4f       	sbci	r27, 0xFF	; 255
    2c20:	fe 01       	movw	r30, r28
    2c22:	e7 5a       	subi	r30, 0xA7	; 167
    2c24:	ff 4f       	sbci	r31, 0xFF	; 255
    2c26:	80 81       	ld	r24, Z
    2c28:	91 81       	ldd	r25, Z+1	; 0x01
    2c2a:	01 97       	sbiw	r24, 0x01	; 1
    2c2c:	11 96       	adiw	r26, 0x01	; 1
    2c2e:	9c 93       	st	X, r25
    2c30:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c32:	fe 01       	movw	r30, r28
    2c34:	e7 5a       	subi	r30, 0xA7	; 167
    2c36:	ff 4f       	sbci	r31, 0xFF	; 255
    2c38:	80 81       	ld	r24, Z
    2c3a:	91 81       	ldd	r25, Z+1	; 0x01
    2c3c:	00 97       	sbiw	r24, 0x00	; 0
    2c3e:	d1 f6       	brne	.-76     	; 0x2bf4 <main+0xdd4>
    2c40:	27 c0       	rjmp	.+78     	; 0x2c90 <main+0xe70>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c42:	8e 01       	movw	r16, r28
    2c44:	07 5a       	subi	r16, 0xA7	; 167
    2c46:	1f 4f       	sbci	r17, 0xFF	; 255
    2c48:	fe 01       	movw	r30, r28
    2c4a:	e5 5a       	subi	r30, 0xA5	; 165
    2c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4e:	60 81       	ld	r22, Z
    2c50:	71 81       	ldd	r23, Z+1	; 0x01
    2c52:	82 81       	ldd	r24, Z+2	; 0x02
    2c54:	93 81       	ldd	r25, Z+3	; 0x03
    2c56:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c5a:	dc 01       	movw	r26, r24
    2c5c:	cb 01       	movw	r24, r22
    2c5e:	f8 01       	movw	r30, r16
    2c60:	91 83       	std	Z+1, r25	; 0x01
    2c62:	80 83       	st	Z, r24
    2c64:	de 01       	movw	r26, r28
    2c66:	ab 5a       	subi	r26, 0xAB	; 171
    2c68:	bf 4f       	sbci	r27, 0xFF	; 255
    2c6a:	fe 01       	movw	r30, r28
    2c6c:	e7 5a       	subi	r30, 0xA7	; 167
    2c6e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c70:	80 81       	ld	r24, Z
    2c72:	91 81       	ldd	r25, Z+1	; 0x01
    2c74:	8d 93       	st	X+, r24
    2c76:	9c 93       	st	X, r25
    2c78:	fe 01       	movw	r30, r28
    2c7a:	eb 5a       	subi	r30, 0xAB	; 171
    2c7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7e:	80 81       	ld	r24, Z
    2c80:	91 81       	ldd	r25, Z+1	; 0x01
    2c82:	01 97       	sbiw	r24, 0x01	; 1
    2c84:	f1 f7       	brne	.-4      	; 0x2c82 <main+0xe62>
    2c86:	fe 01       	movw	r30, r28
    2c88:	eb 5a       	subi	r30, 0xAB	; 171
    2c8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8c:	91 83       	std	Z+1, r25	; 0x01
    2c8e:	80 83       	st	Z, r24

	LCD_DISPLAY_STRING("IT CAN RUN");
	_delay_ms(450);
	LCD_CLEAR();

	for (u8 pos = 0; pos < 16; pos++) {
    2c90:	de 01       	movw	r26, r28
    2c92:	a0 58       	subi	r26, 0x80	; 128
    2c94:	bf 4f       	sbci	r27, 0xFF	; 255
    2c96:	fe 01       	movw	r30, r28
    2c98:	e0 58       	subi	r30, 0x80	; 128
    2c9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c9c:	80 81       	ld	r24, Z
    2c9e:	8f 5f       	subi	r24, 0xFF	; 255
    2ca0:	8c 93       	st	X, r24
    2ca2:	fe 01       	movw	r30, r28
    2ca4:	e0 58       	subi	r30, 0x80	; 128
    2ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca8:	80 81       	ld	r24, Z
    2caa:	80 31       	cpi	r24, 0x10	; 16
    2cac:	08 f4       	brcc	.+2      	; 0x2cb0 <main+0xe90>
    2cae:	04 cf       	rjmp	.-504    	; 0x2ab8 <main+0xc98>
			LCD_CUSTUM_CHAR(person2_frame2, 1, pos, 1);
		}
		_delay_ms(150);
	}

	LCD_CLEAR();
    2cb0:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <LCD_CLEAR>
	LCD_DISPLAY_STRING("IT CAN PLAY ");
    2cb4:	8b e6       	ldi	r24, 0x6B	; 107
    2cb6:	90 e0       	ldi	r25, 0x00	; 0
    2cb8:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <LCD_DISPLAY_STRING>
	LCD_GOTO_XY(LINE2,0);
    2cbc:	81 e0       	ldi	r24, 0x01	; 1
    2cbe:	60 e0       	ldi	r22, 0x00	; 0
    2cc0:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <LCD_GOTO_XY>
	LCD_DISPLAY_STRING("FOOTBALL");
    2cc4:	88 e7       	ldi	r24, 0x78	; 120
    2cc6:	90 e0       	ldi	r25, 0x00	; 0
    2cc8:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <LCD_DISPLAY_STRING>
    2ccc:	fe 01       	movw	r30, r28
    2cce:	ef 5a       	subi	r30, 0xAF	; 175
    2cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd2:	80 e0       	ldi	r24, 0x00	; 0
    2cd4:	90 e0       	ldi	r25, 0x00	; 0
    2cd6:	a1 ee       	ldi	r26, 0xE1	; 225
    2cd8:	b3 e4       	ldi	r27, 0x43	; 67
    2cda:	80 83       	st	Z, r24
    2cdc:	91 83       	std	Z+1, r25	; 0x01
    2cde:	a2 83       	std	Z+2, r26	; 0x02
    2ce0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ce2:	8e 01       	movw	r16, r28
    2ce4:	03 5b       	subi	r16, 0xB3	; 179
    2ce6:	1f 4f       	sbci	r17, 0xFF	; 255
    2ce8:	fe 01       	movw	r30, r28
    2cea:	ef 5a       	subi	r30, 0xAF	; 175
    2cec:	ff 4f       	sbci	r31, 0xFF	; 255
    2cee:	60 81       	ld	r22, Z
    2cf0:	71 81       	ldd	r23, Z+1	; 0x01
    2cf2:	82 81       	ldd	r24, Z+2	; 0x02
    2cf4:	93 81       	ldd	r25, Z+3	; 0x03
    2cf6:	20 e0       	ldi	r18, 0x00	; 0
    2cf8:	30 e0       	ldi	r19, 0x00	; 0
    2cfa:	4a ef       	ldi	r20, 0xFA	; 250
    2cfc:	54 e4       	ldi	r21, 0x44	; 68
    2cfe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d02:	dc 01       	movw	r26, r24
    2d04:	cb 01       	movw	r24, r22
    2d06:	f8 01       	movw	r30, r16
    2d08:	80 83       	st	Z, r24
    2d0a:	91 83       	std	Z+1, r25	; 0x01
    2d0c:	a2 83       	std	Z+2, r26	; 0x02
    2d0e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d10:	fe 01       	movw	r30, r28
    2d12:	e3 5b       	subi	r30, 0xB3	; 179
    2d14:	ff 4f       	sbci	r31, 0xFF	; 255
    2d16:	60 81       	ld	r22, Z
    2d18:	71 81       	ldd	r23, Z+1	; 0x01
    2d1a:	82 81       	ldd	r24, Z+2	; 0x02
    2d1c:	93 81       	ldd	r25, Z+3	; 0x03
    2d1e:	20 e0       	ldi	r18, 0x00	; 0
    2d20:	30 e0       	ldi	r19, 0x00	; 0
    2d22:	40 e8       	ldi	r20, 0x80	; 128
    2d24:	5f e3       	ldi	r21, 0x3F	; 63
    2d26:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2d2a:	88 23       	and	r24, r24
    2d2c:	44 f4       	brge	.+16     	; 0x2d3e <main+0xf1e>
		__ticks = 1;
    2d2e:	fe 01       	movw	r30, r28
    2d30:	e5 5b       	subi	r30, 0xB5	; 181
    2d32:	ff 4f       	sbci	r31, 0xFF	; 255
    2d34:	81 e0       	ldi	r24, 0x01	; 1
    2d36:	90 e0       	ldi	r25, 0x00	; 0
    2d38:	91 83       	std	Z+1, r25	; 0x01
    2d3a:	80 83       	st	Z, r24
    2d3c:	64 c0       	rjmp	.+200    	; 0x2e06 <main+0xfe6>
	else if (__tmp > 65535)
    2d3e:	fe 01       	movw	r30, r28
    2d40:	e3 5b       	subi	r30, 0xB3	; 179
    2d42:	ff 4f       	sbci	r31, 0xFF	; 255
    2d44:	60 81       	ld	r22, Z
    2d46:	71 81       	ldd	r23, Z+1	; 0x01
    2d48:	82 81       	ldd	r24, Z+2	; 0x02
    2d4a:	93 81       	ldd	r25, Z+3	; 0x03
    2d4c:	20 e0       	ldi	r18, 0x00	; 0
    2d4e:	3f ef       	ldi	r19, 0xFF	; 255
    2d50:	4f e7       	ldi	r20, 0x7F	; 127
    2d52:	57 e4       	ldi	r21, 0x47	; 71
    2d54:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2d58:	18 16       	cp	r1, r24
    2d5a:	0c f0       	brlt	.+2      	; 0x2d5e <main+0xf3e>
    2d5c:	43 c0       	rjmp	.+134    	; 0x2de4 <main+0xfc4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d5e:	fe 01       	movw	r30, r28
    2d60:	ef 5a       	subi	r30, 0xAF	; 175
    2d62:	ff 4f       	sbci	r31, 0xFF	; 255
    2d64:	60 81       	ld	r22, Z
    2d66:	71 81       	ldd	r23, Z+1	; 0x01
    2d68:	82 81       	ldd	r24, Z+2	; 0x02
    2d6a:	93 81       	ldd	r25, Z+3	; 0x03
    2d6c:	20 e0       	ldi	r18, 0x00	; 0
    2d6e:	30 e0       	ldi	r19, 0x00	; 0
    2d70:	40 e2       	ldi	r20, 0x20	; 32
    2d72:	51 e4       	ldi	r21, 0x41	; 65
    2d74:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d78:	dc 01       	movw	r26, r24
    2d7a:	cb 01       	movw	r24, r22
    2d7c:	8e 01       	movw	r16, r28
    2d7e:	05 5b       	subi	r16, 0xB5	; 181
    2d80:	1f 4f       	sbci	r17, 0xFF	; 255
    2d82:	bc 01       	movw	r22, r24
    2d84:	cd 01       	movw	r24, r26
    2d86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d8a:	dc 01       	movw	r26, r24
    2d8c:	cb 01       	movw	r24, r22
    2d8e:	f8 01       	movw	r30, r16
    2d90:	91 83       	std	Z+1, r25	; 0x01
    2d92:	80 83       	st	Z, r24
    2d94:	1f c0       	rjmp	.+62     	; 0x2dd4 <main+0xfb4>
    2d96:	fe 01       	movw	r30, r28
    2d98:	e7 5b       	subi	r30, 0xB7	; 183
    2d9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d9c:	88 ec       	ldi	r24, 0xC8	; 200
    2d9e:	90 e0       	ldi	r25, 0x00	; 0
    2da0:	91 83       	std	Z+1, r25	; 0x01
    2da2:	80 83       	st	Z, r24
    2da4:	fe 01       	movw	r30, r28
    2da6:	e7 5b       	subi	r30, 0xB7	; 183
    2da8:	ff 4f       	sbci	r31, 0xFF	; 255
    2daa:	80 81       	ld	r24, Z
    2dac:	91 81       	ldd	r25, Z+1	; 0x01
    2dae:	01 97       	sbiw	r24, 0x01	; 1
    2db0:	f1 f7       	brne	.-4      	; 0x2dae <main+0xf8e>
    2db2:	fe 01       	movw	r30, r28
    2db4:	e7 5b       	subi	r30, 0xB7	; 183
    2db6:	ff 4f       	sbci	r31, 0xFF	; 255
    2db8:	91 83       	std	Z+1, r25	; 0x01
    2dba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dbc:	de 01       	movw	r26, r28
    2dbe:	a5 5b       	subi	r26, 0xB5	; 181
    2dc0:	bf 4f       	sbci	r27, 0xFF	; 255
    2dc2:	fe 01       	movw	r30, r28
    2dc4:	e5 5b       	subi	r30, 0xB5	; 181
    2dc6:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc8:	80 81       	ld	r24, Z
    2dca:	91 81       	ldd	r25, Z+1	; 0x01
    2dcc:	01 97       	sbiw	r24, 0x01	; 1
    2dce:	11 96       	adiw	r26, 0x01	; 1
    2dd0:	9c 93       	st	X, r25
    2dd2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dd4:	fe 01       	movw	r30, r28
    2dd6:	e5 5b       	subi	r30, 0xB5	; 181
    2dd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dda:	80 81       	ld	r24, Z
    2ddc:	91 81       	ldd	r25, Z+1	; 0x01
    2dde:	00 97       	sbiw	r24, 0x00	; 0
    2de0:	d1 f6       	brne	.-76     	; 0x2d96 <main+0xf76>
    2de2:	27 c0       	rjmp	.+78     	; 0x2e32 <main+0x1012>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2de4:	8e 01       	movw	r16, r28
    2de6:	05 5b       	subi	r16, 0xB5	; 181
    2de8:	1f 4f       	sbci	r17, 0xFF	; 255
    2dea:	fe 01       	movw	r30, r28
    2dec:	e3 5b       	subi	r30, 0xB3	; 179
    2dee:	ff 4f       	sbci	r31, 0xFF	; 255
    2df0:	60 81       	ld	r22, Z
    2df2:	71 81       	ldd	r23, Z+1	; 0x01
    2df4:	82 81       	ldd	r24, Z+2	; 0x02
    2df6:	93 81       	ldd	r25, Z+3	; 0x03
    2df8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2dfc:	dc 01       	movw	r26, r24
    2dfe:	cb 01       	movw	r24, r22
    2e00:	f8 01       	movw	r30, r16
    2e02:	91 83       	std	Z+1, r25	; 0x01
    2e04:	80 83       	st	Z, r24
    2e06:	de 01       	movw	r26, r28
    2e08:	a9 5b       	subi	r26, 0xB9	; 185
    2e0a:	bf 4f       	sbci	r27, 0xFF	; 255
    2e0c:	fe 01       	movw	r30, r28
    2e0e:	e5 5b       	subi	r30, 0xB5	; 181
    2e10:	ff 4f       	sbci	r31, 0xFF	; 255
    2e12:	80 81       	ld	r24, Z
    2e14:	91 81       	ldd	r25, Z+1	; 0x01
    2e16:	8d 93       	st	X+, r24
    2e18:	9c 93       	st	X, r25
    2e1a:	fe 01       	movw	r30, r28
    2e1c:	e9 5b       	subi	r30, 0xB9	; 185
    2e1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e20:	80 81       	ld	r24, Z
    2e22:	91 81       	ldd	r25, Z+1	; 0x01
    2e24:	01 97       	sbiw	r24, 0x01	; 1
    2e26:	f1 f7       	brne	.-4      	; 0x2e24 <main+0x1004>
    2e28:	fe 01       	movw	r30, r28
    2e2a:	e9 5b       	subi	r30, 0xB9	; 185
    2e2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e2e:	91 83       	std	Z+1, r25	; 0x01
    2e30:	80 83       	st	Z, r24
	_delay_ms(450);
	LCD_CLEAR();
    2e32:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <LCD_CLEAR>
	for (u8 pos = 0; pos < 16; pos++) {
    2e36:	fe 01       	movw	r30, r28
    2e38:	e1 58       	subi	r30, 0x81	; 129
    2e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3c:	10 82       	st	Z, r1
    2e3e:	e3 c0       	rjmp	.+454    	; 0x3006 <main+0x11e6>
		LCD_CLEAR();
    2e40:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <LCD_CLEAR>
		if (pos % 2 == 0) {
    2e44:	fe 01       	movw	r30, r28
    2e46:	e1 58       	subi	r30, 0x81	; 129
    2e48:	ff 4f       	sbci	r31, 0xFF	; 255
    2e4a:	80 81       	ld	r24, Z
    2e4c:	88 2f       	mov	r24, r24
    2e4e:	90 e0       	ldi	r25, 0x00	; 0
    2e50:	81 70       	andi	r24, 0x01	; 1
    2e52:	90 70       	andi	r25, 0x00	; 0
    2e54:	00 97       	sbiw	r24, 0x00	; 0
    2e56:	29 f5       	brne	.+74     	; 0x2ea2 <main+0x1082>
			LCD_CUSTUM_CHAR(person1_frame1, 0, pos, 0);
    2e58:	ce 01       	movw	r24, r28
    2e5a:	8d 54       	subi	r24, 0x4D	; 77
    2e5c:	9f 4f       	sbci	r25, 0xFF	; 255
    2e5e:	fe 01       	movw	r30, r28
    2e60:	e1 58       	subi	r30, 0x81	; 129
    2e62:	ff 4f       	sbci	r31, 0xFF	; 255
    2e64:	60 e0       	ldi	r22, 0x00	; 0
    2e66:	40 81       	ld	r20, Z
    2e68:	20 e0       	ldi	r18, 0x00	; 0
    2e6a:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
			LCD_CUSTUM_CHAR(person2_frame1, 1, pos, 1);
    2e6e:	ce 01       	movw	r24, r28
    2e70:	85 53       	subi	r24, 0x35	; 53
    2e72:	9f 4f       	sbci	r25, 0xFF	; 255
    2e74:	fe 01       	movw	r30, r28
    2e76:	e1 58       	subi	r30, 0x81	; 129
    2e78:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7a:	61 e0       	ldi	r22, 0x01	; 1
    2e7c:	40 81       	ld	r20, Z
    2e7e:	21 e0       	ldi	r18, 0x01	; 1
    2e80:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
			LCD_CUSTUM_CHAR(ball, 2, pos+1, 1);
    2e84:	fe 01       	movw	r30, r28
    2e86:	e1 58       	subi	r30, 0x81	; 129
    2e88:	ff 4f       	sbci	r31, 0xFF	; 255
    2e8a:	80 81       	ld	r24, Z
    2e8c:	28 2f       	mov	r18, r24
    2e8e:	2f 5f       	subi	r18, 0xFF	; 255
    2e90:	ce 01       	movw	r24, r28
    2e92:	85 51       	subi	r24, 0x15	; 21
    2e94:	9f 4f       	sbci	r25, 0xFF	; 255
    2e96:	62 e0       	ldi	r22, 0x02	; 2
    2e98:	42 2f       	mov	r20, r18
    2e9a:	21 e0       	ldi	r18, 0x01	; 1
    2e9c:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
    2ea0:	24 c0       	rjmp	.+72     	; 0x2eea <main+0x10ca>

		} else {
			LCD_CUSTUM_CHAR(person1_frame2, 0, pos, 0);
    2ea2:	ce 01       	movw	r24, r28
    2ea4:	85 54       	subi	r24, 0x45	; 69
    2ea6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ea8:	fe 01       	movw	r30, r28
    2eaa:	e1 58       	subi	r30, 0x81	; 129
    2eac:	ff 4f       	sbci	r31, 0xFF	; 255
    2eae:	60 e0       	ldi	r22, 0x00	; 0
    2eb0:	40 81       	ld	r20, Z
    2eb2:	20 e0       	ldi	r18, 0x00	; 0
    2eb4:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
			LCD_CUSTUM_CHAR(person2_frame2, 1, pos, 1);
    2eb8:	ce 01       	movw	r24, r28
    2eba:	8d 52       	subi	r24, 0x2D	; 45
    2ebc:	9f 4f       	sbci	r25, 0xFF	; 255
    2ebe:	fe 01       	movw	r30, r28
    2ec0:	e1 58       	subi	r30, 0x81	; 129
    2ec2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec4:	61 e0       	ldi	r22, 0x01	; 1
    2ec6:	40 81       	ld	r20, Z
    2ec8:	21 e0       	ldi	r18, 0x01	; 1
    2eca:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
			LCD_CUSTUM_CHAR(ball, 2, pos+1, 1);
    2ece:	fe 01       	movw	r30, r28
    2ed0:	e1 58       	subi	r30, 0x81	; 129
    2ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed4:	80 81       	ld	r24, Z
    2ed6:	28 2f       	mov	r18, r24
    2ed8:	2f 5f       	subi	r18, 0xFF	; 255
    2eda:	ce 01       	movw	r24, r28
    2edc:	85 51       	subi	r24, 0x15	; 21
    2ede:	9f 4f       	sbci	r25, 0xFF	; 255
    2ee0:	62 e0       	ldi	r22, 0x02	; 2
    2ee2:	42 2f       	mov	r20, r18
    2ee4:	21 e0       	ldi	r18, 0x01	; 1
    2ee6:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
    2eea:	fe 01       	movw	r30, r28
    2eec:	ed 5b       	subi	r30, 0xBD	; 189
    2eee:	ff 4f       	sbci	r31, 0xFF	; 255
    2ef0:	80 e0       	ldi	r24, 0x00	; 0
    2ef2:	90 e0       	ldi	r25, 0x00	; 0
    2ef4:	a6 e1       	ldi	r26, 0x16	; 22
    2ef6:	b3 e4       	ldi	r27, 0x43	; 67
    2ef8:	80 83       	st	Z, r24
    2efa:	91 83       	std	Z+1, r25	; 0x01
    2efc:	a2 83       	std	Z+2, r26	; 0x02
    2efe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f00:	8e 01       	movw	r16, r28
    2f02:	01 5c       	subi	r16, 0xC1	; 193
    2f04:	1f 4f       	sbci	r17, 0xFF	; 255
    2f06:	fe 01       	movw	r30, r28
    2f08:	ed 5b       	subi	r30, 0xBD	; 189
    2f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0c:	60 81       	ld	r22, Z
    2f0e:	71 81       	ldd	r23, Z+1	; 0x01
    2f10:	82 81       	ldd	r24, Z+2	; 0x02
    2f12:	93 81       	ldd	r25, Z+3	; 0x03
    2f14:	20 e0       	ldi	r18, 0x00	; 0
    2f16:	30 e0       	ldi	r19, 0x00	; 0
    2f18:	4a ef       	ldi	r20, 0xFA	; 250
    2f1a:	54 e4       	ldi	r21, 0x44	; 68
    2f1c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f20:	dc 01       	movw	r26, r24
    2f22:	cb 01       	movw	r24, r22
    2f24:	f8 01       	movw	r30, r16
    2f26:	80 83       	st	Z, r24
    2f28:	91 83       	std	Z+1, r25	; 0x01
    2f2a:	a2 83       	std	Z+2, r26	; 0x02
    2f2c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f2e:	fe 01       	movw	r30, r28
    2f30:	ff 96       	adiw	r30, 0x3f	; 63
    2f32:	60 81       	ld	r22, Z
    2f34:	71 81       	ldd	r23, Z+1	; 0x01
    2f36:	82 81       	ldd	r24, Z+2	; 0x02
    2f38:	93 81       	ldd	r25, Z+3	; 0x03
    2f3a:	20 e0       	ldi	r18, 0x00	; 0
    2f3c:	30 e0       	ldi	r19, 0x00	; 0
    2f3e:	40 e8       	ldi	r20, 0x80	; 128
    2f40:	5f e3       	ldi	r21, 0x3F	; 63
    2f42:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2f46:	88 23       	and	r24, r24
    2f48:	2c f4       	brge	.+10     	; 0x2f54 <main+0x1134>
		__ticks = 1;
    2f4a:	81 e0       	ldi	r24, 0x01	; 1
    2f4c:	90 e0       	ldi	r25, 0x00	; 0
    2f4e:	9e af       	std	Y+62, r25	; 0x3e
    2f50:	8d af       	std	Y+61, r24	; 0x3d
    2f52:	46 c0       	rjmp	.+140    	; 0x2fe0 <main+0x11c0>
	else if (__tmp > 65535)
    2f54:	fe 01       	movw	r30, r28
    2f56:	ff 96       	adiw	r30, 0x3f	; 63
    2f58:	60 81       	ld	r22, Z
    2f5a:	71 81       	ldd	r23, Z+1	; 0x01
    2f5c:	82 81       	ldd	r24, Z+2	; 0x02
    2f5e:	93 81       	ldd	r25, Z+3	; 0x03
    2f60:	20 e0       	ldi	r18, 0x00	; 0
    2f62:	3f ef       	ldi	r19, 0xFF	; 255
    2f64:	4f e7       	ldi	r20, 0x7F	; 127
    2f66:	57 e4       	ldi	r21, 0x47	; 71
    2f68:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2f6c:	18 16       	cp	r1, r24
    2f6e:	64 f5       	brge	.+88     	; 0x2fc8 <main+0x11a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f70:	fe 01       	movw	r30, r28
    2f72:	ed 5b       	subi	r30, 0xBD	; 189
    2f74:	ff 4f       	sbci	r31, 0xFF	; 255
    2f76:	60 81       	ld	r22, Z
    2f78:	71 81       	ldd	r23, Z+1	; 0x01
    2f7a:	82 81       	ldd	r24, Z+2	; 0x02
    2f7c:	93 81       	ldd	r25, Z+3	; 0x03
    2f7e:	20 e0       	ldi	r18, 0x00	; 0
    2f80:	30 e0       	ldi	r19, 0x00	; 0
    2f82:	40 e2       	ldi	r20, 0x20	; 32
    2f84:	51 e4       	ldi	r21, 0x41	; 65
    2f86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f8a:	dc 01       	movw	r26, r24
    2f8c:	cb 01       	movw	r24, r22
    2f8e:	bc 01       	movw	r22, r24
    2f90:	cd 01       	movw	r24, r26
    2f92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f96:	dc 01       	movw	r26, r24
    2f98:	cb 01       	movw	r24, r22
    2f9a:	9e af       	std	Y+62, r25	; 0x3e
    2f9c:	8d af       	std	Y+61, r24	; 0x3d
    2f9e:	0f c0       	rjmp	.+30     	; 0x2fbe <main+0x119e>
    2fa0:	88 ec       	ldi	r24, 0xC8	; 200
    2fa2:	90 e0       	ldi	r25, 0x00	; 0
    2fa4:	9c af       	std	Y+60, r25	; 0x3c
    2fa6:	8b af       	std	Y+59, r24	; 0x3b
    2fa8:	8b ad       	ldd	r24, Y+59	; 0x3b
    2faa:	9c ad       	ldd	r25, Y+60	; 0x3c
    2fac:	01 97       	sbiw	r24, 0x01	; 1
    2fae:	f1 f7       	brne	.-4      	; 0x2fac <main+0x118c>
    2fb0:	9c af       	std	Y+60, r25	; 0x3c
    2fb2:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fb4:	8d ad       	ldd	r24, Y+61	; 0x3d
    2fb6:	9e ad       	ldd	r25, Y+62	; 0x3e
    2fb8:	01 97       	sbiw	r24, 0x01	; 1
    2fba:	9e af       	std	Y+62, r25	; 0x3e
    2fbc:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fbe:	8d ad       	ldd	r24, Y+61	; 0x3d
    2fc0:	9e ad       	ldd	r25, Y+62	; 0x3e
    2fc2:	00 97       	sbiw	r24, 0x00	; 0
    2fc4:	69 f7       	brne	.-38     	; 0x2fa0 <main+0x1180>
    2fc6:	16 c0       	rjmp	.+44     	; 0x2ff4 <main+0x11d4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fc8:	fe 01       	movw	r30, r28
    2fca:	ff 96       	adiw	r30, 0x3f	; 63
    2fcc:	60 81       	ld	r22, Z
    2fce:	71 81       	ldd	r23, Z+1	; 0x01
    2fd0:	82 81       	ldd	r24, Z+2	; 0x02
    2fd2:	93 81       	ldd	r25, Z+3	; 0x03
    2fd4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fd8:	dc 01       	movw	r26, r24
    2fda:	cb 01       	movw	r24, r22
    2fdc:	9e af       	std	Y+62, r25	; 0x3e
    2fde:	8d af       	std	Y+61, r24	; 0x3d
    2fe0:	8d ad       	ldd	r24, Y+61	; 0x3d
    2fe2:	9e ad       	ldd	r25, Y+62	; 0x3e
    2fe4:	9a af       	std	Y+58, r25	; 0x3a
    2fe6:	89 af       	std	Y+57, r24	; 0x39
    2fe8:	89 ad       	ldd	r24, Y+57	; 0x39
    2fea:	9a ad       	ldd	r25, Y+58	; 0x3a
    2fec:	01 97       	sbiw	r24, 0x01	; 1
    2fee:	f1 f7       	brne	.-4      	; 0x2fec <main+0x11cc>
    2ff0:	9a af       	std	Y+58, r25	; 0x3a
    2ff2:	89 af       	std	Y+57, r24	; 0x39
	LCD_DISPLAY_STRING("IT CAN PLAY ");
	LCD_GOTO_XY(LINE2,0);
	LCD_DISPLAY_STRING("FOOTBALL");
	_delay_ms(450);
	LCD_CLEAR();
	for (u8 pos = 0; pos < 16; pos++) {
    2ff4:	de 01       	movw	r26, r28
    2ff6:	a1 58       	subi	r26, 0x81	; 129
    2ff8:	bf 4f       	sbci	r27, 0xFF	; 255
    2ffa:	fe 01       	movw	r30, r28
    2ffc:	e1 58       	subi	r30, 0x81	; 129
    2ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    3000:	80 81       	ld	r24, Z
    3002:	8f 5f       	subi	r24, 0xFF	; 255
    3004:	8c 93       	st	X, r24
    3006:	fe 01       	movw	r30, r28
    3008:	e1 58       	subi	r30, 0x81	; 129
    300a:	ff 4f       	sbci	r31, 0xFF	; 255
    300c:	80 81       	ld	r24, Z
    300e:	80 31       	cpi	r24, 0x10	; 16
    3010:	08 f4       	brcc	.+2      	; 0x3014 <main+0x11f4>
    3012:	16 cf       	rjmp	.-468    	; 0x2e40 <main+0x1020>
			LCD_CUSTUM_CHAR(ball, 2, pos+1, 1);
		}
		_delay_ms(150);
	}

	LCD_CLEAR();
    3014:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <LCD_CLEAR>
	LCD_DISPLAY_STRING("IT CAN DANCE");
    3018:	81 e8       	ldi	r24, 0x81	; 129
    301a:	90 e0       	ldi	r25, 0x00	; 0
    301c:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <LCD_DISPLAY_STRING>
    3020:	80 e0       	ldi	r24, 0x00	; 0
    3022:	90 e0       	ldi	r25, 0x00	; 0
    3024:	a1 ee       	ldi	r26, 0xE1	; 225
    3026:	b3 e4       	ldi	r27, 0x43	; 67
    3028:	8d ab       	std	Y+53, r24	; 0x35
    302a:	9e ab       	std	Y+54, r25	; 0x36
    302c:	af ab       	std	Y+55, r26	; 0x37
    302e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3030:	6d a9       	ldd	r22, Y+53	; 0x35
    3032:	7e a9       	ldd	r23, Y+54	; 0x36
    3034:	8f a9       	ldd	r24, Y+55	; 0x37
    3036:	98 ad       	ldd	r25, Y+56	; 0x38
    3038:	20 e0       	ldi	r18, 0x00	; 0
    303a:	30 e0       	ldi	r19, 0x00	; 0
    303c:	4a ef       	ldi	r20, 0xFA	; 250
    303e:	54 e4       	ldi	r21, 0x44	; 68
    3040:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3044:	dc 01       	movw	r26, r24
    3046:	cb 01       	movw	r24, r22
    3048:	89 ab       	std	Y+49, r24	; 0x31
    304a:	9a ab       	std	Y+50, r25	; 0x32
    304c:	ab ab       	std	Y+51, r26	; 0x33
    304e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3050:	69 a9       	ldd	r22, Y+49	; 0x31
    3052:	7a a9       	ldd	r23, Y+50	; 0x32
    3054:	8b a9       	ldd	r24, Y+51	; 0x33
    3056:	9c a9       	ldd	r25, Y+52	; 0x34
    3058:	20 e0       	ldi	r18, 0x00	; 0
    305a:	30 e0       	ldi	r19, 0x00	; 0
    305c:	40 e8       	ldi	r20, 0x80	; 128
    305e:	5f e3       	ldi	r21, 0x3F	; 63
    3060:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3064:	88 23       	and	r24, r24
    3066:	2c f4       	brge	.+10     	; 0x3072 <main+0x1252>
		__ticks = 1;
    3068:	81 e0       	ldi	r24, 0x01	; 1
    306a:	90 e0       	ldi	r25, 0x00	; 0
    306c:	98 ab       	std	Y+48, r25	; 0x30
    306e:	8f a7       	std	Y+47, r24	; 0x2f
    3070:	3f c0       	rjmp	.+126    	; 0x30f0 <main+0x12d0>
	else if (__tmp > 65535)
    3072:	69 a9       	ldd	r22, Y+49	; 0x31
    3074:	7a a9       	ldd	r23, Y+50	; 0x32
    3076:	8b a9       	ldd	r24, Y+51	; 0x33
    3078:	9c a9       	ldd	r25, Y+52	; 0x34
    307a:	20 e0       	ldi	r18, 0x00	; 0
    307c:	3f ef       	ldi	r19, 0xFF	; 255
    307e:	4f e7       	ldi	r20, 0x7F	; 127
    3080:	57 e4       	ldi	r21, 0x47	; 71
    3082:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3086:	18 16       	cp	r1, r24
    3088:	4c f5       	brge	.+82     	; 0x30dc <main+0x12bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    308a:	6d a9       	ldd	r22, Y+53	; 0x35
    308c:	7e a9       	ldd	r23, Y+54	; 0x36
    308e:	8f a9       	ldd	r24, Y+55	; 0x37
    3090:	98 ad       	ldd	r25, Y+56	; 0x38
    3092:	20 e0       	ldi	r18, 0x00	; 0
    3094:	30 e0       	ldi	r19, 0x00	; 0
    3096:	40 e2       	ldi	r20, 0x20	; 32
    3098:	51 e4       	ldi	r21, 0x41	; 65
    309a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    309e:	dc 01       	movw	r26, r24
    30a0:	cb 01       	movw	r24, r22
    30a2:	bc 01       	movw	r22, r24
    30a4:	cd 01       	movw	r24, r26
    30a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30aa:	dc 01       	movw	r26, r24
    30ac:	cb 01       	movw	r24, r22
    30ae:	98 ab       	std	Y+48, r25	; 0x30
    30b0:	8f a7       	std	Y+47, r24	; 0x2f
    30b2:	0f c0       	rjmp	.+30     	; 0x30d2 <main+0x12b2>
    30b4:	88 ec       	ldi	r24, 0xC8	; 200
    30b6:	90 e0       	ldi	r25, 0x00	; 0
    30b8:	9e a7       	std	Y+46, r25	; 0x2e
    30ba:	8d a7       	std	Y+45, r24	; 0x2d
    30bc:	8d a5       	ldd	r24, Y+45	; 0x2d
    30be:	9e a5       	ldd	r25, Y+46	; 0x2e
    30c0:	01 97       	sbiw	r24, 0x01	; 1
    30c2:	f1 f7       	brne	.-4      	; 0x30c0 <main+0x12a0>
    30c4:	9e a7       	std	Y+46, r25	; 0x2e
    30c6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30c8:	8f a5       	ldd	r24, Y+47	; 0x2f
    30ca:	98 a9       	ldd	r25, Y+48	; 0x30
    30cc:	01 97       	sbiw	r24, 0x01	; 1
    30ce:	98 ab       	std	Y+48, r25	; 0x30
    30d0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30d2:	8f a5       	ldd	r24, Y+47	; 0x2f
    30d4:	98 a9       	ldd	r25, Y+48	; 0x30
    30d6:	00 97       	sbiw	r24, 0x00	; 0
    30d8:	69 f7       	brne	.-38     	; 0x30b4 <main+0x1294>
    30da:	14 c0       	rjmp	.+40     	; 0x3104 <main+0x12e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30dc:	69 a9       	ldd	r22, Y+49	; 0x31
    30de:	7a a9       	ldd	r23, Y+50	; 0x32
    30e0:	8b a9       	ldd	r24, Y+51	; 0x33
    30e2:	9c a9       	ldd	r25, Y+52	; 0x34
    30e4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30e8:	dc 01       	movw	r26, r24
    30ea:	cb 01       	movw	r24, r22
    30ec:	98 ab       	std	Y+48, r25	; 0x30
    30ee:	8f a7       	std	Y+47, r24	; 0x2f
    30f0:	8f a5       	ldd	r24, Y+47	; 0x2f
    30f2:	98 a9       	ldd	r25, Y+48	; 0x30
    30f4:	9c a7       	std	Y+44, r25	; 0x2c
    30f6:	8b a7       	std	Y+43, r24	; 0x2b
    30f8:	8b a5       	ldd	r24, Y+43	; 0x2b
    30fa:	9c a5       	ldd	r25, Y+44	; 0x2c
    30fc:	01 97       	sbiw	r24, 0x01	; 1
    30fe:	f1 f7       	brne	.-4      	; 0x30fc <main+0x12dc>
    3100:	9c a7       	std	Y+44, r25	; 0x2c
    3102:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(450);
	LCD_CLEAR();
    3104:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <LCD_CLEAR>
	while(1){
	LCD_CUSTUM_CHAR(person1_frame1, 0, 7, 0);
    3108:	ce 01       	movw	r24, r28
    310a:	8d 54       	subi	r24, 0x4D	; 77
    310c:	9f 4f       	sbci	r25, 0xFF	; 255
    310e:	60 e0       	ldi	r22, 0x00	; 0
    3110:	47 e0       	ldi	r20, 0x07	; 7
    3112:	20 e0       	ldi	r18, 0x00	; 0
    3114:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
	LCD_CUSTUM_CHAR(person2_frame1, 1,7, 1);
    3118:	ce 01       	movw	r24, r28
    311a:	85 53       	subi	r24, 0x35	; 53
    311c:	9f 4f       	sbci	r25, 0xFF	; 255
    311e:	61 e0       	ldi	r22, 0x01	; 1
    3120:	47 e0       	ldi	r20, 0x07	; 7
    3122:	21 e0       	ldi	r18, 0x01	; 1
    3124:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
    3128:	80 e0       	ldi	r24, 0x00	; 0
    312a:	90 e0       	ldi	r25, 0x00	; 0
    312c:	a6 e1       	ldi	r26, 0x16	; 22
    312e:	b3 e4       	ldi	r27, 0x43	; 67
    3130:	8f a3       	std	Y+39, r24	; 0x27
    3132:	98 a7       	std	Y+40, r25	; 0x28
    3134:	a9 a7       	std	Y+41, r26	; 0x29
    3136:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3138:	6f a1       	ldd	r22, Y+39	; 0x27
    313a:	78 a5       	ldd	r23, Y+40	; 0x28
    313c:	89 a5       	ldd	r24, Y+41	; 0x29
    313e:	9a a5       	ldd	r25, Y+42	; 0x2a
    3140:	20 e0       	ldi	r18, 0x00	; 0
    3142:	30 e0       	ldi	r19, 0x00	; 0
    3144:	4a ef       	ldi	r20, 0xFA	; 250
    3146:	54 e4       	ldi	r21, 0x44	; 68
    3148:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    314c:	dc 01       	movw	r26, r24
    314e:	cb 01       	movw	r24, r22
    3150:	8b a3       	std	Y+35, r24	; 0x23
    3152:	9c a3       	std	Y+36, r25	; 0x24
    3154:	ad a3       	std	Y+37, r26	; 0x25
    3156:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3158:	6b a1       	ldd	r22, Y+35	; 0x23
    315a:	7c a1       	ldd	r23, Y+36	; 0x24
    315c:	8d a1       	ldd	r24, Y+37	; 0x25
    315e:	9e a1       	ldd	r25, Y+38	; 0x26
    3160:	20 e0       	ldi	r18, 0x00	; 0
    3162:	30 e0       	ldi	r19, 0x00	; 0
    3164:	40 e8       	ldi	r20, 0x80	; 128
    3166:	5f e3       	ldi	r21, 0x3F	; 63
    3168:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    316c:	88 23       	and	r24, r24
    316e:	2c f4       	brge	.+10     	; 0x317a <main+0x135a>
		__ticks = 1;
    3170:	81 e0       	ldi	r24, 0x01	; 1
    3172:	90 e0       	ldi	r25, 0x00	; 0
    3174:	9a a3       	std	Y+34, r25	; 0x22
    3176:	89 a3       	std	Y+33, r24	; 0x21
    3178:	3f c0       	rjmp	.+126    	; 0x31f8 <main+0x13d8>
	else if (__tmp > 65535)
    317a:	6b a1       	ldd	r22, Y+35	; 0x23
    317c:	7c a1       	ldd	r23, Y+36	; 0x24
    317e:	8d a1       	ldd	r24, Y+37	; 0x25
    3180:	9e a1       	ldd	r25, Y+38	; 0x26
    3182:	20 e0       	ldi	r18, 0x00	; 0
    3184:	3f ef       	ldi	r19, 0xFF	; 255
    3186:	4f e7       	ldi	r20, 0x7F	; 127
    3188:	57 e4       	ldi	r21, 0x47	; 71
    318a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    318e:	18 16       	cp	r1, r24
    3190:	4c f5       	brge	.+82     	; 0x31e4 <main+0x13c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3192:	6f a1       	ldd	r22, Y+39	; 0x27
    3194:	78 a5       	ldd	r23, Y+40	; 0x28
    3196:	89 a5       	ldd	r24, Y+41	; 0x29
    3198:	9a a5       	ldd	r25, Y+42	; 0x2a
    319a:	20 e0       	ldi	r18, 0x00	; 0
    319c:	30 e0       	ldi	r19, 0x00	; 0
    319e:	40 e2       	ldi	r20, 0x20	; 32
    31a0:	51 e4       	ldi	r21, 0x41	; 65
    31a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31a6:	dc 01       	movw	r26, r24
    31a8:	cb 01       	movw	r24, r22
    31aa:	bc 01       	movw	r22, r24
    31ac:	cd 01       	movw	r24, r26
    31ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31b2:	dc 01       	movw	r26, r24
    31b4:	cb 01       	movw	r24, r22
    31b6:	9a a3       	std	Y+34, r25	; 0x22
    31b8:	89 a3       	std	Y+33, r24	; 0x21
    31ba:	0f c0       	rjmp	.+30     	; 0x31da <main+0x13ba>
    31bc:	88 ec       	ldi	r24, 0xC8	; 200
    31be:	90 e0       	ldi	r25, 0x00	; 0
    31c0:	98 a3       	std	Y+32, r25	; 0x20
    31c2:	8f 8f       	std	Y+31, r24	; 0x1f
    31c4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    31c6:	98 a1       	ldd	r25, Y+32	; 0x20
    31c8:	01 97       	sbiw	r24, 0x01	; 1
    31ca:	f1 f7       	brne	.-4      	; 0x31c8 <main+0x13a8>
    31cc:	98 a3       	std	Y+32, r25	; 0x20
    31ce:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31d0:	89 a1       	ldd	r24, Y+33	; 0x21
    31d2:	9a a1       	ldd	r25, Y+34	; 0x22
    31d4:	01 97       	sbiw	r24, 0x01	; 1
    31d6:	9a a3       	std	Y+34, r25	; 0x22
    31d8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31da:	89 a1       	ldd	r24, Y+33	; 0x21
    31dc:	9a a1       	ldd	r25, Y+34	; 0x22
    31de:	00 97       	sbiw	r24, 0x00	; 0
    31e0:	69 f7       	brne	.-38     	; 0x31bc <main+0x139c>
    31e2:	14 c0       	rjmp	.+40     	; 0x320c <main+0x13ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31e4:	6b a1       	ldd	r22, Y+35	; 0x23
    31e6:	7c a1       	ldd	r23, Y+36	; 0x24
    31e8:	8d a1       	ldd	r24, Y+37	; 0x25
    31ea:	9e a1       	ldd	r25, Y+38	; 0x26
    31ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31f0:	dc 01       	movw	r26, r24
    31f2:	cb 01       	movw	r24, r22
    31f4:	9a a3       	std	Y+34, r25	; 0x22
    31f6:	89 a3       	std	Y+33, r24	; 0x21
    31f8:	89 a1       	ldd	r24, Y+33	; 0x21
    31fa:	9a a1       	ldd	r25, Y+34	; 0x22
    31fc:	9e 8f       	std	Y+30, r25	; 0x1e
    31fe:	8d 8f       	std	Y+29, r24	; 0x1d
    3200:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3202:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3204:	01 97       	sbiw	r24, 0x01	; 1
    3206:	f1 f7       	brne	.-4      	; 0x3204 <main+0x13e4>
    3208:	9e 8f       	std	Y+30, r25	; 0x1e
    320a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(150);
	LCD_CUSTUM_CHAR(person1_frame3, 0, 7, 0);
    320c:	ce 01       	movw	r24, r28
    320e:	8d 53       	subi	r24, 0x3D	; 61
    3210:	9f 4f       	sbci	r25, 0xFF	; 255
    3212:	60 e0       	ldi	r22, 0x00	; 0
    3214:	47 e0       	ldi	r20, 0x07	; 7
    3216:	20 e0       	ldi	r18, 0x00	; 0
    3218:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
	LCD_CUSTUM_CHAR(person2_frame3, 1,7, 1);
    321c:	ce 01       	movw	r24, r28
    321e:	85 52       	subi	r24, 0x25	; 37
    3220:	9f 4f       	sbci	r25, 0xFF	; 255
    3222:	61 e0       	ldi	r22, 0x01	; 1
    3224:	47 e0       	ldi	r20, 0x07	; 7
    3226:	21 e0       	ldi	r18, 0x01	; 1
    3228:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
    322c:	80 e0       	ldi	r24, 0x00	; 0
    322e:	90 e0       	ldi	r25, 0x00	; 0
    3230:	a6 e1       	ldi	r26, 0x16	; 22
    3232:	b3 e4       	ldi	r27, 0x43	; 67
    3234:	89 8f       	std	Y+25, r24	; 0x19
    3236:	9a 8f       	std	Y+26, r25	; 0x1a
    3238:	ab 8f       	std	Y+27, r26	; 0x1b
    323a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    323c:	69 8d       	ldd	r22, Y+25	; 0x19
    323e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3240:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3242:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3244:	20 e0       	ldi	r18, 0x00	; 0
    3246:	30 e0       	ldi	r19, 0x00	; 0
    3248:	4a ef       	ldi	r20, 0xFA	; 250
    324a:	54 e4       	ldi	r21, 0x44	; 68
    324c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3250:	dc 01       	movw	r26, r24
    3252:	cb 01       	movw	r24, r22
    3254:	8d 8b       	std	Y+21, r24	; 0x15
    3256:	9e 8b       	std	Y+22, r25	; 0x16
    3258:	af 8b       	std	Y+23, r26	; 0x17
    325a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    325c:	6d 89       	ldd	r22, Y+21	; 0x15
    325e:	7e 89       	ldd	r23, Y+22	; 0x16
    3260:	8f 89       	ldd	r24, Y+23	; 0x17
    3262:	98 8d       	ldd	r25, Y+24	; 0x18
    3264:	20 e0       	ldi	r18, 0x00	; 0
    3266:	30 e0       	ldi	r19, 0x00	; 0
    3268:	40 e8       	ldi	r20, 0x80	; 128
    326a:	5f e3       	ldi	r21, 0x3F	; 63
    326c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3270:	88 23       	and	r24, r24
    3272:	2c f4       	brge	.+10     	; 0x327e <main+0x145e>
		__ticks = 1;
    3274:	81 e0       	ldi	r24, 0x01	; 1
    3276:	90 e0       	ldi	r25, 0x00	; 0
    3278:	9c 8b       	std	Y+20, r25	; 0x14
    327a:	8b 8b       	std	Y+19, r24	; 0x13
    327c:	3f c0       	rjmp	.+126    	; 0x32fc <main+0x14dc>
	else if (__tmp > 65535)
    327e:	6d 89       	ldd	r22, Y+21	; 0x15
    3280:	7e 89       	ldd	r23, Y+22	; 0x16
    3282:	8f 89       	ldd	r24, Y+23	; 0x17
    3284:	98 8d       	ldd	r25, Y+24	; 0x18
    3286:	20 e0       	ldi	r18, 0x00	; 0
    3288:	3f ef       	ldi	r19, 0xFF	; 255
    328a:	4f e7       	ldi	r20, 0x7F	; 127
    328c:	57 e4       	ldi	r21, 0x47	; 71
    328e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3292:	18 16       	cp	r1, r24
    3294:	4c f5       	brge	.+82     	; 0x32e8 <main+0x14c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3296:	69 8d       	ldd	r22, Y+25	; 0x19
    3298:	7a 8d       	ldd	r23, Y+26	; 0x1a
    329a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    329c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    329e:	20 e0       	ldi	r18, 0x00	; 0
    32a0:	30 e0       	ldi	r19, 0x00	; 0
    32a2:	40 e2       	ldi	r20, 0x20	; 32
    32a4:	51 e4       	ldi	r21, 0x41	; 65
    32a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32aa:	dc 01       	movw	r26, r24
    32ac:	cb 01       	movw	r24, r22
    32ae:	bc 01       	movw	r22, r24
    32b0:	cd 01       	movw	r24, r26
    32b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32b6:	dc 01       	movw	r26, r24
    32b8:	cb 01       	movw	r24, r22
    32ba:	9c 8b       	std	Y+20, r25	; 0x14
    32bc:	8b 8b       	std	Y+19, r24	; 0x13
    32be:	0f c0       	rjmp	.+30     	; 0x32de <main+0x14be>
    32c0:	88 ec       	ldi	r24, 0xC8	; 200
    32c2:	90 e0       	ldi	r25, 0x00	; 0
    32c4:	9a 8b       	std	Y+18, r25	; 0x12
    32c6:	89 8b       	std	Y+17, r24	; 0x11
    32c8:	89 89       	ldd	r24, Y+17	; 0x11
    32ca:	9a 89       	ldd	r25, Y+18	; 0x12
    32cc:	01 97       	sbiw	r24, 0x01	; 1
    32ce:	f1 f7       	brne	.-4      	; 0x32cc <main+0x14ac>
    32d0:	9a 8b       	std	Y+18, r25	; 0x12
    32d2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32d4:	8b 89       	ldd	r24, Y+19	; 0x13
    32d6:	9c 89       	ldd	r25, Y+20	; 0x14
    32d8:	01 97       	sbiw	r24, 0x01	; 1
    32da:	9c 8b       	std	Y+20, r25	; 0x14
    32dc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32de:	8b 89       	ldd	r24, Y+19	; 0x13
    32e0:	9c 89       	ldd	r25, Y+20	; 0x14
    32e2:	00 97       	sbiw	r24, 0x00	; 0
    32e4:	69 f7       	brne	.-38     	; 0x32c0 <main+0x14a0>
    32e6:	14 c0       	rjmp	.+40     	; 0x3310 <main+0x14f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32e8:	6d 89       	ldd	r22, Y+21	; 0x15
    32ea:	7e 89       	ldd	r23, Y+22	; 0x16
    32ec:	8f 89       	ldd	r24, Y+23	; 0x17
    32ee:	98 8d       	ldd	r25, Y+24	; 0x18
    32f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32f4:	dc 01       	movw	r26, r24
    32f6:	cb 01       	movw	r24, r22
    32f8:	9c 8b       	std	Y+20, r25	; 0x14
    32fa:	8b 8b       	std	Y+19, r24	; 0x13
    32fc:	8b 89       	ldd	r24, Y+19	; 0x13
    32fe:	9c 89       	ldd	r25, Y+20	; 0x14
    3300:	98 8b       	std	Y+16, r25	; 0x10
    3302:	8f 87       	std	Y+15, r24	; 0x0f
    3304:	8f 85       	ldd	r24, Y+15	; 0x0f
    3306:	98 89       	ldd	r25, Y+16	; 0x10
    3308:	01 97       	sbiw	r24, 0x01	; 1
    330a:	f1 f7       	brne	.-4      	; 0x3308 <main+0x14e8>
    330c:	98 8b       	std	Y+16, r25	; 0x10
    330e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(150);
	LCD_CUSTUM_CHAR(person1_frame3, 0, 7, 0);
    3310:	ce 01       	movw	r24, r28
    3312:	8d 53       	subi	r24, 0x3D	; 61
    3314:	9f 4f       	sbci	r25, 0xFF	; 255
    3316:	60 e0       	ldi	r22, 0x00	; 0
    3318:	47 e0       	ldi	r20, 0x07	; 7
    331a:	20 e0       	ldi	r18, 0x00	; 0
    331c:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
	LCD_CUSTUM_CHAR(person2_frame4, 1,7, 1);
    3320:	ce 01       	movw	r24, r28
    3322:	8d 51       	subi	r24, 0x1D	; 29
    3324:	9f 4f       	sbci	r25, 0xFF	; 255
    3326:	61 e0       	ldi	r22, 0x01	; 1
    3328:	47 e0       	ldi	r20, 0x07	; 7
    332a:	21 e0       	ldi	r18, 0x01	; 1
    332c:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <LCD_CUSTUM_CHAR>
    3330:	80 e0       	ldi	r24, 0x00	; 0
    3332:	90 e0       	ldi	r25, 0x00	; 0
    3334:	a6 e1       	ldi	r26, 0x16	; 22
    3336:	b3 e4       	ldi	r27, 0x43	; 67
    3338:	8b 87       	std	Y+11, r24	; 0x0b
    333a:	9c 87       	std	Y+12, r25	; 0x0c
    333c:	ad 87       	std	Y+13, r26	; 0x0d
    333e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3340:	6b 85       	ldd	r22, Y+11	; 0x0b
    3342:	7c 85       	ldd	r23, Y+12	; 0x0c
    3344:	8d 85       	ldd	r24, Y+13	; 0x0d
    3346:	9e 85       	ldd	r25, Y+14	; 0x0e
    3348:	20 e0       	ldi	r18, 0x00	; 0
    334a:	30 e0       	ldi	r19, 0x00	; 0
    334c:	4a ef       	ldi	r20, 0xFA	; 250
    334e:	54 e4       	ldi	r21, 0x44	; 68
    3350:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3354:	dc 01       	movw	r26, r24
    3356:	cb 01       	movw	r24, r22
    3358:	8f 83       	std	Y+7, r24	; 0x07
    335a:	98 87       	std	Y+8, r25	; 0x08
    335c:	a9 87       	std	Y+9, r26	; 0x09
    335e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3360:	6f 81       	ldd	r22, Y+7	; 0x07
    3362:	78 85       	ldd	r23, Y+8	; 0x08
    3364:	89 85       	ldd	r24, Y+9	; 0x09
    3366:	9a 85       	ldd	r25, Y+10	; 0x0a
    3368:	20 e0       	ldi	r18, 0x00	; 0
    336a:	30 e0       	ldi	r19, 0x00	; 0
    336c:	40 e8       	ldi	r20, 0x80	; 128
    336e:	5f e3       	ldi	r21, 0x3F	; 63
    3370:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3374:	88 23       	and	r24, r24
    3376:	2c f4       	brge	.+10     	; 0x3382 <main+0x1562>
		__ticks = 1;
    3378:	81 e0       	ldi	r24, 0x01	; 1
    337a:	90 e0       	ldi	r25, 0x00	; 0
    337c:	9e 83       	std	Y+6, r25	; 0x06
    337e:	8d 83       	std	Y+5, r24	; 0x05
    3380:	3f c0       	rjmp	.+126    	; 0x3400 <main+0x15e0>
	else if (__tmp > 65535)
    3382:	6f 81       	ldd	r22, Y+7	; 0x07
    3384:	78 85       	ldd	r23, Y+8	; 0x08
    3386:	89 85       	ldd	r24, Y+9	; 0x09
    3388:	9a 85       	ldd	r25, Y+10	; 0x0a
    338a:	20 e0       	ldi	r18, 0x00	; 0
    338c:	3f ef       	ldi	r19, 0xFF	; 255
    338e:	4f e7       	ldi	r20, 0x7F	; 127
    3390:	57 e4       	ldi	r21, 0x47	; 71
    3392:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3396:	18 16       	cp	r1, r24
    3398:	4c f5       	brge	.+82     	; 0x33ec <main+0x15cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    339a:	6b 85       	ldd	r22, Y+11	; 0x0b
    339c:	7c 85       	ldd	r23, Y+12	; 0x0c
    339e:	8d 85       	ldd	r24, Y+13	; 0x0d
    33a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    33a2:	20 e0       	ldi	r18, 0x00	; 0
    33a4:	30 e0       	ldi	r19, 0x00	; 0
    33a6:	40 e2       	ldi	r20, 0x20	; 32
    33a8:	51 e4       	ldi	r21, 0x41	; 65
    33aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33ae:	dc 01       	movw	r26, r24
    33b0:	cb 01       	movw	r24, r22
    33b2:	bc 01       	movw	r22, r24
    33b4:	cd 01       	movw	r24, r26
    33b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33ba:	dc 01       	movw	r26, r24
    33bc:	cb 01       	movw	r24, r22
    33be:	9e 83       	std	Y+6, r25	; 0x06
    33c0:	8d 83       	std	Y+5, r24	; 0x05
    33c2:	0f c0       	rjmp	.+30     	; 0x33e2 <main+0x15c2>
    33c4:	88 ec       	ldi	r24, 0xC8	; 200
    33c6:	90 e0       	ldi	r25, 0x00	; 0
    33c8:	9c 83       	std	Y+4, r25	; 0x04
    33ca:	8b 83       	std	Y+3, r24	; 0x03
    33cc:	8b 81       	ldd	r24, Y+3	; 0x03
    33ce:	9c 81       	ldd	r25, Y+4	; 0x04
    33d0:	01 97       	sbiw	r24, 0x01	; 1
    33d2:	f1 f7       	brne	.-4      	; 0x33d0 <main+0x15b0>
    33d4:	9c 83       	std	Y+4, r25	; 0x04
    33d6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33d8:	8d 81       	ldd	r24, Y+5	; 0x05
    33da:	9e 81       	ldd	r25, Y+6	; 0x06
    33dc:	01 97       	sbiw	r24, 0x01	; 1
    33de:	9e 83       	std	Y+6, r25	; 0x06
    33e0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33e2:	8d 81       	ldd	r24, Y+5	; 0x05
    33e4:	9e 81       	ldd	r25, Y+6	; 0x06
    33e6:	00 97       	sbiw	r24, 0x00	; 0
    33e8:	69 f7       	brne	.-38     	; 0x33c4 <main+0x15a4>
    33ea:	8e ce       	rjmp	.-740    	; 0x3108 <main+0x12e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33ec:	6f 81       	ldd	r22, Y+7	; 0x07
    33ee:	78 85       	ldd	r23, Y+8	; 0x08
    33f0:	89 85       	ldd	r24, Y+9	; 0x09
    33f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    33f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33f8:	dc 01       	movw	r26, r24
    33fa:	cb 01       	movw	r24, r22
    33fc:	9e 83       	std	Y+6, r25	; 0x06
    33fe:	8d 83       	std	Y+5, r24	; 0x05
    3400:	8d 81       	ldd	r24, Y+5	; 0x05
    3402:	9e 81       	ldd	r25, Y+6	; 0x06
    3404:	9a 83       	std	Y+2, r25	; 0x02
    3406:	89 83       	std	Y+1, r24	; 0x01
    3408:	89 81       	ldd	r24, Y+1	; 0x01
    340a:	9a 81       	ldd	r25, Y+2	; 0x02
    340c:	01 97       	sbiw	r24, 0x01	; 1
    340e:	f1 f7       	brne	.-4      	; 0x340c <main+0x15ec>
    3410:	9a 83       	std	Y+2, r25	; 0x02
    3412:	89 83       	std	Y+1, r24	; 0x01
    3414:	79 ce       	rjmp	.-782    	; 0x3108 <main+0x12e8>

00003416 <__udivmodhi4>:
    3416:	aa 1b       	sub	r26, r26
    3418:	bb 1b       	sub	r27, r27
    341a:	51 e1       	ldi	r21, 0x11	; 17
    341c:	07 c0       	rjmp	.+14     	; 0x342c <__udivmodhi4_ep>

0000341e <__udivmodhi4_loop>:
    341e:	aa 1f       	adc	r26, r26
    3420:	bb 1f       	adc	r27, r27
    3422:	a6 17       	cp	r26, r22
    3424:	b7 07       	cpc	r27, r23
    3426:	10 f0       	brcs	.+4      	; 0x342c <__udivmodhi4_ep>
    3428:	a6 1b       	sub	r26, r22
    342a:	b7 0b       	sbc	r27, r23

0000342c <__udivmodhi4_ep>:
    342c:	88 1f       	adc	r24, r24
    342e:	99 1f       	adc	r25, r25
    3430:	5a 95       	dec	r21
    3432:	a9 f7       	brne	.-22     	; 0x341e <__udivmodhi4_loop>
    3434:	80 95       	com	r24
    3436:	90 95       	com	r25
    3438:	bc 01       	movw	r22, r24
    343a:	cd 01       	movw	r24, r26
    343c:	08 95       	ret

0000343e <__prologue_saves__>:
    343e:	2f 92       	push	r2
    3440:	3f 92       	push	r3
    3442:	4f 92       	push	r4
    3444:	5f 92       	push	r5
    3446:	6f 92       	push	r6
    3448:	7f 92       	push	r7
    344a:	8f 92       	push	r8
    344c:	9f 92       	push	r9
    344e:	af 92       	push	r10
    3450:	bf 92       	push	r11
    3452:	cf 92       	push	r12
    3454:	df 92       	push	r13
    3456:	ef 92       	push	r14
    3458:	ff 92       	push	r15
    345a:	0f 93       	push	r16
    345c:	1f 93       	push	r17
    345e:	cf 93       	push	r28
    3460:	df 93       	push	r29
    3462:	cd b7       	in	r28, 0x3d	; 61
    3464:	de b7       	in	r29, 0x3e	; 62
    3466:	ca 1b       	sub	r28, r26
    3468:	db 0b       	sbc	r29, r27
    346a:	0f b6       	in	r0, 0x3f	; 63
    346c:	f8 94       	cli
    346e:	de bf       	out	0x3e, r29	; 62
    3470:	0f be       	out	0x3f, r0	; 63
    3472:	cd bf       	out	0x3d, r28	; 61
    3474:	09 94       	ijmp

00003476 <__epilogue_restores__>:
    3476:	2a 88       	ldd	r2, Y+18	; 0x12
    3478:	39 88       	ldd	r3, Y+17	; 0x11
    347a:	48 88       	ldd	r4, Y+16	; 0x10
    347c:	5f 84       	ldd	r5, Y+15	; 0x0f
    347e:	6e 84       	ldd	r6, Y+14	; 0x0e
    3480:	7d 84       	ldd	r7, Y+13	; 0x0d
    3482:	8c 84       	ldd	r8, Y+12	; 0x0c
    3484:	9b 84       	ldd	r9, Y+11	; 0x0b
    3486:	aa 84       	ldd	r10, Y+10	; 0x0a
    3488:	b9 84       	ldd	r11, Y+9	; 0x09
    348a:	c8 84       	ldd	r12, Y+8	; 0x08
    348c:	df 80       	ldd	r13, Y+7	; 0x07
    348e:	ee 80       	ldd	r14, Y+6	; 0x06
    3490:	fd 80       	ldd	r15, Y+5	; 0x05
    3492:	0c 81       	ldd	r16, Y+4	; 0x04
    3494:	1b 81       	ldd	r17, Y+3	; 0x03
    3496:	aa 81       	ldd	r26, Y+2	; 0x02
    3498:	b9 81       	ldd	r27, Y+1	; 0x01
    349a:	ce 0f       	add	r28, r30
    349c:	d1 1d       	adc	r29, r1
    349e:	0f b6       	in	r0, 0x3f	; 63
    34a0:	f8 94       	cli
    34a2:	de bf       	out	0x3e, r29	; 62
    34a4:	0f be       	out	0x3f, r0	; 63
    34a6:	cd bf       	out	0x3d, r28	; 61
    34a8:	ed 01       	movw	r28, r26
    34aa:	08 95       	ret

000034ac <_exit>:
    34ac:	f8 94       	cli

000034ae <__stop_program>:
    34ae:	ff cf       	rjmp	.-2      	; 0x34ae <__stop_program>
